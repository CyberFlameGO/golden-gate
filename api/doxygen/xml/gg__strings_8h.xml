<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.16">
  <compounddef id="gg__strings_8h" kind="file" language="C++">
    <compoundname>gg_strings.h</compoundname>
    <includes local="no">stdbool.h</includes>
    <includes local="no">stdint.h</includes>
    <includes refid="gg__memory_8h" local="yes">xp/common/gg_memory.h</includes>
    <includes refid="gg__results_8h" local="yes">xp/common/gg_results.h</includes>
    <includes refid="gg__types_8h" local="yes">xp/common/gg_types.h</includes>
    <includedby refid="gg__io_8h" local="yes">xp/common/gg_io.h</includedby>
    <includedby refid="gg__logging_8h" local="yes">xp/common/gg_logging.h</includedby>
    <includedby refid="gg__common_8h" local="yes">xp/common/gg_common.h</includedby>
    <includedby refid="gg__system_8h" local="yes">xp/common/gg_system.h</includedby>
    <includedby refid="gg__utils_8h" local="yes">xp/common/gg_utils.h</includedby>
    <includedby refid="gg__data__probe_8h" local="yes">xp/utils/gg_data_probe.h</includedby>
    <incdepgraph>
      <node id="2">
        <label>stdbool.h</label>
      </node>
      <node id="7">
        <label>assert.h</label>
      </node>
      <node id="4">
        <label>xp/common/gg_memory.h</label>
        <link refid="gg__memory_8h"/>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
      </node>
      <node id="3">
        <label>stdint.h</label>
      </node>
      <node id="1">
        <label>xp/common/gg_strings.h</label>
        <link refid="gg__strings_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
      </node>
      <node id="5">
        <label>stddef.h</label>
      </node>
      <node id="9">
        <label>xp/common/gg_types.h</label>
        <link refid="gg__types_8h"/>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="8">
        <label>xp/common/gg_results.h</label>
        <link refid="gg__results_8h"/>
      </node>
      <node id="6">
        <label>xp/common/gg_port.h</label>
        <link refid="gg__port_8h"/>
        <childnode refid="7" relation="include">
        </childnode>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="10">
        <label>xp/sockets/ports/nip/gg_nip_sockets.h</label>
        <link refid="gg__nip__sockets_8h"/>
      </node>
      <node id="33">
        <label>xp/common/gg_threads.h</label>
        <link refid="gg__threads_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
      </node>
      <node id="28">
        <label>xp/utils/gg_print_data_sink.h</label>
        <link refid="gg__print__data__sink_8h"/>
      </node>
      <node id="17">
        <label>xp/coap/gg_coap.h</label>
        <link refid="gg__coap_8h"/>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
      </node>
      <node id="16">
        <label>xp/tls/ports/mbedtls/gg_mbedtls_tls.h</label>
        <link refid="gg__mbedtls__tls_8h"/>
      </node>
      <node id="20">
        <label>xp/coap/gg_coap_blockwise.h</label>
        <link refid="gg__coap__blockwise_8h"/>
      </node>
      <node id="25">
        <label>xp/utils/gg_memory_data_sink.h</label>
        <link refid="gg__memory__data__sink_8h"/>
      </node>
      <node id="5">
        <label>xp/stack_builder/gg_stack_builder.h</label>
        <link refid="gg__stack__builder_8h"/>
      </node>
      <node id="3">
        <label>xp/common/gg_common.h</label>
        <link refid="gg__common_8h"/>
      </node>
      <node id="6">
        <label>xp/sockets/gg_sockets.h</label>
        <link refid="gg__sockets_8h"/>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
      </node>
      <node id="35">
        <label>xp/utils/gg_data_probe.h</label>
        <link refid="gg__data__probe_8h"/>
      </node>
      <node id="26">
        <label>xp/utils/gg_blaster_data_source.h</label>
        <link refid="gg__blaster__data__source_8h"/>
      </node>
      <node id="11">
        <label>xp/nip/gg_nip.h</label>
        <link refid="gg__nip_8h"/>
      </node>
      <node id="27">
        <label>xp/utils/gg_perf_data_sink.h</label>
        <link refid="gg__perf__data__sink_8h"/>
      </node>
      <node id="8">
        <label>xp/sockets/ports/bsd/gg_bsd_sockets.h</label>
        <link refid="gg__bsd__sockets_8h"/>
      </node>
      <node id="15">
        <label>xp/tls/gg_tls.h</label>
        <link refid="gg__tls_8h"/>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
      </node>
      <node id="1">
        <label>xp/common/gg_strings.h</label>
        <link refid="gg__strings_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="30" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="31" relation="include">
        </childnode>
        <childnode refid="32" relation="include">
        </childnode>
        <childnode refid="35" relation="include">
        </childnode>
      </node>
      <node id="29">
        <label>xp/utils/gg_activity_data_monitor.h</label>
        <link refid="gg__activity__data__monitor_8h"/>
      </node>
      <node id="4">
        <label>xp/gattlink/gg_gattlink_generic_client.h</label>
        <link refid="gg__gattlink__generic__client_8h"/>
        <childnode refid="5" relation="include">
        </childnode>
      </node>
      <node id="9">
        <label>xp/sockets/ports/lwip/gg_lwip_sockets.h</label>
        <link refid="gg__lwip__sockets_8h"/>
      </node>
      <node id="31">
        <label>xp/common/gg_system.h</label>
        <link refid="gg__system_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>xp/common/gg_io.h</label>
        <link refid="gg__io_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
        <childnode refid="24" relation="include">
        </childnode>
        <childnode refid="25" relation="include">
        </childnode>
        <childnode refid="26" relation="include">
        </childnode>
        <childnode refid="27" relation="include">
        </childnode>
        <childnode refid="28" relation="include">
        </childnode>
        <childnode refid="29" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
      </node>
      <node id="7">
        <label>xp/protocols/gg_ipv4_protocol.h</label>
        <link refid="gg__ipv4__protocol_8h"/>
      </node>
      <node id="13">
        <label>xp/loop/gg_loop_base.h</label>
        <link refid="gg__loop__base_8h"/>
      </node>
      <node id="12">
        <label>xp/loop/gg_loop.h</label>
        <link refid="gg__loop_8h"/>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
      </node>
      <node id="30">
        <label>xp/common/gg_logging.h</label>
        <link refid="gg__logging_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="23">
        <label>xp/utils/gg_async_pipe.h</label>
        <link refid="gg__async__pipe_8h"/>
      </node>
      <node id="18">
        <label>xp/coap/gg_coap_endpoint.h</label>
        <link refid="gg__coap__endpoint_8h"/>
      </node>
      <node id="32">
        <label>xp/common/gg_utils.h</label>
        <link refid="gg__utils_8h"/>
        <childnode refid="33" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="34" relation="include">
        </childnode>
      </node>
      <node id="34">
        <label>xp/module/gg_module.h</label>
        <link refid="gg__module_8h"/>
      </node>
      <node id="21">
        <label>xp/coap/gg_coap_filters.h</label>
        <link refid="gg__coap__filters_8h"/>
      </node>
      <node id="19">
        <label>xp/coap/gg_coap_message.h</label>
        <link refid="gg__coap__message_8h"/>
      </node>
      <node id="24">
        <label>xp/utils/gg_memory_data_source.h</label>
        <link refid="gg__memory__data__source_8h"/>
      </node>
      <node id="14">
        <label>xp/loop/extensions/gg_loop_fd.h</label>
        <link refid="gg__loop__fd_8h"/>
      </node>
      <node id="22">
        <label>xp/utils/gg_coap_event_emitter.h</label>
        <link refid="gg__coap__event__emitter_8h"/>
      </node>
    </invincdepgraph>
    <innerclass refid="struct_g_g___string" prot="public">GG_String</innerclass>
    <innerclass refid="struct_g_g___string_buffer" prot="public">GG_StringBuffer</innerclass>
      <sectiondef kind="define">
      <memberdef kind="define" id="group___strings_1ga38450d9cd6f14fcf3fa85bcc81053464" prot="public" static="no">
        <name>GG_STRING_SEARCH_FAILED</name>
        <initializer>(-1)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="xp/common/gg_strings.h" line="37" column="9" bodyfile="xp/common/gg_strings.h" bodystart="37" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___strings_1ga6ae1b06a01b1ad43c4e3fa8ccb26fd2b" prot="public" static="no">
        <name>GG_EMPTY_STRING</name>
        <initializer>{0}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="xp/common/gg_strings.h" line="38" column="9" bodyfile="xp/common/gg_strings.h" bodystart="38" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___strings_1ga231001aaf740a8c77e2c433b8b95c8c6" prot="public" static="no">
        <name>GG_StringsEqual</name>
        <param><defname>s1</defname></param>
        <param><defname>s2</defname></param>
        <initializer>(strcmp((s1), (s2)) == 0)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="xp/common/gg_strings.h" line="45" column="9" bodyfile="xp/common/gg_strings.h" bodystart="45" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___strings_1gae29cb3496fce8838675daf2228d825dc" prot="public" static="no">
        <name>GG_String_GetBuffer</name>
        <param><defname>str</defname></param>
        <initializer>( ((<ref refid="struct_g_g___string_buffer" kindref="compound">GG_StringBuffer</ref>*)((void*)(str)-&gt;chars))-1 )</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="xp/common/gg_strings.h" line="63" column="9" bodyfile="xp/common/gg_strings.h" bodystart="63" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___strings_1gaa54521c6823fdc92e3275c289aff044f" prot="public" static="no">
        <name>GG_String_Construct</name>
        <param><defname>str</defname></param>
        <initializer>do { \
    (str)-&gt;chars = <ref refid="group___types_1ga070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;              \
} while(0)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="xp/common/gg_strings.h" line="64" column="9" bodyfile="xp/common/gg_strings.h" bodystart="64" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___strings_1ga0f0afb9eb2a5a6d676283b66dc9d98ae" prot="public" static="no">
        <name>GG_String_Destruct</name>
        <param><defname>str</defname></param>
        <initializer>do {                       \
    if ((str)-&gt;chars) {                                    \
        <ref refid="group___memory_1gae915ba2c56af78faf745ba1e99a5d7e1" kindref="member">GG_FreeMemory</ref>((void*)GG_String_GetBuffer((str)));  \
        (str)-&gt;chars = <ref refid="group___types_1ga070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;                               \
    }                                                      \
} while(0)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="xp/common/gg_strings.h" line="67" column="9" bodyfile="xp/common/gg_strings.h" bodystart="67" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___strings_1ga3c6425a6f3e7928acd541a76afaee60a" prot="public" static="no">
        <name>GG_String_GetChar</name>
        <param><defname>str</defname></param>
        <param><defname>index</defname></param>
        <initializer>((str)-&gt;chars[(index)])</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="xp/common/gg_strings.h" line="73" column="9" bodyfile="xp/common/gg_strings.h" bodystart="73" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___strings_1gac048ad21be021feb2a4975ecbb0fafc5" prot="public" static="no">
        <name>GG_String_SetChar</name>
        <param><defname>str</defname></param>
        <param><defname>index</defname></param>
        <param><defname>c</defname></param>
        <initializer>do {          \
    (str)-&gt;chars[(index)] = (c);                       \
} while(0)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="xp/common/gg_strings.h" line="74" column="9" bodyfile="xp/common/gg_strings.h" bodystart="74" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___strings_1ga395068bdf0b157f9872a021832a3be4a" prot="public" static="no">
        <name>GG_String_GetLength</name>
        <param><defname>str</defname></param>
        <initializer>((str)-&gt;chars?(GG_String_GetBuffer(str)-&gt;length):0)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="xp/common/gg_strings.h" line="77" column="9" bodyfile="xp/common/gg_strings.h" bodystart="77" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___strings_1ga2182745b638f3ed87610d3638dfd5b21" prot="public" static="no">
        <name>GG_String_GetChars</name>
        <param><defname>str</defname></param>
        <initializer>((str)-&gt;chars?(const char*)((str)-&gt;chars):GG_String_EmptyString)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="xp/common/gg_strings.h" line="78" column="9" bodyfile="xp/common/gg_strings.h" bodystart="78" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___strings_1gac6cc21e18cf3ef814340a4010d5f4fd1" prot="public" static="no">
        <name>GG_String_UseChars</name>
        <param><defname>str</defname></param>
        <initializer>((str)-&gt;chars?(str)-&gt;chars:GG_CONST_CAST(GG_String_EmptyString, char*))</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="xp/common/gg_strings.h" line="79" column="9" bodyfile="xp/common/gg_strings.h" bodystart="79" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___strings_1gacbf4883a36ccaea08f5226c0546e4a48" prot="public" static="no">
        <name>GG_CSTR</name>
        <param><defname>str</defname></param>
        <initializer>GG_String_GetChars(&amp;(str))</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="xp/common/gg_strings.h" line="80" column="9" bodyfile="xp/common/gg_strings.h" bodystart="80" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___strings_1ga76b09252c3d08c8e1b60b6d08304fdc0" prot="public" static="no">
        <name>GG_String_IsEmpty</name>
        <param><defname>str</defname></param>
        <initializer>(GG_String_GetLength((str))==0)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="xp/common/gg_strings.h" line="81" column="9" bodyfile="xp/common/gg_strings.h" bodystart="81" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___strings_1gad7e7d4365af77da222b39062835bf1fc" prot="public" static="no">
        <name>GG_String_Init</name>
        <param><defname>str</defname></param>
        <initializer>do {(str).chars = <ref refid="group___types_1ga070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>; } while(0)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="xp/common/gg_strings.h" line="82" column="9" bodyfile="xp/common/gg_strings.h" bodystart="82" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="var">
      <memberdef kind="variable" id="group___strings_1ga04207cb115b73ce915db8d7d1892430a" prot="public" static="no" mutable="no">
        <type>const char *const</type>
        <definition>const char* const GG_String_EmptyString</definition>
        <argsstring></argsstring>
        <name>GG_String_EmptyString</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="xp/common/gg_strings.h" line="40" column="25" declfile="xp/common/gg_strings.h" declline="40" declcolumn="25"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="group___strings_1gae6b6d09a7e41104ae05a10ccd077df1a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="struct_g_g___string" kindref="compound">GG_String</ref></type>
        <definition>GG_String GG_String_Create</definition>
        <argsstring>(const char *s)</argsstring>
        <name>GG_String_Create</name>
        <param>
          <type>const char *</type>
          <declname>s</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="xp/common/gg_strings.h" line="88" column="1" declfile="xp/common/gg_strings.h" declline="88" declcolumn="1"/>
      </memberdef>
      <memberdef kind="function" id="group___strings_1gae7d03b3e84d089c5a3890428728fb740" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="struct_g_g___string" kindref="compound">GG_String</ref></type>
        <definition>GG_String GG_String_CreateFromSubString</definition>
        <argsstring>(const char *s, unsigned int first, size_t length)</argsstring>
        <name>GG_String_CreateFromSubString</name>
        <param>
          <type>const char *</type>
          <declname>s</declname>
        </param>
        <param>
          <type>unsigned int</type>
          <declname>first</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>length</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="xp/common/gg_strings.h" line="91" column="1" declfile="xp/common/gg_strings.h" declline="91" declcolumn="1"/>
      </memberdef>
      <memberdef kind="function" id="group___strings_1gaa8b838d1e2620792a12a493693c832a8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="struct_g_g___string" kindref="compound">GG_String</ref></type>
        <definition>GG_String GG_String_Clone</definition>
        <argsstring>(const GG_String *str)</argsstring>
        <name>GG_String_Clone</name>
        <param>
          <type>const <ref refid="struct_g_g___string" kindref="compound">GG_String</ref> *</type>
          <declname>str</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="xp/common/gg_strings.h" line="94" column="1" declfile="xp/common/gg_strings.h" declline="94" declcolumn="1"/>
      </memberdef>
      <memberdef kind="function" id="group___strings_1gac551599b739c73af8ed8e9ff4eef9c52" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void GG_String_Copy</definition>
        <argsstring>(GG_String *str, const GG_String *other)</argsstring>
        <name>GG_String_Copy</name>
        <param>
          <type><ref refid="struct_g_g___string" kindref="compound">GG_String</ref> *</type>
          <declname>str</declname>
        </param>
        <param>
          <type>const <ref refid="struct_g_g___string" kindref="compound">GG_String</ref> *</type>
          <declname>other</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="xp/common/gg_strings.h" line="97" column="1" declfile="xp/common/gg_strings.h" declline="97" declcolumn="1"/>
      </memberdef>
      <memberdef kind="function" id="group___strings_1ga17130011ec1811d0fc5c5d8966d90fac" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group___errors_1gacf7401469f33ad0744f7f1f7006fd021" kindref="member">GG_Result</ref></type>
        <definition>GG_Result GG_String_SetLength</definition>
        <argsstring>(GG_String *str, size_t length)</argsstring>
        <name>GG_String_SetLength</name>
        <param>
          <type><ref refid="struct_g_g___string" kindref="compound">GG_String</ref> *</type>
          <declname>str</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>length</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="xp/common/gg_strings.h" line="100" column="1" declfile="xp/common/gg_strings.h" declline="100" declcolumn="1"/>
      </memberdef>
      <memberdef kind="function" id="group___strings_1gab22035019b0780a9e4bc0205068bc3cb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group___errors_1gacf7401469f33ad0744f7f1f7006fd021" kindref="member">GG_Result</ref></type>
        <definition>GG_Result GG_String_Assign</definition>
        <argsstring>(GG_String *str, const char *chars)</argsstring>
        <name>GG_String_Assign</name>
        <param>
          <type><ref refid="struct_g_g___string" kindref="compound">GG_String</ref> *</type>
          <declname>str</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>chars</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="xp/common/gg_strings.h" line="103" column="1" declfile="xp/common/gg_strings.h" declline="103" declcolumn="1"/>
      </memberdef>
      <memberdef kind="function" id="group___strings_1ga07709083cac52c6d66704cef41378b27" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group___errors_1gacf7401469f33ad0744f7f1f7006fd021" kindref="member">GG_Result</ref></type>
        <definition>GG_Result GG_String_AssignN</definition>
        <argsstring>(GG_String *str, const char *chars, size_t size)</argsstring>
        <name>GG_String_AssignN</name>
        <param>
          <type><ref refid="struct_g_g___string" kindref="compound">GG_String</ref> *</type>
          <declname>str</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>chars</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>size</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="xp/common/gg_strings.h" line="106" column="1" declfile="xp/common/gg_strings.h" declline="106" declcolumn="1"/>
      </memberdef>
      <memberdef kind="function" id="group___strings_1ga9eaa8bf1891a717ecd7a42b471725009" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group___errors_1gacf7401469f33ad0744f7f1f7006fd021" kindref="member">GG_Result</ref></type>
        <definition>GG_Result GG_String_Append</definition>
        <argsstring>(GG_String *str, const char *other)</argsstring>
        <name>GG_String_Append</name>
        <param>
          <type><ref refid="struct_g_g___string" kindref="compound">GG_String</ref> *</type>
          <declname>str</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>other</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="xp/common/gg_strings.h" line="109" column="1" declfile="xp/common/gg_strings.h" declline="109" declcolumn="1"/>
      </memberdef>
      <memberdef kind="function" id="group___strings_1ga4324c9e42cb936978e0fa19b885388d0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group___errors_1gacf7401469f33ad0744f7f1f7006fd021" kindref="member">GG_Result</ref></type>
        <definition>GG_Result GG_String_AppendSubString</definition>
        <argsstring>(GG_String *str, const char *other, size_t size)</argsstring>
        <name>GG_String_AppendSubString</name>
        <param>
          <type><ref refid="struct_g_g___string" kindref="compound">GG_String</ref> *</type>
          <declname>str</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>other</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>size</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="xp/common/gg_strings.h" line="112" column="1" declfile="xp/common/gg_strings.h" declline="112" declcolumn="1"/>
      </memberdef>
      <memberdef kind="function" id="group___strings_1ga59a34647753e01065d3572c5146ffa98" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group___errors_1gacf7401469f33ad0744f7f1f7006fd021" kindref="member">GG_Result</ref></type>
        <definition>GG_Result GG_String_AppendChar</definition>
        <argsstring>(GG_String *str, char c)</argsstring>
        <name>GG_String_AppendChar</name>
        <param>
          <type><ref refid="struct_g_g___string" kindref="compound">GG_String</ref> *</type>
          <declname>str</declname>
        </param>
        <param>
          <type>char</type>
          <declname>c</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="xp/common/gg_strings.h" line="115" column="1" declfile="xp/common/gg_strings.h" declline="115" declcolumn="1"/>
      </memberdef>
      <memberdef kind="function" id="group___strings_1ga8d15728dab853e0f22cc9ecd24925689" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="struct_g_g___string" kindref="compound">GG_String</ref></type>
        <definition>GG_String GG_String_Add</definition>
        <argsstring>(const GG_String *str1, const char *str2)</argsstring>
        <name>GG_String_Add</name>
        <param>
          <type>const <ref refid="struct_g_g___string" kindref="compound">GG_String</ref> *</type>
          <declname>str1</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>str2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="xp/common/gg_strings.h" line="118" column="1" declfile="xp/common/gg_strings.h" declline="118" declcolumn="1"/>
      </memberdef>
      <memberdef kind="function" id="group___strings_1gab17185a2dd0942f5307f02260b781012" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int GG_String_Compare</definition>
        <argsstring>(const GG_String *str, const char *s, bool ignore_case)</argsstring>
        <name>GG_String_Compare</name>
        <param>
          <type>const <ref refid="struct_g_g___string" kindref="compound">GG_String</ref> *</type>
          <declname>str</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>s</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>ignore_case</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="xp/common/gg_strings.h" line="121" column="1" declfile="xp/common/gg_strings.h" declline="121" declcolumn="1"/>
      </memberdef>
      <memberdef kind="function" id="group___strings_1gaa47ff4b5053d7feca34e3442b3ad9aa1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool GG_String_Equals</definition>
        <argsstring>(const GG_String *str, const char *s, bool ignore_case)</argsstring>
        <name>GG_String_Equals</name>
        <param>
          <type>const <ref refid="struct_g_g___string" kindref="compound">GG_String</ref> *</type>
          <declname>str</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>s</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>ignore_case</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="xp/common/gg_strings.h" line="124" column="1" declfile="xp/common/gg_strings.h" declline="124" declcolumn="1"/>
      </memberdef>
      <memberdef kind="function" id="group___strings_1ga3c54e5c93fd8f371865d265840d4069b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="struct_g_g___string" kindref="compound">GG_String</ref></type>
        <definition>GG_String GG_String_SubString</definition>
        <argsstring>(const GG_String *str, unsigned int first, size_t length)</argsstring>
        <name>GG_String_SubString</name>
        <param>
          <type>const <ref refid="struct_g_g___string" kindref="compound">GG_String</ref> *</type>
          <declname>str</declname>
        </param>
        <param>
          <type>unsigned int</type>
          <declname>first</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>length</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="xp/common/gg_strings.h" line="127" column="1" declfile="xp/common/gg_strings.h" declline="127" declcolumn="1"/>
      </memberdef>
      <memberdef kind="function" id="group___strings_1ga34186db9d23920526ae8e0590f0eaa58" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="struct_g_g___string" kindref="compound">GG_String</ref></type>
        <definition>GG_String GG_String_Left</definition>
        <argsstring>(const GG_String *str, size_t length)</argsstring>
        <name>GG_String_Left</name>
        <param>
          <type>const <ref refid="struct_g_g___string" kindref="compound">GG_String</ref> *</type>
          <declname>str</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>length</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="xp/common/gg_strings.h" line="130" column="1" declfile="xp/common/gg_strings.h" declline="130" declcolumn="1"/>
      </memberdef>
      <memberdef kind="function" id="group___strings_1ga1d74bb6d54b9e5348ad36316da9e2732" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="struct_g_g___string" kindref="compound">GG_String</ref></type>
        <definition>GG_String GG_String_Right</definition>
        <argsstring>(const GG_String *str, size_t length)</argsstring>
        <name>GG_String_Right</name>
        <param>
          <type>const <ref refid="struct_g_g___string" kindref="compound">GG_String</ref> *</type>
          <declname>str</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>length</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="xp/common/gg_strings.h" line="133" column="1" declfile="xp/common/gg_strings.h" declline="133" declcolumn="1"/>
      </memberdef>
      <memberdef kind="function" id="group___strings_1ga6c5dc5793e6965b5abcdd6284497a009" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group___errors_1gacf7401469f33ad0744f7f1f7006fd021" kindref="member">GG_Result</ref></type>
        <definition>GG_Result GG_String_Reserve</definition>
        <argsstring>(GG_String *str, size_t length)</argsstring>
        <name>GG_String_Reserve</name>
        <param>
          <type><ref refid="struct_g_g___string" kindref="compound">GG_String</ref> *</type>
          <declname>str</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>length</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="xp/common/gg_strings.h" line="136" column="1" declfile="xp/common/gg_strings.h" declline="136" declcolumn="1"/>
      </memberdef>
      <memberdef kind="function" id="group___strings_1gabb2f6addbd89629594e07d3249208b9f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="struct_g_g___string" kindref="compound">GG_String</ref></type>
        <definition>GG_String GG_String_ToLowercase</definition>
        <argsstring>(const GG_String *str)</argsstring>
        <name>GG_String_ToLowercase</name>
        <param>
          <type>const <ref refid="struct_g_g___string" kindref="compound">GG_String</ref> *</type>
          <declname>str</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="xp/common/gg_strings.h" line="139" column="1" declfile="xp/common/gg_strings.h" declline="139" declcolumn="1"/>
      </memberdef>
      <memberdef kind="function" id="group___strings_1ga54b22934358225b62bc621a216a05af7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="struct_g_g___string" kindref="compound">GG_String</ref></type>
        <definition>GG_String GG_String_ToUppercase</definition>
        <argsstring>(const GG_String *str)</argsstring>
        <name>GG_String_ToUppercase</name>
        <param>
          <type>const <ref refid="struct_g_g___string" kindref="compound">GG_String</ref> *</type>
          <declname>str</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="xp/common/gg_strings.h" line="142" column="1" declfile="xp/common/gg_strings.h" declline="142" declcolumn="1"/>
      </memberdef>
      <memberdef kind="function" id="group___strings_1ga726ed5f4a82ad12404403e33c4fee448" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group___errors_1gacf7401469f33ad0744f7f1f7006fd021" kindref="member">GG_Result</ref></type>
        <definition>GG_Result GG_String_ToInteger</definition>
        <argsstring>(const GG_String *str, int *value)</argsstring>
        <name>GG_String_ToInteger</name>
        <param>
          <type>const <ref refid="struct_g_g___string" kindref="compound">GG_String</ref> *</type>
          <declname>str</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="xp/common/gg_strings.h" line="145" column="1" declfile="xp/common/gg_strings.h" declline="145" declcolumn="1"/>
      </memberdef>
      <memberdef kind="function" id="group___strings_1ga0db1f94529b8d7064199c72a70451ecf" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void GG_String_MakeLowercase</definition>
        <argsstring>(GG_String *str)</argsstring>
        <name>GG_String_MakeLowercase</name>
        <param>
          <type><ref refid="struct_g_g___string" kindref="compound">GG_String</ref> *</type>
          <declname>str</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="xp/common/gg_strings.h" line="148" column="1" declfile="xp/common/gg_strings.h" declline="148" declcolumn="1"/>
      </memberdef>
      <memberdef kind="function" id="group___strings_1ga7ac7233d4e281962ba6b3958b8153f7a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void GG_String_MakeUppercase</definition>
        <argsstring>(GG_String *str)</argsstring>
        <name>GG_String_MakeUppercase</name>
        <param>
          <type><ref refid="struct_g_g___string" kindref="compound">GG_String</ref> *</type>
          <declname>str</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="xp/common/gg_strings.h" line="151" column="1" declfile="xp/common/gg_strings.h" declline="151" declcolumn="1"/>
      </memberdef>
      <memberdef kind="function" id="group___strings_1ga9d28ad7d9d26970a07cbb40024c34706" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void GG_String_Replace</definition>
        <argsstring>(GG_String *str, char a, char b)</argsstring>
        <name>GG_String_Replace</name>
        <param>
          <type><ref refid="struct_g_g___string" kindref="compound">GG_String</ref> *</type>
          <declname>str</declname>
        </param>
        <param>
          <type>char</type>
          <declname>a</declname>
        </param>
        <param>
          <type>char</type>
          <declname>b</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="xp/common/gg_strings.h" line="154" column="1" declfile="xp/common/gg_strings.h" declline="154" declcolumn="1"/>
      </memberdef>
      <memberdef kind="function" id="group___strings_1ga39f483efde2414bb3ec8fc5cfd4f4794" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int GG_String_FindChar</definition>
        <argsstring>(const GG_String *str, char c)</argsstring>
        <name>GG_String_FindChar</name>
        <param>
          <type>const <ref refid="struct_g_g___string" kindref="compound">GG_String</ref> *</type>
          <declname>str</declname>
        </param>
        <param>
          <type>char</type>
          <declname>c</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="xp/common/gg_strings.h" line="157" column="1" declfile="xp/common/gg_strings.h" declline="157" declcolumn="1"/>
      </memberdef>
      <memberdef kind="function" id="group___strings_1gae2c216dbe9cce1efbe462008fbdfb57a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int GG_String_FindCharFrom</definition>
        <argsstring>(const GG_String *str, char c, unsigned int start)</argsstring>
        <name>GG_String_FindCharFrom</name>
        <param>
          <type>const <ref refid="struct_g_g___string" kindref="compound">GG_String</ref> *</type>
          <declname>str</declname>
        </param>
        <param>
          <type>char</type>
          <declname>c</declname>
        </param>
        <param>
          <type>unsigned int</type>
          <declname>start</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="xp/common/gg_strings.h" line="160" column="1" declfile="xp/common/gg_strings.h" declline="160" declcolumn="1"/>
      </memberdef>
      <memberdef kind="function" id="group___strings_1ga8cfbcd56dcb6ead23e5ccf14f025072d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int GG_String_FindString</definition>
        <argsstring>(const GG_String *str, const char *s)</argsstring>
        <name>GG_String_FindString</name>
        <param>
          <type>const <ref refid="struct_g_g___string" kindref="compound">GG_String</ref> *</type>
          <declname>str</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>s</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="xp/common/gg_strings.h" line="163" column="1" declfile="xp/common/gg_strings.h" declline="163" declcolumn="1"/>
      </memberdef>
      <memberdef kind="function" id="group___strings_1ga87d32727f4c6f92e83ce1c7e9d04cb8c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int GG_String_FindStringFrom</definition>
        <argsstring>(const GG_String *str, const char *s, unsigned int start)</argsstring>
        <name>GG_String_FindStringFrom</name>
        <param>
          <type>const <ref refid="struct_g_g___string" kindref="compound">GG_String</ref> *</type>
          <declname>str</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>s</declname>
        </param>
        <param>
          <type>unsigned int</type>
          <declname>start</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="xp/common/gg_strings.h" line="166" column="1" declfile="xp/common/gg_strings.h" declline="166" declcolumn="1"/>
      </memberdef>
      <memberdef kind="function" id="group___strings_1gae4c264f21cbee631fc221d657ce02d34" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int GG_String_ReverseFindChar</definition>
        <argsstring>(const GG_String *str, char c)</argsstring>
        <name>GG_String_ReverseFindChar</name>
        <param>
          <type>const <ref refid="struct_g_g___string" kindref="compound">GG_String</ref> *</type>
          <declname>str</declname>
        </param>
        <param>
          <type>char</type>
          <declname>c</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="xp/common/gg_strings.h" line="169" column="1" declfile="xp/common/gg_strings.h" declline="169" declcolumn="1"/>
      </memberdef>
      <memberdef kind="function" id="group___strings_1gadb4d736134f9c24168efe41d9c246183" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int GG_String_ReverseFindCharFrom</definition>
        <argsstring>(const GG_String *str, char c, unsigned int start)</argsstring>
        <name>GG_String_ReverseFindCharFrom</name>
        <param>
          <type>const <ref refid="struct_g_g___string" kindref="compound">GG_String</ref> *</type>
          <declname>str</declname>
        </param>
        <param>
          <type>char</type>
          <declname>c</declname>
        </param>
        <param>
          <type>unsigned int</type>
          <declname>start</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="xp/common/gg_strings.h" line="172" column="1" declfile="xp/common/gg_strings.h" declline="172" declcolumn="1"/>
      </memberdef>
      <memberdef kind="function" id="group___strings_1ga53e19423c3864e5ef21fae2493c5a6a1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int GG_String_ReverseFindString</definition>
        <argsstring>(const GG_String *str, const char *s)</argsstring>
        <name>GG_String_ReverseFindString</name>
        <param>
          <type>const <ref refid="struct_g_g___string" kindref="compound">GG_String</ref> *</type>
          <declname>str</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>s</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="xp/common/gg_strings.h" line="175" column="1" declfile="xp/common/gg_strings.h" declline="175" declcolumn="1"/>
      </memberdef>
      <memberdef kind="function" id="group___strings_1ga1570e495c97f33d9c427bedbe145460b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int GG_String_ReverseFindStringFrom</definition>
        <argsstring>(const GG_String *str, const char *s, unsigned int start)</argsstring>
        <name>GG_String_ReverseFindStringFrom</name>
        <param>
          <type>const <ref refid="struct_g_g___string" kindref="compound">GG_String</ref> *</type>
          <declname>str</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>s</declname>
        </param>
        <param>
          <type>unsigned int</type>
          <declname>start</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="xp/common/gg_strings.h" line="178" column="1" declfile="xp/common/gg_strings.h" declline="178" declcolumn="1"/>
      </memberdef>
      <memberdef kind="function" id="group___strings_1ga45b157eacc9865f62433905b773284e3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool GG_String_StartsWith</definition>
        <argsstring>(const GG_String *str, const char *s)</argsstring>
        <name>GG_String_StartsWith</name>
        <param>
          <type>const <ref refid="struct_g_g___string" kindref="compound">GG_String</ref> *</type>
          <declname>str</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>s</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="xp/common/gg_strings.h" line="181" column="1" declfile="xp/common/gg_strings.h" declline="181" declcolumn="1"/>
      </memberdef>
      <memberdef kind="function" id="group___strings_1gaf64ed639b828f5784456db589219f82d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool GG_String_EndsWith</definition>
        <argsstring>(const GG_String *str, const char *s)</argsstring>
        <name>GG_String_EndsWith</name>
        <param>
          <type>const <ref refid="struct_g_g___string" kindref="compound">GG_String</ref> *</type>
          <declname>str</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>s</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="xp/common/gg_strings.h" line="184" column="1" declfile="xp/common/gg_strings.h" declline="184" declcolumn="1"/>
      </memberdef>
      <memberdef kind="function" id="group___strings_1gac1d3b9a3c171aee89a28852c86cdb46c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void GG_String_TrimWhitespaceLeft</definition>
        <argsstring>(GG_String *str)</argsstring>
        <name>GG_String_TrimWhitespaceLeft</name>
        <param>
          <type><ref refid="struct_g_g___string" kindref="compound">GG_String</ref> *</type>
          <declname>str</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="xp/common/gg_strings.h" line="187" column="1" declfile="xp/common/gg_strings.h" declline="187" declcolumn="1"/>
      </memberdef>
      <memberdef kind="function" id="group___strings_1ga4870efc6bacd94f7146df2f4b90f5992" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void GG_String_TrimCharLeft</definition>
        <argsstring>(GG_String *str, char c)</argsstring>
        <name>GG_String_TrimCharLeft</name>
        <param>
          <type><ref refid="struct_g_g___string" kindref="compound">GG_String</ref> *</type>
          <declname>str</declname>
        </param>
        <param>
          <type>char</type>
          <declname>c</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="xp/common/gg_strings.h" line="190" column="1" declfile="xp/common/gg_strings.h" declline="190" declcolumn="1"/>
      </memberdef>
      <memberdef kind="function" id="group___strings_1gae38203fe5a471f64f80d6b1bfb624658" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void GG_String_TrimCharsLeft</definition>
        <argsstring>(GG_String *str, const char *chars)</argsstring>
        <name>GG_String_TrimCharsLeft</name>
        <param>
          <type><ref refid="struct_g_g___string" kindref="compound">GG_String</ref> *</type>
          <declname>str</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>chars</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="xp/common/gg_strings.h" line="193" column="1" declfile="xp/common/gg_strings.h" declline="193" declcolumn="1"/>
      </memberdef>
      <memberdef kind="function" id="group___strings_1ga4e1cbf0c8b42c6474307d8dac04f80dd" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void GG_String_TrimWhitespaceRight</definition>
        <argsstring>(GG_String *str)</argsstring>
        <name>GG_String_TrimWhitespaceRight</name>
        <param>
          <type><ref refid="struct_g_g___string" kindref="compound">GG_String</ref> *</type>
          <declname>str</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="xp/common/gg_strings.h" line="196" column="1" declfile="xp/common/gg_strings.h" declline="196" declcolumn="1"/>
      </memberdef>
      <memberdef kind="function" id="group___strings_1gaeae0f4693d2935a196ff44e2eb6c0294" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void GG_String_TrimCharRight</definition>
        <argsstring>(GG_String *str, char c)</argsstring>
        <name>GG_String_TrimCharRight</name>
        <param>
          <type><ref refid="struct_g_g___string" kindref="compound">GG_String</ref> *</type>
          <declname>str</declname>
        </param>
        <param>
          <type>char</type>
          <declname>c</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="xp/common/gg_strings.h" line="199" column="1" declfile="xp/common/gg_strings.h" declline="199" declcolumn="1"/>
      </memberdef>
      <memberdef kind="function" id="group___strings_1gaff46f50e696b773be43a4af83ee040b3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void GG_String_TrimCharsRight</definition>
        <argsstring>(GG_String *str, const char *chars)</argsstring>
        <name>GG_String_TrimCharsRight</name>
        <param>
          <type><ref refid="struct_g_g___string" kindref="compound">GG_String</ref> *</type>
          <declname>str</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>chars</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="xp/common/gg_strings.h" line="202" column="1" declfile="xp/common/gg_strings.h" declline="202" declcolumn="1"/>
      </memberdef>
      <memberdef kind="function" id="group___strings_1ga2700b6a2c63e1f1cd2926d2ce75870bf" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void GG_String_TrimWhitespace</definition>
        <argsstring>(GG_String *str)</argsstring>
        <name>GG_String_TrimWhitespace</name>
        <param>
          <type><ref refid="struct_g_g___string" kindref="compound">GG_String</ref> *</type>
          <declname>str</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="xp/common/gg_strings.h" line="205" column="1" declfile="xp/common/gg_strings.h" declline="205" declcolumn="1"/>
      </memberdef>
      <memberdef kind="function" id="group___strings_1gaf99de29c97985aee520b8697ae9ebdaa" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void GG_String_TrimChar</definition>
        <argsstring>(GG_String *str, char c)</argsstring>
        <name>GG_String_TrimChar</name>
        <param>
          <type><ref refid="struct_g_g___string" kindref="compound">GG_String</ref> *</type>
          <declname>str</declname>
        </param>
        <param>
          <type>char</type>
          <declname>c</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="xp/common/gg_strings.h" line="208" column="1" declfile="xp/common/gg_strings.h" declline="208" declcolumn="1"/>
      </memberdef>
      <memberdef kind="function" id="group___strings_1gafff6238fd99d905e1490420fadd6525d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void GG_String_TrimChars</definition>
        <argsstring>(GG_String *str, const char *chars)</argsstring>
        <name>GG_String_TrimChars</name>
        <param>
          <type><ref refid="struct_g_g___string" kindref="compound">GG_String</ref> *</type>
          <declname>str</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>chars</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="xp/common/gg_strings.h" line="211" column="1" declfile="xp/common/gg_strings.h" declline="211" declcolumn="1"/>
      </memberdef>
      <memberdef kind="function" id="group___strings_1gac801397f5e35478d3f6b6d4e5126028b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group___errors_1gacf7401469f33ad0744f7f1f7006fd021" kindref="member">GG_Result</ref></type>
        <definition>GG_Result GG_String_Insert</definition>
        <argsstring>(GG_String *str, const char *s, unsigned int where)</argsstring>
        <name>GG_String_Insert</name>
        <param>
          <type><ref refid="struct_g_g___string" kindref="compound">GG_String</ref> *</type>
          <declname>str</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>s</declname>
        </param>
        <param>
          <type>unsigned int</type>
          <declname>where</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="xp/common/gg_strings.h" line="214" column="1" declfile="xp/common/gg_strings.h" declline="214" declcolumn="1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>String objects and functions. </para>
    </briefdescription>
    <detaileddescription>
<para><simplesect kind="copyright"><para>Copyright 2017-2020 Fitbit, Inc SPDX-License-Identifier: Apache-2.0</para>
</simplesect>
<simplesect kind="author"><para>Gilles Boccon-Gibod</para>
</simplesect>
<simplesect kind="date"><para>2017-09-18 </para>
</simplesect>
</para>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"></codeline>
<codeline lineno="14"><highlight class="preprocessor">#pragma<sp/>once</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="comment">/*----------------------------------------------------------------------</highlight></codeline>
<codeline lineno="17"><highlight class="comment">|<sp/><sp/><sp/>includes</highlight></codeline>
<codeline lineno="18"><highlight class="comment">+---------------------------------------------------------------------*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;stdbool.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;stdint.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="gg__memory_8h" kindref="compound">xp/common/gg_memory.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="gg__results_8h" kindref="compound">xp/common/gg_results.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="gg__types_8h" kindref="compound">xp/common/gg_types.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>__cplusplus</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;C&quot;</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">/*<sp/>__cplusplus<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight><highlight class="comment">/*----------------------------------------------------------------------</highlight></codeline>
<codeline lineno="35"><highlight class="comment">|<sp/><sp/><sp/>constants</highlight></codeline>
<codeline lineno="36"><highlight class="comment">+---------------------------------------------------------------------*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>GG_STRING_SEARCH_FAILED<sp/>(-1)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>GG_EMPTY_STRING<sp/>{0}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>GG_String_EmptyString;</highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight><highlight class="comment">/*----------------------------------------------------------------------</highlight></codeline>
<codeline lineno="43"><highlight class="comment">|<sp/><sp/><sp/>plain<sp/>C<sp/>strings</highlight></codeline>
<codeline lineno="44"><highlight class="comment">+---------------------------------------------------------------------*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>GG_StringsEqual(s1,<sp/>s2)<sp/>(strcmp((s1),<sp/>(s2))<sp/>==<sp/>0)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight><highlight class="comment">/*----------------------------------------------------------------------</highlight></codeline>
<codeline lineno="48"><highlight class="comment">|<sp/><sp/><sp/>types</highlight></codeline>
<codeline lineno="49"><highlight class="comment">+---------------------------------------------------------------------*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="50" refid="struct_g_g___string" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>chars;</highlight></codeline>
<codeline lineno="52"><highlight class="normal">}<sp/><ref refid="struct_g_g___string" kindref="compound">GG_String</ref>;</highlight></codeline>
<codeline lineno="53"><highlight class="normal"></highlight></codeline>
<codeline lineno="54" refid="struct_g_g___string_buffer" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>length;</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>allocated;</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>the<sp/>actual<sp/>string<sp/>characters<sp/>follow<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="58"><highlight class="normal">}<sp/><ref refid="struct_g_g___string_buffer" kindref="compound">GG_StringBuffer</ref>;</highlight></codeline>
<codeline lineno="59"><highlight class="normal"></highlight></codeline>
<codeline lineno="60"><highlight class="normal"></highlight><highlight class="comment">/*----------------------------------------------------------------------</highlight></codeline>
<codeline lineno="61"><highlight class="comment">|<sp/><sp/><sp/>GG_String<sp/>inline<sp/>functions<sp/>as<sp/>macros</highlight></codeline>
<codeline lineno="62"><highlight class="comment">+---------------------------------------------------------------------*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="63"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>GG_String_GetBuffer(str)<sp/>(<sp/>((GG_StringBuffer*)((void*)(str)-&gt;chars))-1<sp/>)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="64"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>GG_String_Construct(str)<sp/>do<sp/>{<sp/>\</highlight></codeline>
<codeline lineno="65"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>(str)-&gt;chars<sp/>=<sp/>NULL;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="66"><highlight class="preprocessor">}<sp/>while(0)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="67"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>GG_String_Destruct(str)<sp/>do<sp/>{<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="68"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>if<sp/>((str)-&gt;chars)<sp/>{<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="69"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>GG_FreeMemory((void*)GG_String_GetBuffer((str)));<sp/><sp/>\</highlight></codeline>
<codeline lineno="70"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(str)-&gt;chars<sp/>=<sp/>NULL;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="71"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>}<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="72"><highlight class="preprocessor">}<sp/>while(0)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="73"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>GG_String_GetChar(str,<sp/>index)<sp/>((str)-&gt;chars[(index)])</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="74"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>GG_String_SetChar(str,<sp/>index,<sp/>c)<sp/>do<sp/>{<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="75"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>(str)-&gt;chars[(index)]<sp/>=<sp/>(c);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="76"><highlight class="preprocessor">}<sp/>while(0)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="77"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>GG_String_GetLength(str)<sp/>((str)-&gt;chars?(GG_String_GetBuffer(str)-&gt;length):0)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="78"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>GG_String_GetChars(str)<sp/>((str)-&gt;chars?(const<sp/>char*)((str)-&gt;chars):GG_String_EmptyString)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="79"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>GG_String_UseChars(str)<sp/>((str)-&gt;chars?(str)-&gt;chars:GG_CONST_CAST(GG_String_EmptyString,<sp/>char*))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="80"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>GG_CSTR(str)<sp/>GG_String_GetChars(&amp;(str))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="81"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>GG_String_IsEmpty(str)<sp/>(GG_String_GetLength((str))==0)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="82"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>GG_String_Init(str)<sp/>do<sp/>{(str).chars<sp/>=<sp/>NULL;<sp/>}<sp/>while(0)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="83"><highlight class="normal"></highlight></codeline>
<codeline lineno="84"><highlight class="normal"></highlight><highlight class="comment">/*----------------------------------------------------------------------</highlight></codeline>
<codeline lineno="85"><highlight class="comment">|<sp/><sp/><sp/>GG_String<sp/>functions</highlight></codeline>
<codeline lineno="86"><highlight class="comment">+---------------------------------------------------------------------*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="87"><highlight class="normal"><ref refid="struct_g_g___string" kindref="compound">GG_String</ref></highlight></codeline>
<codeline lineno="88"><highlight class="normal">GG_String_Create(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>s);</highlight></codeline>
<codeline lineno="89"><highlight class="normal"></highlight></codeline>
<codeline lineno="90"><highlight class="normal"><ref refid="struct_g_g___string" kindref="compound">GG_String</ref></highlight></codeline>
<codeline lineno="91"><highlight class="normal">GG_String_CreateFromSubString(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>s,<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>first,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>length);</highlight></codeline>
<codeline lineno="92"><highlight class="normal"></highlight></codeline>
<codeline lineno="93"><highlight class="normal"><ref refid="struct_g_g___string" kindref="compound">GG_String</ref></highlight></codeline>
<codeline lineno="94"><highlight class="normal">GG_String_Clone(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_g_g___string" kindref="compound">GG_String</ref>*<sp/>str);</highlight></codeline>
<codeline lineno="95"><highlight class="normal"></highlight></codeline>
<codeline lineno="96"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="97"><highlight class="normal">GG_String_Copy(<ref refid="struct_g_g___string" kindref="compound">GG_String</ref>*<sp/>str,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_g_g___string" kindref="compound">GG_String</ref>*<sp/>other);</highlight></codeline>
<codeline lineno="98"><highlight class="normal"></highlight></codeline>
<codeline lineno="99"><highlight class="normal"><ref refid="group___errors_1gacf7401469f33ad0744f7f1f7006fd021" kindref="member">GG_Result</ref></highlight></codeline>
<codeline lineno="100"><highlight class="normal">GG_String_SetLength(<ref refid="struct_g_g___string" kindref="compound">GG_String</ref>*<sp/>str,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>length);</highlight></codeline>
<codeline lineno="101"><highlight class="normal"></highlight></codeline>
<codeline lineno="102"><highlight class="normal"><ref refid="group___errors_1gacf7401469f33ad0744f7f1f7006fd021" kindref="member">GG_Result</ref></highlight></codeline>
<codeline lineno="103"><highlight class="normal">GG_String_Assign(<ref refid="struct_g_g___string" kindref="compound">GG_String</ref>*<sp/>str,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>chars);</highlight></codeline>
<codeline lineno="104"><highlight class="normal"></highlight></codeline>
<codeline lineno="105"><highlight class="normal"><ref refid="group___errors_1gacf7401469f33ad0744f7f1f7006fd021" kindref="member">GG_Result</ref></highlight></codeline>
<codeline lineno="106"><highlight class="normal">GG_String_AssignN(<ref refid="struct_g_g___string" kindref="compound">GG_String</ref>*<sp/>str,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>chars,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>size);</highlight></codeline>
<codeline lineno="107"><highlight class="normal"></highlight></codeline>
<codeline lineno="108"><highlight class="normal"><ref refid="group___errors_1gacf7401469f33ad0744f7f1f7006fd021" kindref="member">GG_Result</ref></highlight></codeline>
<codeline lineno="109"><highlight class="normal">GG_String_Append(<ref refid="struct_g_g___string" kindref="compound">GG_String</ref>*<sp/>str,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>other);</highlight></codeline>
<codeline lineno="110"><highlight class="normal"></highlight></codeline>
<codeline lineno="111"><highlight class="normal"><ref refid="group___errors_1gacf7401469f33ad0744f7f1f7006fd021" kindref="member">GG_Result</ref></highlight></codeline>
<codeline lineno="112"><highlight class="normal">GG_String_AppendSubString(<ref refid="struct_g_g___string" kindref="compound">GG_String</ref>*<sp/>str,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>other,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>size);</highlight></codeline>
<codeline lineno="113"><highlight class="normal"></highlight></codeline>
<codeline lineno="114"><highlight class="normal"><ref refid="group___errors_1gacf7401469f33ad0744f7f1f7006fd021" kindref="member">GG_Result</ref></highlight></codeline>
<codeline lineno="115"><highlight class="normal">GG_String_AppendChar(<ref refid="struct_g_g___string" kindref="compound">GG_String</ref>*<sp/>str,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>c);</highlight></codeline>
<codeline lineno="116"><highlight class="normal"></highlight></codeline>
<codeline lineno="117"><highlight class="normal"><ref refid="struct_g_g___string" kindref="compound">GG_String</ref></highlight></codeline>
<codeline lineno="118"><highlight class="normal">GG_String_Add(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_g_g___string" kindref="compound">GG_String</ref>*<sp/>str1,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>str2);</highlight></codeline>
<codeline lineno="119"><highlight class="normal"></highlight></codeline>
<codeline lineno="120"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="121"><highlight class="normal">GG_String_Compare(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_g_g___string" kindref="compound">GG_String</ref>*<sp/>str,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>s,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>ignore_case);</highlight></codeline>
<codeline lineno="122"><highlight class="normal"></highlight></codeline>
<codeline lineno="123"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="124"><highlight class="normal">GG_String_Equals(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_g_g___string" kindref="compound">GG_String</ref>*<sp/>str,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>s,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>ignore_case);</highlight></codeline>
<codeline lineno="125"><highlight class="normal"></highlight></codeline>
<codeline lineno="126"><highlight class="normal"><ref refid="struct_g_g___string" kindref="compound">GG_String</ref></highlight></codeline>
<codeline lineno="127"><highlight class="normal">GG_String_SubString(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_g_g___string" kindref="compound">GG_String</ref>*<sp/>str,<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>first,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>length);</highlight></codeline>
<codeline lineno="128"><highlight class="normal"></highlight></codeline>
<codeline lineno="129"><highlight class="normal"><ref refid="struct_g_g___string" kindref="compound">GG_String</ref></highlight></codeline>
<codeline lineno="130"><highlight class="normal">GG_String_Left(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_g_g___string" kindref="compound">GG_String</ref>*<sp/>str,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>length);</highlight></codeline>
<codeline lineno="131"><highlight class="normal"></highlight></codeline>
<codeline lineno="132"><highlight class="normal"><ref refid="struct_g_g___string" kindref="compound">GG_String</ref></highlight></codeline>
<codeline lineno="133"><highlight class="normal">GG_String_Right(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_g_g___string" kindref="compound">GG_String</ref>*<sp/>str,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>length);</highlight></codeline>
<codeline lineno="134"><highlight class="normal"></highlight></codeline>
<codeline lineno="135"><highlight class="normal"><ref refid="group___errors_1gacf7401469f33ad0744f7f1f7006fd021" kindref="member">GG_Result</ref></highlight></codeline>
<codeline lineno="136"><highlight class="normal">GG_String_Reserve(<ref refid="struct_g_g___string" kindref="compound">GG_String</ref>*<sp/>str,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>length);</highlight></codeline>
<codeline lineno="137"><highlight class="normal"></highlight></codeline>
<codeline lineno="138"><highlight class="normal"><ref refid="struct_g_g___string" kindref="compound">GG_String</ref></highlight></codeline>
<codeline lineno="139"><highlight class="normal">GG_String_ToLowercase(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_g_g___string" kindref="compound">GG_String</ref>*<sp/>str);</highlight></codeline>
<codeline lineno="140"><highlight class="normal"></highlight></codeline>
<codeline lineno="141"><highlight class="normal"><ref refid="struct_g_g___string" kindref="compound">GG_String</ref></highlight></codeline>
<codeline lineno="142"><highlight class="normal">GG_String_ToUppercase(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_g_g___string" kindref="compound">GG_String</ref>*<sp/>str);</highlight></codeline>
<codeline lineno="143"><highlight class="normal"></highlight></codeline>
<codeline lineno="144"><highlight class="normal"><ref refid="group___errors_1gacf7401469f33ad0744f7f1f7006fd021" kindref="member">GG_Result</ref></highlight></codeline>
<codeline lineno="145"><highlight class="normal">GG_String_ToInteger(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_g_g___string" kindref="compound">GG_String</ref>*<sp/>str,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/>value);</highlight></codeline>
<codeline lineno="146"><highlight class="normal"></highlight></codeline>
<codeline lineno="147"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="148"><highlight class="normal">GG_String_MakeLowercase(<ref refid="struct_g_g___string" kindref="compound">GG_String</ref>*<sp/>str);</highlight></codeline>
<codeline lineno="149"><highlight class="normal"></highlight></codeline>
<codeline lineno="150"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="151"><highlight class="normal">GG_String_MakeUppercase(<ref refid="struct_g_g___string" kindref="compound">GG_String</ref>*<sp/>str);</highlight></codeline>
<codeline lineno="152"><highlight class="normal"></highlight></codeline>
<codeline lineno="153"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="154"><highlight class="normal">GG_String_Replace(<ref refid="struct_g_g___string" kindref="compound">GG_String</ref>*<sp/>str,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>a,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>b);</highlight></codeline>
<codeline lineno="155"><highlight class="normal"></highlight></codeline>
<codeline lineno="156"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="157"><highlight class="normal">GG_String_FindChar(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_g_g___string" kindref="compound">GG_String</ref>*<sp/>str,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>c);</highlight></codeline>
<codeline lineno="158"><highlight class="normal"></highlight></codeline>
<codeline lineno="159"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="160"><highlight class="normal">GG_String_FindCharFrom(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_g_g___string" kindref="compound">GG_String</ref>*<sp/>str,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>c,<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>start);</highlight></codeline>
<codeline lineno="161"><highlight class="normal"></highlight></codeline>
<codeline lineno="162"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="163"><highlight class="normal">GG_String_FindString(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_g_g___string" kindref="compound">GG_String</ref>*<sp/>str,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>s);</highlight></codeline>
<codeline lineno="164"><highlight class="normal"></highlight></codeline>
<codeline lineno="165"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="166"><highlight class="normal">GG_String_FindStringFrom(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_g_g___string" kindref="compound">GG_String</ref>*<sp/>str,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>s,<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>start);</highlight></codeline>
<codeline lineno="167"><highlight class="normal"></highlight></codeline>
<codeline lineno="168"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="169"><highlight class="normal">GG_String_ReverseFindChar(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_g_g___string" kindref="compound">GG_String</ref>*<sp/>str,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>c);</highlight></codeline>
<codeline lineno="170"><highlight class="normal"></highlight></codeline>
<codeline lineno="171"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="172"><highlight class="normal">GG_String_ReverseFindCharFrom(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_g_g___string" kindref="compound">GG_String</ref>*<sp/>str,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>c,<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>start);</highlight></codeline>
<codeline lineno="173"><highlight class="normal"></highlight></codeline>
<codeline lineno="174"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="175"><highlight class="normal">GG_String_ReverseFindString(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_g_g___string" kindref="compound">GG_String</ref>*<sp/>str,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>s);</highlight></codeline>
<codeline lineno="176"><highlight class="normal"></highlight></codeline>
<codeline lineno="177"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="178"><highlight class="normal">GG_String_ReverseFindStringFrom(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_g_g___string" kindref="compound">GG_String</ref>*<sp/>str,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>s,<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>start);</highlight></codeline>
<codeline lineno="179"><highlight class="normal"></highlight></codeline>
<codeline lineno="180"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="181"><highlight class="normal">GG_String_StartsWith(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_g_g___string" kindref="compound">GG_String</ref>*<sp/>str,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>s);</highlight></codeline>
<codeline lineno="182"><highlight class="normal"></highlight></codeline>
<codeline lineno="183"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="184"><highlight class="normal">GG_String_EndsWith(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_g_g___string" kindref="compound">GG_String</ref>*<sp/>str,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>s);</highlight></codeline>
<codeline lineno="185"><highlight class="normal"></highlight></codeline>
<codeline lineno="186"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="187"><highlight class="normal">GG_String_TrimWhitespaceLeft(<ref refid="struct_g_g___string" kindref="compound">GG_String</ref>*<sp/>str);</highlight></codeline>
<codeline lineno="188"><highlight class="normal"></highlight></codeline>
<codeline lineno="189"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="190"><highlight class="normal">GG_String_TrimCharLeft(<ref refid="struct_g_g___string" kindref="compound">GG_String</ref>*<sp/>str,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>c);</highlight></codeline>
<codeline lineno="191"><highlight class="normal"></highlight></codeline>
<codeline lineno="192"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="193"><highlight class="normal">GG_String_TrimCharsLeft(<ref refid="struct_g_g___string" kindref="compound">GG_String</ref>*<sp/>str,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>chars);</highlight></codeline>
<codeline lineno="194"><highlight class="normal"></highlight></codeline>
<codeline lineno="195"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="196"><highlight class="normal">GG_String_TrimWhitespaceRight(<ref refid="struct_g_g___string" kindref="compound">GG_String</ref>*<sp/>str);</highlight></codeline>
<codeline lineno="197"><highlight class="normal"></highlight></codeline>
<codeline lineno="198"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="199"><highlight class="normal">GG_String_TrimCharRight(<ref refid="struct_g_g___string" kindref="compound">GG_String</ref>*<sp/>str,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>c);</highlight></codeline>
<codeline lineno="200"><highlight class="normal"></highlight></codeline>
<codeline lineno="201"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="202"><highlight class="normal">GG_String_TrimCharsRight(<ref refid="struct_g_g___string" kindref="compound">GG_String</ref>*<sp/>str,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>chars);</highlight></codeline>
<codeline lineno="203"><highlight class="normal"></highlight></codeline>
<codeline lineno="204"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="205"><highlight class="normal">GG_String_TrimWhitespace(<ref refid="struct_g_g___string" kindref="compound">GG_String</ref>*<sp/>str);</highlight></codeline>
<codeline lineno="206"><highlight class="normal"></highlight></codeline>
<codeline lineno="207"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="208"><highlight class="normal">GG_String_TrimChar(<ref refid="struct_g_g___string" kindref="compound">GG_String</ref>*<sp/>str,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>c);</highlight></codeline>
<codeline lineno="209"><highlight class="normal"></highlight></codeline>
<codeline lineno="210"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="211"><highlight class="normal">GG_String_TrimChars(<ref refid="struct_g_g___string" kindref="compound">GG_String</ref>*<sp/>str,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>chars);</highlight></codeline>
<codeline lineno="212"><highlight class="normal"></highlight></codeline>
<codeline lineno="213"><highlight class="normal"><ref refid="group___errors_1gacf7401469f33ad0744f7f1f7006fd021" kindref="member">GG_Result</ref></highlight></codeline>
<codeline lineno="214"><highlight class="normal">GG_String_Insert(<ref refid="struct_g_g___string" kindref="compound">GG_String</ref>*<sp/>str,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>s,<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>where);</highlight></codeline>
<codeline lineno="215"><highlight class="normal"></highlight></codeline>
<codeline lineno="217"><highlight class="normal"></highlight></codeline>
<codeline lineno="218"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>__cplusplus</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="219"><highlight class="normal">}</highlight></codeline>
<codeline lineno="220"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">/*<sp/>__cplusplus<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="221"><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="xp/common/gg_strings.h"/>
  </compounddef>
</doxygen>
