<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.16">
  <compounddef id="struct_g_g___tls_key_resolver_interface" kind="struct" language="C++" prot="public">
    <compoundname>GG_TlsKeyResolverInterface</compoundname>
    <includes refid="gg__tls_8h" local="no">xp/tls/gg_tls.h</includes>
      <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="struct_g_g___tls_key_resolver_interface_1aadb8b7416690ab407e03fba60cc17ab7" prot="public" static="no" mutable="no">
        <type><ref refid="group___errors_1gacf7401469f33ad0744f7f1f7006fd021" kindref="member">GG_Result</ref>(*</type>
        <definition>GG_Result(* GG_TlsKeyResolverInterface::ResolveKey) (GG_TlsKeyResolver *self, const uint8_t *key_identity, size_t key_identify_size, uint8_t *key, size_t *key_size)</definition>
        <argsstring>)(GG_TlsKeyResolver *self, const uint8_t *key_identity, size_t key_identify_size, uint8_t *key, size_t *key_size)</argsstring>
        <name>ResolveKey</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Resolve a key (for example a pre-shared key) given a key identity.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>self</parametername>
</parameternamelist>
<parameterdescription>
<para>The object on which this method is invoked. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>key_identity</parametername>
</parameternamelist>
<parameterdescription>
<para>Identity of the key to resolve. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>key_identity_size</parametername>
</parameternamelist>
<parameterdescription>
<para>Size of the key identity. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>key</parametername>
</parameternamelist>
<parameterdescription>
<para>Buffer in which the resolved key will be returned. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="inout">key_size</parametername>
</parameternamelist>
<parameterdescription>
<para>On input, the size of the key buffer. On output, the size of the key returned, or the size needed for the key buffer if the call returns GG_ERROR_NOT_ENOUGH_SPACE.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>GG_SUCCESS if the key was found, GG_ERROR_NO_SUCH_ITEM if the key was not found, GG_ERROR_NOT_ENOUGH_SPACE if the key was too large for the supplied buffer, or a negative error code. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="xp/tls/gg_tls.h" line="115" column="5" bodyfile="xp/tls/gg_tls.h" bodystart="115" bodyend="-1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para>Virtual function table for the <ref refid="struct_g_g___tls_key_resolver" kindref="compound">GG_TlsKeyResolver</ref> interface </para>
    </detaileddescription>
    <location file="xp/tls/gg_tls.h" line="99" column="91" bodyfile="xp/tls/gg_tls.h" bodystart="99" bodyend="120"/>
    <listofallmembers>
      <member refid="struct_g_g___tls_key_resolver_interface_1aadb8b7416690ab407e03fba60cc17ab7" prot="public" virt="non-virtual"><scope>GG_TlsKeyResolverInterface</scope><name>ResolveKey</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
