<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.16">
  <compounddef id="gg__events_8h" kind="file" language="C++">
    <compoundname>gg_events.h</compoundname>
    <includes local="no">stdint.h</includes>
    <includes local="no">stddef.h</includes>
    <includes refid="gg__types_8h" local="yes">xp/common/gg_types.h</includes>
    <includes refid="gg__results_8h" local="yes">xp/common/gg_results.h</includes>
    <includes refid="gg__lists_8h" local="yes">xp/common/gg_lists.h</includes>
    <includedby refid="gg__common_8h" local="yes">xp/common/gg_common.h</includedby>
    <includedby refid="gg__event__dispatcher_8h" local="yes">xp/common/gg_event_dispatcher.h</includedby>
    <includedby refid="gg__gattlink__generic__client_8h" local="yes">xp/gattlink/gg_gattlink_generic_client.h</includedby>
    <includedby refid="gg__tls_8h" local="yes">xp/tls/gg_tls.h</includedby>
    <includedby refid="gg__activity__data__monitor_8h" local="yes">xp/utils/gg_activity_data_monitor.h</includedby>
    <incdepgraph>
      <node id="2">
        <label>stdint.h</label>
      </node>
      <node id="6">
        <label>xp/common/gg_lists.h</label>
        <link refid="gg__lists_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="3">
        <label>stddef.h</label>
      </node>
      <node id="1">
        <label>xp/common/gg_events.h</label>
        <link refid="gg__events_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
      </node>
      <node id="4">
        <label>xp/common/gg_types.h</label>
        <link refid="gg__types_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="5">
        <label>xp/common/gg_results.h</label>
        <link refid="gg__results_8h"/>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="7">
        <label>xp/tls/ports/mbedtls/gg_mbedtls_tls.h</label>
        <link refid="gg__mbedtls__tls_8h"/>
      </node>
      <node id="5">
        <label>xp/stack_builder/gg_stack_builder.h</label>
        <link refid="gg__stack__builder_8h"/>
      </node>
      <node id="2">
        <label>xp/common/gg_common.h</label>
        <link refid="gg__common_8h"/>
      </node>
      <node id="6">
        <label>xp/tls/gg_tls.h</label>
        <link refid="gg__tls_8h"/>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
      </node>
      <node id="8">
        <label>xp/utils/gg_activity_data_monitor.h</label>
        <link refid="gg__activity__data__monitor_8h"/>
      </node>
      <node id="3">
        <label>xp/common/gg_event_dispatcher.h</label>
        <link refid="gg__event__dispatcher_8h"/>
      </node>
      <node id="4">
        <label>xp/gattlink/gg_gattlink_generic_client.h</label>
        <link refid="gg__gattlink__generic__client_8h"/>
        <childnode refid="5" relation="include">
        </childnode>
      </node>
      <node id="1">
        <label>xp/common/gg_events.h</label>
        <link refid="gg__events_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
      </node>
    </invincdepgraph>
    <innerclass refid="struct_g_g___event" prot="public">GG_Event</innerclass>
    <innerclass refid="struct_g_g___event_listener" prot="public">GG_EventListener</innerclass>
    <innerclass refid="struct_g_g___event_listener_interface" prot="public">GG_EventListenerInterface</innerclass>
    <innerclass refid="struct_g_g___event_emitter" prot="public">GG_EventEmitter</innerclass>
    <innerclass refid="struct_g_g___event_emitter_interface" prot="public">GG_EventEmitterInterface</innerclass>
    <innerclass refid="struct_g_g___event_emitter_base" prot="public">GG_EventEmitterBase</innerclass>
      <sectiondef kind="func">
      <memberdef kind="function" id="group___events_1ga8966dfc09e79f434420a3e3cc07c82a4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void GG_EventListener_OnEvent</definition>
        <argsstring>(GG_EventListener *self, const GG_Event *event)</argsstring>
        <name>GG_EventListener_OnEvent</name>
        <param>
          <type><ref refid="struct_g_g___event_listener" kindref="compound">GG_EventListener</ref> *</type>
          <declname>self</declname>
        </param>
        <param>
          <type>const <ref refid="struct_g_g___event" kindref="compound">GG_Event</ref> *</type>
          <declname>event</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="xp/common/gg_events.h" line="56" column="6" declfile="xp/common/gg_events.h" declline="56" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="group___events_1gaac5f2b436e8ddf9a66ae09ff8443c598" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void GG_EventEmitter_SetListener</definition>
        <argsstring>(GG_EventEmitter *self, GG_EventListener *listener)</argsstring>
        <name>GG_EventEmitter_SetListener</name>
        <param>
          <type><ref refid="struct_g_g___event_emitter" kindref="compound">GG_EventEmitter</ref> *</type>
          <declname>self</declname>
        </param>
        <param>
          <type><ref refid="struct_g_g___event_listener" kindref="compound">GG_EventListener</ref> *</type>
          <declname>listener</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="xp/common/gg_events.h" line="68" column="6" declfile="xp/common/gg_events.h" declline="68" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="group___events_1ga86f069e738cc8ceadde83b258d1b5188" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void GG_EventEmitterBase_Init</definition>
        <argsstring>(GG_EventEmitterBase *self)</argsstring>
        <name>GG_EventEmitterBase_Init</name>
        <param>
          <type><ref refid="struct_g_g___event_emitter_base" kindref="compound">GG_EventEmitterBase</ref> *</type>
          <declname>self</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Initialize the base-class part of an object. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="xp/common/gg_events.h" line="82" column="6" declfile="xp/common/gg_events.h" declline="82" declcolumn="6"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>General purpose events. </para>
    </briefdescription>
    <detaileddescription>
<para><simplesect kind="copyright"><para>Copyright 2017-2020 Fitbit, Inc SPDX-License-Identifier: Apache-2.0</para>
</simplesect>
<simplesect kind="author"><para>Gilles Boccon-Gibod</para>
</simplesect>
<simplesect kind="date"><para>2018-01-02 </para>
</simplesect>
</para>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"></codeline>
<codeline lineno="14"><highlight class="preprocessor">#pragma<sp/>once</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="comment">/*----------------------------------------------------------------------</highlight></codeline>
<codeline lineno="17"><highlight class="comment">|<sp/><sp/><sp/>includes</highlight></codeline>
<codeline lineno="18"><highlight class="comment">+---------------------------------------------------------------------*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;stdint.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;stddef.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="gg__types_8h" kindref="compound">xp/common/gg_types.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="gg__results_8h" kindref="compound">xp/common/gg_results.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="gg__lists_8h" kindref="compound">xp/common/gg_lists.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(__cplusplus)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;C&quot;</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight><highlight class="comment">/*----------------------------------------------------------------------</highlight></codeline>
<codeline lineno="35"><highlight class="comment">|<sp/><sp/><sp/>types</highlight></codeline>
<codeline lineno="36"><highlight class="comment">+---------------------------------------------------------------------*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight></codeline>
<codeline lineno="41" refid="struct_g_g___event" refkind="compound"><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="42" refid="struct_g_g___event_1a74eadd69c522200091bcddb78f6dafd9" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/><ref refid="struct_g_g___event_1a74eadd69c522200091bcddb78f6dafd9" kindref="member">type</ref>;<sp/><sp/><sp/></highlight></codeline>
<codeline lineno="43" refid="struct_g_g___event_1a10094eb91259dc9dc3f6cda37b47e0ce" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/><sp/><sp/><sp/><ref refid="struct_g_g___event_1a10094eb91259dc9dc3f6cda37b47e0ce" kindref="member">source</ref>;<sp/></highlight></codeline>
<codeline lineno="44"><highlight class="normal">}<sp/><ref refid="struct_g_g___event" kindref="compound">GG_Event</ref>;</highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight><highlight class="comment">//----------------------------------------------------------------------</highlight></codeline>
<codeline lineno="51"><highlight class="comment"></highlight><highlight class="comment">//----------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="52" refid="struct_g_g___event_listener_interface" refkind="compound"><highlight class="normal"><ref refid="group___interfaces_1ga8f7027840366e425586829a75c1bfb30" kindref="member">GG_DECLARE_INTERFACE</ref>(<ref refid="struct_g_g___event_listener" kindref="compound">GG_EventListener</ref>)<sp/>{</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/>void<sp/>(*OnEvent)(<ref refid="struct_g_g___event_listener" kindref="compound">GG_EventListener</ref>*<sp/></highlight><highlight class="keyword">self</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_g_g___event" kindref="compound">GG_Event</ref>*<sp/>event);</highlight></codeline>
<codeline lineno="54"><highlight class="normal">};</highlight></codeline>
<codeline lineno="55"><highlight class="normal"></highlight></codeline>
<codeline lineno="56"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>GG_EventListener_OnEvent(<ref refid="struct_g_g___event_listener" kindref="compound">GG_EventListener</ref>*<sp/></highlight><highlight class="keyword">self</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_g_g___event" kindref="compound">GG_Event</ref>*<sp/>event);</highlight></codeline>
<codeline lineno="57"><highlight class="normal"></highlight></codeline>
<codeline lineno="58"><highlight class="normal"></highlight><highlight class="comment">//----------------------------------------------------------------------</highlight></codeline>
<codeline lineno="63"><highlight class="comment"></highlight><highlight class="comment">//----------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="64" refid="struct_g_g___event_emitter_interface" refkind="compound"><highlight class="normal"><ref refid="group___interfaces_1ga8f7027840366e425586829a75c1bfb30" kindref="member">GG_DECLARE_INTERFACE</ref>(<ref refid="struct_g_g___event_emitter" kindref="compound">GG_EventEmitter</ref>)<sp/>{</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/>void<sp/>(*SetListener)(<ref refid="struct_g_g___event_emitter" kindref="compound">GG_EventEmitter</ref>*<sp/></highlight><highlight class="keyword">self</highlight><highlight class="normal">,<sp/><ref refid="struct_g_g___event_listener" kindref="compound">GG_EventListener</ref>*<sp/>listener);</highlight></codeline>
<codeline lineno="66"><highlight class="normal">};</highlight></codeline>
<codeline lineno="67"><highlight class="normal"></highlight></codeline>
<codeline lineno="68"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>GG_EventEmitter_SetListener(<ref refid="struct_g_g___event_emitter" kindref="compound">GG_EventEmitter</ref>*<sp/></highlight><highlight class="keyword">self</highlight><highlight class="normal">,<sp/><ref refid="struct_g_g___event_listener" kindref="compound">GG_EventListener</ref>*<sp/>listener);</highlight></codeline>
<codeline lineno="69"><highlight class="normal"></highlight></codeline>
<codeline lineno="73" refid="struct_g_g___event_emitter_base" refkind="compound"><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/>GG_IMPLEMENTS(<ref refid="struct_g_g___event_emitter" kindref="compound">GG_EventEmitter</ref>);</highlight></codeline>
<codeline lineno="75"><highlight class="normal"></highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_g_g___event_listener" kindref="compound">GG_EventListener</ref>*<sp/>listener;</highlight></codeline>
<codeline lineno="77"><highlight class="normal">}<sp/><ref refid="struct_g_g___event_emitter_base" kindref="compound">GG_EventEmitterBase</ref>;</highlight></codeline>
<codeline lineno="78"><highlight class="normal"></highlight></codeline>
<codeline lineno="82"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group___events_1ga86f069e738cc8ceadde83b258d1b5188" kindref="member">GG_EventEmitterBase_Init</ref>(<ref refid="struct_g_g___event_emitter_base" kindref="compound">GG_EventEmitterBase</ref>*<sp/></highlight><highlight class="keyword">self</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="83"><highlight class="normal"></highlight></codeline>
<codeline lineno="85"><highlight class="normal"></highlight></codeline>
<codeline lineno="86"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>__cplusplus</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="87"><highlight class="normal">}</highlight></codeline>
<codeline lineno="88"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">/*<sp/>__cplusplus<sp/>*/</highlight><highlight class="preprocessor"></highlight></codeline>
    </programlisting>
    <location file="xp/common/gg_events.h"/>
  </compounddef>
</doxygen>
