<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.16">
  <compounddef id="gg__coap__event__emitter_8h" kind="file" language="C++">
    <compoundname>gg_coap_event_emitter.h</compoundname>
    <includes local="no">stdint.h</includes>
    <includes refid="gg__coap_8h" local="yes">xp/coap/gg_coap.h</includes>
    <incdepgraph>
      <node id="8">
        <label>stdbool.h</label>
      </node>
      <node id="3">
        <label>xp/coap/gg_coap.h</label>
        <link refid="gg__coap_8h"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
      </node>
      <node id="13">
        <label>assert.h</label>
      </node>
      <node id="11">
        <label>xp/common/gg_memory.h</label>
        <link refid="gg__memory_8h"/>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>stdint.h</label>
      </node>
      <node id="10">
        <label>xp/common/gg_strings.h</label>
        <link refid="gg__strings_8h"/>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
      </node>
      <node id="15">
        <label>xp/common/gg_lists.h</label>
        <link refid="gg__lists_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
      </node>
      <node id="6">
        <label>stddef.h</label>
      </node>
      <node id="4">
        <label>xp/common/gg_io.h</label>
        <link refid="gg__io_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
      </node>
      <node id="5">
        <label>xp/common/gg_types.h</label>
        <link refid="gg__types_8h"/>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="14">
        <label>xp/common/gg_inspect.h</label>
        <link refid="gg__inspect_8h"/>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
      </node>
      <node id="9">
        <label>xp/common/gg_results.h</label>
        <link refid="gg__results_8h"/>
      </node>
      <node id="12">
        <label>xp/common/gg_port.h</label>
        <link refid="gg__port_8h"/>
        <childnode refid="13" relation="include">
        </childnode>
      </node>
      <node id="7">
        <label>xp/common/gg_buffer.h</label>
        <link refid="gg__buffer_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
      </node>
      <node id="16">
        <label>xp/common/gg_timer.h</label>
        <link refid="gg__timer_8h"/>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
      </node>
      <node id="1">
        <label>xp/utils/gg_coap_event_emitter.h</label>
        <link refid="gg__coap__event__emitter_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
    </incdepgraph>
      <sectiondef kind="define">
      <memberdef kind="define" id="group___utils_1gad60f0d7a77645ed308ee676eb7328265" prot="public" static="no">
        <name>GG_COAP_EVENT_EMITTER_MAX_PATH_SEGMENTS</name>
        <initializer>4</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="xp/utils/gg_coap_event_emitter.h" line="61" column="9" bodyfile="xp/utils/gg_coap_event_emitter.h" bodystart="61" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___utils_1gaf8c46018bbe62d28eb1ef3fc3c99d6f9" prot="public" static="no">
        <name>GG_COAP_EVENT_EMITTER_DEFAULT_RETRY_DELAY</name>
        <initializer>(30 * <ref refid="group___utilities_1ga7239e78cd3b6fb34ae687c00d9353133" kindref="member">GG_MILLISECONDS_PER_SECOND</ref>)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="xp/utils/gg_coap_event_emitter.h" line="64" column="9" bodyfile="xp/utils/gg_coap_event_emitter.h" bodystart="64" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___utils_1ga03cbe415afc38bda88c542b7693c993a" prot="public" static="no">
        <name>GG_COAP_EVENT_EMITTER_DEFAULT_MIN_REQUEST_AGE</name>
        <initializer>(5 * <ref refid="group___utilities_1ga7239e78cd3b6fb34ae687c00d9353133" kindref="member">GG_MILLISECONDS_PER_SECOND</ref>)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="xp/utils/gg_coap_event_emitter.h" line="67" column="9" bodyfile="xp/utils/gg_coap_event_emitter.h" bodystart="67" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="typedef">
      <memberdef kind="typedef" id="group___utils_1ga0479f5bb25078ca756410a85d3d70c5d" prot="public" static="no">
        <type>struct <ref refid="group___utils_1ga0479f5bb25078ca756410a85d3d70c5d" kindref="member">GG_CoapEventEmitter</ref></type>
        <definition>typedef struct GG_CoapEventEmitter GG_CoapEventEmitter</definition>
        <argsstring></argsstring>
        <name>GG_CoapEventEmitter</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>A CoAP Event Emitter is a service object that is responsible for notifying a remote entity of events, over CoAP. Events have a type ID. At any point in time, an event can be set or not set. The Event Emitter keeps a current set of events that are set. This is a set, not a list or queue, so the Event Emitter only keeps track, for each event type, of whether the event is set or not. The Event Emitter guarantees the delivery of the list of currently set events to the remote CoAP endpoint. This means that it will continuously attempt to deliver a CoAP request to the remote endpoint until a response is received. Retry attempts are a combination of CoAP-level retransmissions (automatic retransmission with exponential back-off) and service-level resends (i.e if the CoAP-level retransmissions time out, the service will send a new request). The only exception to that rule is when the CoAP server returns a response that indicates that there is a programming error or a misconfiguration (a 4.XX response), in which case the request is not retried. When a response from the remote is received, all events that where in the &quot;in-flight&quot; set are no longer set (until a call to GG_CoapEventEmitter_SetEvent for that event type). </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="xp/utils/gg_coap_event_emitter.h" line="61" column="21" bodyfile="xp/utils/gg_coap_event_emitter.h" bodystart="55" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="group___utils_1ga33f3ee3b77130278eace73ca140591e0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group___errors_1gacf7401469f33ad0744f7f1f7006fd021" kindref="member">GG_Result</ref></type>
        <definition>GG_Result GG_CoapEventEmitter_Create</definition>
        <argsstring>(GG_CoapEndpoint *coap_endpoint, const char *coap_path, GG_TimerScheduler *timer_scheduler, size_t max_events, uint32_t retry_delay, uint32_t min_request_age, GG_CoapEventEmitter **emitter)</argsstring>
        <name>GG_CoapEventEmitter_Create</name>
        <param>
          <type><ref refid="group___co_a_p_1ga503e861afa7a81ea05f35da9eea44b69" kindref="member">GG_CoapEndpoint</ref> *</type>
          <declname>coap_endpoint</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>coap_path</declname>
        </param>
        <param>
          <type><ref refid="group___timers_1ga6ff5e8533aca5a1fef6894a2fb8bcfa5" kindref="member">GG_TimerScheduler</ref> *</type>
          <declname>timer_scheduler</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>max_events</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>retry_delay</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>min_request_age</declname>
        </param>
        <param>
          <type><ref refid="group___utils_1ga0479f5bb25078ca756410a85d3d70c5d" kindref="member">GG_CoapEventEmitter</ref> **</type>
          <declname>emitter</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Create a CoAP event emitter.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coap_endpoint</parametername>
</parameternamelist>
<parameterdescription>
<para>CoAP endpoint through which to POST the events. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>coap_path</parametername>
</parameternamelist>
<parameterdescription>
<para>CoAP resource path to POST to (at most GG_COAP_EVENT_EMITTER_MAX_PATH_SEGMENTS segments). </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>timer_scheduler</parametername>
</parameternamelist>
<parameterdescription>
<para>Timer scheduler used to create and schedule internal timers. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>max_events</parametername>
</parameternamelist>
<parameterdescription>
<para>Maximum number of pending events. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>retry_delay</parametername>
</parameternamelist>
<parameterdescription>
<para>How long to wait before retrying a request after a failure (in millisecond). Pass 0 to use the default value (GG_COAP_EVENT_EMITTER_DEFAULT_RETRY_DELAY). </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>min_request_age</parametername>
</parameternamelist>
<parameterdescription>
<para>Minimum age of a request below which the event emitter won&apos;t cancel an in-flight request (in milliseconds). Pass 0 to use the default value (GG_COAP_EVENT_EMITTER_DEFAULT_MIN_REQUEST_AGE). </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">emitter</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to where the created object will be returned.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>GG_SUCCESS if the object could be created, or a negative error code. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="xp/utils/gg_coap_event_emitter.h" line="87" column="11" declfile="xp/utils/gg_coap_event_emitter.h" declline="87" declcolumn="11"/>
      </memberdef>
      <memberdef kind="function" id="group___utils_1ga44e1ddeed1be00070bc1e725380ddb7b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void GG_CoapEventEmitter_Destroy</definition>
        <argsstring>(GG_CoapEventEmitter *self)</argsstring>
        <name>GG_CoapEventEmitter_Destroy</name>
        <param>
          <type><ref refid="group___utils_1ga0479f5bb25078ca756410a85d3d70c5d" kindref="member">GG_CoapEventEmitter</ref> *</type>
          <declname>self</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Destroy the object.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>self</parametername>
</parameternamelist>
<parameterdescription>
<para>The object on which this method is invoked. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="xp/utils/gg_coap_event_emitter.h" line="100" column="6" declfile="xp/utils/gg_coap_event_emitter.h" declline="100" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="group___utils_1gaab5117676706da99c6d22fe7f5b20f2e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group___errors_1gacf7401469f33ad0744f7f1f7006fd021" kindref="member">GG_Result</ref></type>
        <definition>GG_Result GG_CoapEventEmitter_SetEvent</definition>
        <argsstring>(GG_CoapEventEmitter *self, uint32_t event_type, uint32_t max_latency)</argsstring>
        <name>GG_CoapEventEmitter_SetEvent</name>
        <param>
          <type><ref refid="group___utils_1ga0479f5bb25078ca756410a85d3d70c5d" kindref="member">GG_CoapEventEmitter</ref> *</type>
          <declname>self</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>event_type</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>max_latency</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Set an event.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>self</parametername>
</parameternamelist>
<parameterdescription>
<para>The object on which this method is invoked. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>event_type</parametername>
</parameternamelist>
<parameterdescription>
<para>The event to set. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>max_latency</parametername>
</parameternamelist>
<parameterdescription>
<para>The maximum time, in milliseconds, that the emitter may wait before sending a update to the server (this allows coalescing multiple events together).</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>GG_SUCCESS if the event could be set, or a negative error code. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="xp/utils/gg_coap_event_emitter.h" line="112" column="11" declfile="xp/utils/gg_coap_event_emitter.h" declline="112" declcolumn="11"/>
      </memberdef>
      <memberdef kind="function" id="group___utils_1gadf42b5a127000be18c5704d8f0a27ec8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group___errors_1gacf7401469f33ad0744f7f1f7006fd021" kindref="member">GG_Result</ref></type>
        <definition>GG_Result GG_CoapEventEmitter_UnsetEvent</definition>
        <argsstring>(GG_CoapEventEmitter *self, uint32_t event_type)</argsstring>
        <name>GG_CoapEventEmitter_UnsetEvent</name>
        <param>
          <type><ref refid="group___utils_1ga0479f5bb25078ca756410a85d3d70c5d" kindref="member">GG_CoapEventEmitter</ref> *</type>
          <declname>self</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>event_type</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Unset an event.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>self</parametername>
</parameternamelist>
<parameterdescription>
<para>The object on which this method is invoked. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>event_type</parametername>
</parameternamelist>
<parameterdescription>
<para>The event to unset.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>GG_SUCCESS if the event could be unset, or a negative error code. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="xp/utils/gg_coap_event_emitter.h" line="124" column="11" declfile="xp/utils/gg_coap_event_emitter.h" declline="124" declcolumn="11"/>
      </memberdef>
      <memberdef kind="function" id="group___utils_1ga5ac962fae54b6968f24dda7bb1dc1a2c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool GG_CoapEventEmitter_EventIsSet</definition>
        <argsstring>(GG_CoapEventEmitter *self, uint32_t event_type)</argsstring>
        <name>GG_CoapEventEmitter_EventIsSet</name>
        <param>
          <type><ref refid="group___utils_1ga0479f5bb25078ca756410a85d3d70c5d" kindref="member">GG_CoapEventEmitter</ref> *</type>
          <declname>self</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>event_type</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Returns whether an event is set or not.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>self</parametername>
</parameternamelist>
<parameterdescription>
<para>The object on which this method is invoked. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>event_type</parametername>
</parameternamelist>
<parameterdescription>
<para>The event to query.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><computeroutput>true</computeroutput> if the event is set, or <computeroutput>false</computeroutput> if it isn&apos;t. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="xp/utils/gg_coap_event_emitter.h" line="134" column="6" declfile="xp/utils/gg_coap_event_emitter.h" declline="134" declcolumn="6"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para><simplesect kind="copyright"><para>Copyright 2017-2020 Fitbit, Inc SPDX-License-Identifier: Apache-2.0</para>
</simplesect>
<simplesect kind="author"><para>Gilles Boccon-Gibod</para>
</simplesect>
<simplesect kind="date"><para>2018-12-06 </para>
</simplesect>
</para>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"></codeline>
<codeline lineno="15"><highlight class="preprocessor">#pragma<sp/>once</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(__cplusplus)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;C&quot;</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight><highlight class="comment">/*----------------------------------------------------------------------</highlight></codeline>
<codeline lineno="26"><highlight class="comment">|<sp/><sp/><sp/>includes</highlight></codeline>
<codeline lineno="27"><highlight class="comment">+---------------------------------------------------------------------*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;stdint.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="gg__coap_8h" kindref="compound">xp/coap/gg_coap.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight><highlight class="comment">/*----------------------------------------------------------------------</highlight></codeline>
<codeline lineno="33"><highlight class="comment">|<sp/><sp/><sp/>types</highlight></codeline>
<codeline lineno="34"><highlight class="comment">+---------------------------------------------------------------------*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight></codeline>
<codeline lineno="55" refid="group___utils_1ga0479f5bb25078ca756410a85d3d70c5d" refkind="member"><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="group___utils_1ga0479f5bb25078ca756410a85d3d70c5d" kindref="member">GG_CoapEventEmitter</ref><sp/><ref refid="group___utils_1ga0479f5bb25078ca756410a85d3d70c5d" kindref="member">GG_CoapEventEmitter</ref>;</highlight></codeline>
<codeline lineno="56"><highlight class="normal"></highlight></codeline>
<codeline lineno="57"><highlight class="normal"></highlight><highlight class="comment">/*----------------------------------------------------------------------</highlight></codeline>
<codeline lineno="58"><highlight class="comment">|<sp/><sp/><sp/>constants</highlight></codeline>
<codeline lineno="59"><highlight class="comment">+---------------------------------------------------------------------*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="60"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Maximum<sp/>number<sp/>of<sp/>path<sp/>segments<sp/>(ex:<sp/>a/b/c/d<sp/>-&gt;<sp/>4<sp/>segments)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="61"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>GG_COAP_EVENT_EMITTER_MAX_PATH_SEGMENTS<sp/>4</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="62"><highlight class="normal"></highlight></codeline>
<codeline lineno="63"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Default<sp/>value<sp/>for<sp/>how<sp/>long<sp/>to<sp/>wait<sp/>before<sp/>we<sp/>retry<sp/>a<sp/>request<sp/>(in<sp/>ms)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="64"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>GG_COAP_EVENT_EMITTER_DEFAULT_RETRY_DELAY<sp/><sp/><sp/><sp/><sp/><sp/><sp/>(30<sp/>*<sp/>GG_MILLISECONDS_PER_SECOND)<sp/>//<sp/>30<sp/>seconds</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="65"><highlight class="normal"></highlight></codeline>
<codeline lineno="66"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Default<sp/>minimum<sp/>age<sp/>of<sp/>a<sp/>request<sp/>before<sp/>we<sp/>can<sp/>cancel<sp/>it<sp/>(in<sp/>ms)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="67"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>GG_COAP_EVENT_EMITTER_DEFAULT_MIN_REQUEST_AGE<sp/><sp/><sp/>(5<sp/>*<sp/>GG_MILLISECONDS_PER_SECOND)<sp/>//<sp/>5<sp/>seconds</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="68"><highlight class="normal"></highlight></codeline>
<codeline lineno="69"><highlight class="normal"></highlight><highlight class="comment">/*----------------------------------------------------------------------</highlight></codeline>
<codeline lineno="70"><highlight class="comment">|<sp/><sp/><sp/>functions</highlight></codeline>
<codeline lineno="71"><highlight class="comment">+---------------------------------------------------------------------*/</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><ref refid="group___errors_1gacf7401469f33ad0744f7f1f7006fd021" kindref="member">GG_Result</ref><sp/><ref refid="group___utils_1ga33f3ee3b77130278eace73ca140591e0" kindref="member">GG_CoapEventEmitter_Create</ref>(<ref refid="group___co_a_p_1ga503e861afa7a81ea05f35da9eea44b69" kindref="member">GG_CoapEndpoint</ref>*<sp/><sp/><sp/><sp/><sp/><sp/>coap_endpoint,</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>coap_path,</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group___timers_1ga6ff5e8533aca5a1fef6894a2fb8bcfa5" kindref="member">GG_TimerScheduler</ref>*<sp/><sp/><sp/><sp/>timer_scheduler,</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>max_events,</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>retry_delay,</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>min_request_age,</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group___utils_1ga0479f5bb25078ca756410a85d3d70c5d" kindref="member">GG_CoapEventEmitter</ref>**<sp/>emitter);</highlight></codeline>
<codeline lineno="94"><highlight class="normal"></highlight></codeline>
<codeline lineno="100"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group___utils_1ga44e1ddeed1be00070bc1e725380ddb7b" kindref="member">GG_CoapEventEmitter_Destroy</ref>(<ref refid="group___utils_1ga0479f5bb25078ca756410a85d3d70c5d" kindref="member">GG_CoapEventEmitter</ref>*<sp/></highlight><highlight class="keyword">self</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="101"><highlight class="normal"></highlight></codeline>
<codeline lineno="112"><highlight class="normal"><ref refid="group___errors_1gacf7401469f33ad0744f7f1f7006fd021" kindref="member">GG_Result</ref><sp/><ref refid="group___utils_1gaab5117676706da99c6d22fe7f5b20f2e" kindref="member">GG_CoapEventEmitter_SetEvent</ref>(<ref refid="group___utils_1ga0479f5bb25078ca756410a85d3d70c5d" kindref="member">GG_CoapEventEmitter</ref>*<sp/></highlight><highlight class="keyword">self</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>event_type,</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>max_latency);</highlight></codeline>
<codeline lineno="115"><highlight class="normal"></highlight></codeline>
<codeline lineno="124"><highlight class="normal"><ref refid="group___errors_1gacf7401469f33ad0744f7f1f7006fd021" kindref="member">GG_Result</ref><sp/><ref refid="group___utils_1gadf42b5a127000be18c5704d8f0a27ec8" kindref="member">GG_CoapEventEmitter_UnsetEvent</ref>(<ref refid="group___utils_1ga0479f5bb25078ca756410a85d3d70c5d" kindref="member">GG_CoapEventEmitter</ref>*<sp/></highlight><highlight class="keyword">self</highlight><highlight class="normal">,<sp/>uint32_t<sp/>event_type);</highlight></codeline>
<codeline lineno="125"><highlight class="normal"></highlight></codeline>
<codeline lineno="134"><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="group___utils_1ga5ac962fae54b6968f24dda7bb1dc1a2c" kindref="member">GG_CoapEventEmitter_EventIsSet</ref>(<ref refid="group___utils_1ga0479f5bb25078ca756410a85d3d70c5d" kindref="member">GG_CoapEventEmitter</ref>*<sp/></highlight><highlight class="keyword">self</highlight><highlight class="normal">,<sp/>uint32_t<sp/>event_type);</highlight></codeline>
<codeline lineno="135"><highlight class="normal"></highlight></codeline>
<codeline lineno="137"><highlight class="normal"></highlight></codeline>
<codeline lineno="138"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(__cplusplus)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="139"><highlight class="normal">}</highlight></codeline>
<codeline lineno="140"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
    </programlisting>
    <location file="xp/utils/gg_coap_event_emitter.h"/>
  </compounddef>
</doxygen>
