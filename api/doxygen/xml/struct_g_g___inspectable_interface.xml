<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.16">
  <compounddef id="struct_g_g___inspectable_interface" kind="struct" language="C++" prot="public">
    <compoundname>GG_InspectableInterface</compoundname>
    <includes refid="gg__inspect_8h" local="no">xp/common/gg_inspect.h</includes>
      <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="struct_g_g___inspectable_interface_1a686c90f2185f391650f346af0d3551fe" prot="public" static="no" mutable="no">
        <type><ref refid="group___errors_1gacf7401469f33ad0744f7f1f7006fd021" kindref="member">GG_Result</ref>(*</type>
        <definition>GG_Result(* GG_InspectableInterface::Inspect) (GG_Inspectable *self, GG_Inspector *inspector, const GG_InspectionOptions *options)</definition>
        <argsstring>)(GG_Inspectable *self, GG_Inspector *inspector, const GG_InspectionOptions *options)</argsstring>
        <name>Inspect</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Inspect an object. The inspected object will call back an inspector for each field that may be inspected. The inspector may be called back 0 or more times, depending on the amount of detail the object has. When this call returns, no futher callback will be invoked on the inspector.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>self</parametername>
</parameternamelist>
<parameterdescription>
<para>The object on which this method is invoked. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>inspector</parametername>
</parameternamelist>
<parameterdescription>
<para>The inspector that should be called back during the inspection. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>options.</parametername>
</parameternamelist>
<parameterdescription>
<para>Options for the inspection. May be NULL when no specific option is needed.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>GG_SUCCESS if the call succeeded, or a negative error code. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="xp/common/gg_inspect.h" line="145" column="5" bodyfile="xp/common/gg_inspect.h" bodystart="145" bodyend="-1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Interface implemented by objects that can be inspected. </para>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="xp/common/gg_inspect.h" line="132" column="30" bodyfile="xp/common/gg_inspect.h" bodystart="132" bodyend="146"/>
    <listofallmembers>
      <member refid="struct_g_g___inspectable_interface_1a686c90f2185f391650f346af0d3551fe" prot="public" virt="non-virtual"><scope>GG_InspectableInterface</scope><name>Inspect</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
