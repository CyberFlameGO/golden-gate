<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.16">
  <compounddef id="struct_g_g___frame_serializer" kind="interface" language="C++" prot="public">
    <compoundname>GG_FrameSerializer</compoundname>
    <includes refid="gg__protocols_8h" local="no">xp/protocols/gg_protocols.h</includes>
      <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="struct_g_g___frame_serializer_1ac8061db7bc7410c44d96bae8964a9d4a" prot="public" static="no" mutable="no">
        <type>const <ref refid="struct_g_g___frame_serializer_interface" kindref="compound">GG_FrameSerializerInterface</ref> *</type>
        <definition>const GG_FrameSerializerInterface* GG_FrameSerializer::vtable</definition>
        <argsstring></argsstring>
        <name>vtable</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="xp/protocols/gg_protocols.h" line="112" column="93" bodyfile="xp/protocols/gg_protocols.h" bodystart="112" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="related">
      <memberdef kind="function" id="group___protocol_helpers_1ga81d1c8770d526ac11e216ae8276a1d69" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group___errors_1gacf7401469f33ad0744f7f1f7006fd021" kindref="member">GG_Result</ref></type>
        <definition>GG_Result GG_FrameSerializer_SerializeFrame</definition>
        <argsstring>(GG_FrameSerializer *self, const uint8_t *frame, size_t frame_size, GG_RingBuffer *output)</argsstring>
        <name>GG_FrameSerializer_SerializeFrame</name>
        <param>
          <type><ref refid="struct_g_g___frame_serializer" kindref="compound">GG_FrameSerializer</ref> *</type>
          <declname>self</declname>
        </param>
        <param>
          <type>const uint8_t *</type>
          <declname>frame</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>frame_size</declname>
        </param>
        <param>
          <type><ref refid="struct_g_g___ring_buffer" kindref="compound">GG_RingBuffer</ref> *</type>
          <declname>output</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Serialize a frame into an output buffer. The serializer must consume the entire frame in a single call.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>self</parametername>
</parameternamelist>
<parameterdescription>
<para>The object on which this method is called. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>frame</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the frame data to serialize </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>frame_size</parametername>
</parameternamelist>
<parameterdescription>
<para>Size of frame </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>output</parametername>
</parameternamelist>
<parameterdescription>
<para>The buffer in which the serialized data should be written.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>GG_SUCCESS if the frame could be serialized, or a negative error code </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="xp/protocols/gg_protocols.h" line="138" column="11" declfile="xp/protocols/gg_protocols.h" declline="138" declcolumn="11"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Interface implemented by frame serializers. A frame serializer is an object that takes an IP frame and serializes it in way that is compatible with what a <ref refid="struct_g_g___frame_assembler" kindref="compound">GG_FrameAssembler</ref> object on the other end of a link can reassemble into a discrete IP packet. </para>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <collaborationgraph>
      <node id="1">
        <label>GG_FrameSerializer</label>
        <link refid="struct_g_g___frame_serializer"/>
        <childnode refid="2" relation="usage">
          <edgelabel>vtable</edgelabel>
        </childnode>
      </node>
      <node id="2">
        <label>GG_FrameSerializerInterface</label>
        <link refid="struct_g_g___frame_serializer_interface"/>
      </node>
    </collaborationgraph>
    <location file="xp/protocols/gg_protocols.h" line="112" column="58" bodyfile="xp/protocols/gg_protocols.h" bodystart="112" bodyend="112"/>
    <listofallmembers>
      <member refid="group___protocol_helpers_1ga81d1c8770d526ac11e216ae8276a1d69" prot="public" virt="non-virtual"><scope>GG_FrameSerializer</scope><name>GG_FrameSerializer_SerializeFrame</name></member>
      <member refid="struct_g_g___frame_serializer_1ac8061db7bc7410c44d96bae8964a9d4a" prot="public" virt="non-virtual"><scope>GG_FrameSerializer</scope><name>vtable</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
