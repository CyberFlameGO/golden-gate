<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.16">
  <compounddef id="group___co_a_p" kind="group">
    <compoundname>CoAP</compoundname>
    <title>CoAP</title>
    <innerclass refid="struct_g_g___coap_message_option" prot="public">GG_CoapMessageOption</innerclass>
    <innerclass refid="struct_g_g___coap_message_option_param" prot="public">GG_CoapMessageOptionParam</innerclass>
    <innerclass refid="struct_g_g___coap_message_option_iterator" prot="public">GG_CoapMessageOptionIterator</innerclass>
    <innerclass refid="struct_g_g___coap_response_listener" prot="public">GG_CoapResponseListener</innerclass>
    <innerclass refid="struct_g_g___coap_response_listener_interface" prot="public">GG_CoapResponseListenerInterface</innerclass>
    <innerclass refid="struct_g_g___coap_request_handler" prot="public">GG_CoapRequestHandler</innerclass>
    <innerclass refid="struct_g_g___coap_request_handler_interface" prot="public">GG_CoapRequestHandlerInterface</innerclass>
    <innerclass refid="struct_g_g___coap_request_handler_node" prot="public">GG_CoapRequestHandlerNode</innerclass>
    <innerclass refid="struct_g_g___coap_request_filter" prot="public">GG_CoapRequestFilter</innerclass>
    <innerclass refid="struct_g_g___coap_request_filter_interface" prot="public">GG_CoapRequestFilterInterface</innerclass>
    <innerclass refid="struct_g_g___coap_request_filter_node" prot="public">GG_CoapRequestFilterNode</innerclass>
    <innerclass refid="struct_g_g___coap_client_parameters" prot="public">GG_CoapClientParameters</innerclass>
    <innerclass refid="struct_g_g___coap_extended_error" prot="public">GG_CoapExtendedError</innerclass>
    <innerclass refid="struct_g_g___coap_message_block_info" prot="public">GG_CoapMessageBlockInfo</innerclass>
    <innerclass refid="struct_g_g___coap_blockwise_server_helper" prot="public">GG_CoapBlockwiseServerHelper</innerclass>
    <innerclass refid="struct_g_g___coap_block_source" prot="public">GG_CoapBlockSource</innerclass>
    <innerclass refid="struct_g_g___coap_block_source_interface" prot="public">GG_CoapBlockSourceInterface</innerclass>
    <innerclass refid="struct_g_g___coap_blockwise_response_listener" prot="public">GG_CoapBlockwiseResponseListener</innerclass>
    <innerclass refid="struct_g_g___coap_blockwise_response_listener_interface" prot="public">GG_CoapBlockwiseResponseListenerInterface</innerclass>
      <sectiondef kind="enum">
      <memberdef kind="enum" id="group___co_a_p_1gab552ef6ef30afd903e89dcc301823b54" prot="public" static="no" strong="no">
        <type></type>
        <name>GG_CoapMessageOptionType</name>
        <enumvalue id="group___co_a_p_1ggab552ef6ef30afd903e89dcc301823b54a6bbe2aa5169ced2e9702240a46287c44" prot="public">
          <name>GG_COAP_MESSAGE_OPTION_TYPE_EMPTY</name>
          <briefdescription>
<para>No data (used for empty options) </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group___co_a_p_1ggab552ef6ef30afd903e89dcc301823b54a9e3027c39f2ae605c922fc7fc9b36b4c" prot="public">
          <name>GG_COAP_MESSAGE_OPTION_TYPE_UINT</name>
          <briefdescription>
<para>The option data is an integer. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group___co_a_p_1ggab552ef6ef30afd903e89dcc301823b54a26300f90b742cd9abec6db9ecf48bf1f" prot="public">
          <name>GG_COAP_MESSAGE_OPTION_TYPE_STRING</name>
          <briefdescription>
<para>The option data is a string. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group___co_a_p_1ggab552ef6ef30afd903e89dcc301823b54a4872e734464fe48ccee8f64e5205a7c9" prot="public">
          <name>GG_COAP_MESSAGE_OPTION_TYPE_OPAQUE</name>
          <briefdescription>
<para>The option data is an opaque byte array. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Data type for a CoAP option value </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="xp/coap/gg_coap.h" line="95" column="14" bodyfile="xp/coap/gg_coap.h" bodystart="95" bodyend="100"/>
      </memberdef>
      <memberdef kind="enum" id="group___co_a_p_1gab00f564a93ded3e1ee5dd1546ba2640c" prot="public" static="no" strong="no">
        <type></type>
        <name>GG_CoapMethod</name>
        <enumvalue id="group___co_a_p_1ggab00f564a93ded3e1ee5dd1546ba2640ca495680cd7b4fd4693602b98da7dac810" prot="public">
          <name>GG_COAP_METHOD_GET</name>
          <initializer>= 1</initializer>
          <briefdescription>
<para>GET method. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group___co_a_p_1ggab00f564a93ded3e1ee5dd1546ba2640ca5c79f8a8104a0f057faf5b9b3d14be41" prot="public">
          <name>GG_COAP_METHOD_POST</name>
          <briefdescription>
<para>POST method. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group___co_a_p_1ggab00f564a93ded3e1ee5dd1546ba2640ca5643e4d41cc415cbb672c562649df1c0" prot="public">
          <name>GG_COAP_METHOD_PUT</name>
          <briefdescription>
<para>PUT method. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group___co_a_p_1ggab00f564a93ded3e1ee5dd1546ba2640ca29c70ea8e8ce8236124943e91d27c366" prot="public">
          <name>GG_COAP_METHOD_DELETE</name>
          <briefdescription>
<para>DELETE method. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>CoAP request method</para>
<para><blockquote><para>NOTE: CoAP encodes request methods and message codes in the same field, so </para>
</blockquote>GG_CoapMethod value is read by calling <computeroutput>GG_CoapMessage_GetCode</computeroutput> </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="xp/coap/gg_coap.h" line="375" column="14" bodyfile="xp/coap/gg_coap.h" bodystart="375" bodyend="380"/>
      </memberdef>
      <memberdef kind="enum" id="group___co_a_p_1ga3c8a4734141e0af67b89ac049c5544fa" prot="public" static="no" strong="no">
        <type></type>
        <name>GG_CoapMessageType</name>
        <enumvalue id="group___co_a_p_1gga3c8a4734141e0af67b89ac049c5544faad5687e44d034900aa17a2110ce68f842" prot="public">
          <name>GG_COAP_MESSAGE_TYPE_CON</name>
          <briefdescription>
<para>CON-firmable message (will be ACK&apos;ed) </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group___co_a_p_1gga3c8a4734141e0af67b89ac049c5544faa510681e5d417345dd730c65e1bf3a80f" prot="public">
          <name>GG_COAP_MESSAGE_TYPE_NON</name>
          <briefdescription>
<para>NON-confirmable message (will not be ACK&apos;ed) </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group___co_a_p_1gga3c8a4734141e0af67b89ac049c5544faaacdd88f71d597cefad51f881508dc5d8" prot="public">
          <name>GG_COAP_MESSAGE_TYPE_ACK</name>
          <briefdescription>
<para>ACK message. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group___co_a_p_1gga3c8a4734141e0af67b89ac049c5544faa67705d43937a4b413bb21c19a342c99d" prot="public">
          <name>GG_COAP_MESSAGE_TYPE_RST</name>
          <briefdescription>
<para>ReSeT message. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>CoAP message type </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="xp/coap/gg_coap.h" line="385" column="14" bodyfile="xp/coap/gg_coap.h" bodystart="385" bodyend="390"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="typedef">
      <memberdef kind="typedef" id="group___co_a_p_1ga9157b9a869a3491836c914884c1e6c7d" prot="public" static="no">
        <type>struct <ref refid="group___co_a_p_1ga9157b9a869a3491836c914884c1e6c7d" kindref="member">GG_CoapMessage</ref></type>
        <definition>typedef struct GG_CoapMessage GG_CoapMessage</definition>
        <argsstring></argsstring>
        <name>GG_CoapMessage</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>CoAP message </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="xp/coap/gg_coap.h" line="172" column="25" bodyfile="xp/coap/gg_coap.h" bodystart="71" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="group___co_a_p_1ga503e861afa7a81ea05f35da9eea44b69" prot="public" static="no">
        <type>struct <ref refid="group___co_a_p_1ga503e861afa7a81ea05f35da9eea44b69" kindref="member">GG_CoapEndpoint</ref></type>
        <definition>typedef struct GG_CoapEndpoint GG_CoapEndpoint</definition>
        <argsstring></argsstring>
        <name>GG_CoapEndpoint</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>CoAP endpoint, used to send and receive messages </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="xp/coap/gg_coap.h" line="172" column="25" bodyfile="xp/coap/gg_coap.h" bodystart="76" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="group___co_a_p_1ga1ab8c7d03b4e867ce05c9ace23e7a3df" prot="public" static="no">
        <type>struct <ref refid="group___co_a_p_1ga1ab8c7d03b4e867ce05c9ace23e7a3df" kindref="member">GG_CoapResponder</ref></type>
        <definition>typedef struct GG_CoapResponder GG_CoapResponder</definition>
        <argsstring></argsstring>
        <name>GG_CoapResponder</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>CoAP async responder </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="xp/coap/gg_coap.h" line="172" column="25" bodyfile="xp/coap/gg_coap.h" bodystart="81" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="group___co_a_p_1ga24904756d572f1366d2ed28f76718e7c" prot="public" static="no">
        <type>uint64_t</type>
        <definition>typedef uint64_t GG_CoapRequestHandle</definition>
        <argsstring></argsstring>
        <name>GG_CoapRequestHandle</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Handle used to reference a request without a direct pointer to it. The special value GG_COAP_INVALID_REQUEST_HANDLE, equal to 0, is a handle value that will never be assigned to a request by an endpoint, so it can be used by clients as an initialization value that is known to never be equal to an assigned handle. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="xp/coap/gg_coap.h" line="90" column="18" bodyfile="xp/coap/gg_coap.h" bodystart="90" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="group___co_a_p_1ga0ce36b755c0a0257e71b873d71a7947b" prot="public" static="no">
        <type><ref refid="group___errors_1gacf7401469f33ad0744f7f1f7006fd021" kindref="member">GG_Result</ref></type>
        <definition>typedef GG_Result GG_CoapRequestHandlerResult</definition>
        <argsstring></argsstring>
        <name>GG_CoapRequestHandlerResult</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="xp/coap/gg_coap.h" line="219" column="19" bodyfile="xp/coap/gg_coap.h" bodystart="219" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="group___co_a_p_1ga0ae8314f969e4e25c0774ec3f5f7b8bd" prot="public" static="no">
        <type>struct <ref refid="group___co_a_p_1ga0ae8314f969e4e25c0774ec3f5f7b8bd" kindref="member">GG_CoapGroupRequestFilter</ref></type>
        <definition>typedef struct GG_CoapGroupRequestFilter GG_CoapGroupRequestFilter</definition>
        <argsstring></argsstring>
        <name>GG_CoapGroupRequestFilter</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Request filter that filters out requests based on the <emphasis>group</emphasis> memberships of the handler that is selected to handle a request. Group memberships of a handler are specified at the time the handler is registered, using membership flags as part of the handler flags. There are 4 flag bits reserved for group membership (hence 4 possible groups that a handler can be a member of, in addition to group 0): GG_COAP_REQUEST_HANDLER_FLAG_GROUP_{1,2,3,4}</para>
<para>At any point in time, the filter has a <emphasis>current group</emphasis> property. When a request is received, the filter will let it pass through if the handler for that request is in the current group, otherwise a GG_COAP_MESSAGE_CODE_FORBIDDEN response is returned.</para>
<para>Note that all handlers are automatically implicitly part of group 0, and the default value for the current group is 0 when the filter is first created. This means that by default, all requests will pass through the filter. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="xp/coap/gg_coap_filters.h" line="212" column="5" bodyfile="xp/coap/gg_coap_filters.h" bodystart="65" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="group___co_a_p_1ga59c885ccfe798ae903b6a24fabf098b6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void GG_CoapResponseListener_OnAck</definition>
        <argsstring>(GG_CoapResponseListener *self)</argsstring>
        <name>GG_CoapResponseListener_OnAck</name>
        <param>
          <type><ref refid="struct_g_g___coap_response_listener" kindref="compound">GG_CoapResponseListener</ref> *</type>
          <declname>self</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="xp/coap/gg_coap.h" line="215" column="6" declfile="xp/coap/gg_coap.h" declline="215" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="group___co_a_p_1gae325cf4b64c7cff54d2cebce5ccebbc4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void GG_CoapResponseListener_OnError</definition>
        <argsstring>(GG_CoapResponseListener *self, GG_Result error, const char *message)</argsstring>
        <name>GG_CoapResponseListener_OnError</name>
        <param>
          <type><ref refid="struct_g_g___coap_response_listener" kindref="compound">GG_CoapResponseListener</ref> *</type>
          <declname>self</declname>
        </param>
        <param>
          <type><ref refid="group___errors_1gacf7401469f33ad0744f7f1f7006fd021" kindref="member">GG_Result</ref></type>
          <declname>error</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>message</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="xp/coap/gg_coap.h" line="216" column="6" declfile="xp/coap/gg_coap.h" declline="216" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="group___co_a_p_1gafee5e3a4e42bfa5d4acfa3ffa5a9d773" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void GG_CoapResponseListener_OnResponse</definition>
        <argsstring>(GG_CoapResponseListener *self, GG_CoapMessage *response)</argsstring>
        <name>GG_CoapResponseListener_OnResponse</name>
        <param>
          <type><ref refid="struct_g_g___coap_response_listener" kindref="compound">GG_CoapResponseListener</ref> *</type>
          <declname>self</declname>
        </param>
        <param>
          <type><ref refid="group___co_a_p_1ga9157b9a869a3491836c914884c1e6c7d" kindref="member">GG_CoapMessage</ref> *</type>
          <declname>response</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="xp/coap/gg_coap.h" line="217" column="6" declfile="xp/coap/gg_coap.h" declline="217" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="group___co_a_p_1ga3ee241533342de9ce056e352fbdfcc10" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group___errors_1gacf7401469f33ad0744f7f1f7006fd021" kindref="member">GG_Result</ref></type>
        <definition>GG_Result GG_CoapRequestHandler_OnRequest</definition>
        <argsstring>(GG_CoapRequestHandler *self, GG_CoapEndpoint *endpoint, const GG_CoapMessage *request, GG_CoapResponder *responder, const GG_BufferMetadata *transport_metadata, GG_CoapMessage **response)</argsstring>
        <name>GG_CoapRequestHandler_OnRequest</name>
        <param>
          <type><ref refid="struct_g_g___coap_request_handler" kindref="compound">GG_CoapRequestHandler</ref> *</type>
          <declname>self</declname>
        </param>
        <param>
          <type><ref refid="group___co_a_p_1ga503e861afa7a81ea05f35da9eea44b69" kindref="member">GG_CoapEndpoint</ref> *</type>
          <declname>endpoint</declname>
        </param>
        <param>
          <type>const <ref refid="group___co_a_p_1ga9157b9a869a3491836c914884c1e6c7d" kindref="member">GG_CoapMessage</ref> *</type>
          <declname>request</declname>
        </param>
        <param>
          <type><ref refid="group___co_a_p_1ga1ab8c7d03b4e867ce05c9ace23e7a3df" kindref="member">GG_CoapResponder</ref> *</type>
          <declname>responder</declname>
        </param>
        <param>
          <type>const <ref refid="struct_g_g___buffer_metadata" kindref="compound">GG_BufferMetadata</ref> *</type>
          <declname>transport_metadata</declname>
        </param>
        <param>
          <type><ref refid="group___co_a_p_1ga9157b9a869a3491836c914884c1e6c7d" kindref="member">GG_CoapMessage</ref> **</type>
          <declname>response</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="xp/coap/gg_coap.h" line="266" column="11" declfile="xp/coap/gg_coap.h" declline="266" declcolumn="11"/>
      </memberdef>
      <memberdef kind="function" id="group___co_a_p_1gaf356cd5aeaf1551b5475316671f33f3e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group___errors_1gacf7401469f33ad0744f7f1f7006fd021" kindref="member">GG_Result</ref></type>
        <definition>GG_Result GG_CoapMessage_Create</definition>
        <argsstring>(uint8_t code, GG_CoapMessageType type, GG_CoapMessageOptionParam *options, size_t options_count, uint16_t message_id, const uint8_t *token, size_t token_length, const uint8_t *payload, size_t payload_size, GG_CoapMessage **message)</argsstring>
        <name>GG_CoapMessage_Create</name>
        <param>
          <type>uint8_t</type>
          <declname>code</declname>
        </param>
        <param>
          <type><ref refid="group___co_a_p_1ga3c8a4734141e0af67b89ac049c5544fa" kindref="member">GG_CoapMessageType</ref></type>
          <declname>type</declname>
        </param>
        <param>
          <type><ref refid="struct_g_g___coap_message_option_param" kindref="compound">GG_CoapMessageOptionParam</ref> *</type>
          <declname>options</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>options_count</declname>
        </param>
        <param>
          <type>uint16_t</type>
          <declname>message_id</declname>
        </param>
        <param>
          <type>const uint8_t *</type>
          <declname>token</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>token_length</declname>
        </param>
        <param>
          <type>const uint8_t *</type>
          <declname>payload</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>payload_size</declname>
        </param>
        <param>
          <type><ref refid="group___co_a_p_1ga9157b9a869a3491836c914884c1e6c7d" kindref="member">GG_CoapMessage</ref> **</type>
          <declname>message</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Create a CoAP message object.</para>
<para>A message may be created with no payload (<computeroutput>payload</computeroutput> == NULL and <computeroutput>payload_size</computeroutput> == 0), a payload that is already known (<computeroutput>payload</computeroutput> != NULL and <computeroutput>payload_size</computeroutput> != 0), or a payload reservation (<computeroutput>payload</computeroutput> == NULL, and <computeroutput>payload_size</computeroutput> != 0). When using a reservation, the payload will initially be filled with zeros. It may be updated subsequently by obtaining a pointer to the payload buffer by calling <computeroutput>GG_CoapMessage_UsePayload</computeroutput> and writing new data in the buffer, prior to sending the message.</para>
<para><blockquote><para>NOTE: the payload data passed to this function is copied, so the caller does not need to </para>
</blockquote>keep that memory valid after the call returns.</para>
<para>The <computeroutput>options</computeroutput> passed to this constructor are contained in possibly-chained arrays of <ref refid="struct_g_g___coap_message_option_param" kindref="compound">GG_CoapMessageOptionParam</ref> structs. Each struct should be initialized using one of:<itemizedlist>
<listitem><para><ref refid="group___co_a_p_1ga42c2bd384fb0f45b0d322073eec20167" kindref="member">GG_COAP_MESSAGE_OPTION_PARAM_EMPTY</ref></para>
</listitem><listitem><para><ref refid="group___co_a_p_1ga826886c7a8708763fe7a705b10a7dba7" kindref="member">GG_COAP_MESSAGE_OPTION_PARAM_UINT</ref></para>
</listitem><listitem><para><ref refid="group___co_a_p_1ga09ac51f227d5f94f18c8cbd8840b1c0f" kindref="member">GG_COAP_MESSAGE_OPTION_PARAM_STRING</ref></para>
</listitem><listitem><para><ref refid="group___co_a_p_1ga916ca1e998f7dc94a811dd46996da86a" kindref="member">GG_COAP_MESSAGE_OPTION_PARAM_STRING_L</ref></para>
</listitem><listitem><para><ref refid="group___co_a_p_1ga86d85946d0cb9e64f58035805cca81e4" kindref="member">GG_COAP_MESSAGE_OPTION_PARAM_OPAQUE</ref></para>
</listitem></itemizedlist>
</para>
<para>When reading the <computeroutput>options</computeroutput> used to initialize the message, the constructor will read <computeroutput>options_count</computeroutput> options, as follows: The first option is pointed to by the <computeroutput>options</computeroutput> parameter. For each subsequent options, up to <computeroutput>options_count</computeroutput>, the option pointer is obtained either by following the <computeroutput>next</computeroutput> pointer if not NULL, or by iterating to the next pointer assuming an array layout. Chaining through the <computeroutput>next</computeroutput> pointer must be done by the caller before calling this constructor.</para>
<para><blockquote><para>NOTE: the implementation of this method uses the <computeroutput>next</computeroutput> field of options params internally </para>
</blockquote>to sort the options when serializing, so the caller should expect those fields to be different from them original values when the method returns.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>code</parametername>
</parameternamelist>
<parameterdescription>
<para>Message code (use a constant from <ref refid="group___co_a_p_1gab00f564a93ded3e1ee5dd1546ba2640c" kindref="member">GG_CoapMethod</ref> or <computeroutput>GG_COAP_MESSAGE_CODE_xxx</computeroutput>) </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>type</parametername>
</parameternamelist>
<parameterdescription>
<para>Message type. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>options</parametername>
</parameternamelist>
<parameterdescription>
<para>Array of message options (or NULL if there are no options). </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>options_count</parametername>
</parameternamelist>
<parameterdescription>
<para>Number of options. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>message_id</parametername>
</parameternamelist>
<parameterdescription>
<para>Message ID. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>token</parametername>
</parameternamelist>
<parameterdescription>
<para>Message token. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>token_length</parametername>
</parameternamelist>
<parameterdescription>
<para>Length of the message token. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>payload</parametername>
</parameternamelist>
<parameterdescription>
<para>Message payload (may be NULL if the payload size is 0, or the payload is unspecified). </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>payload_size</parametername>
</parameternamelist>
<parameterdescription>
<para>Size of the payload. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>message</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the variable where the message object will be returned.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>GG_SUCCESS if the message could be created, or a negative error code. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="xp/coap/gg_coap.h" line="631" column="11" declfile="xp/coap/gg_coap.h" declline="631" declcolumn="11"/>
      </memberdef>
      <memberdef kind="function" id="group___co_a_p_1gacc6e540f4d39c010040d5e1198e60af8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void GG_CoapMessage_Destroy</definition>
        <argsstring>(GG_CoapMessage *self)</argsstring>
        <name>GG_CoapMessage_Destroy</name>
        <param>
          <type><ref refid="group___co_a_p_1ga9157b9a869a3491836c914884c1e6c7d" kindref="member">GG_CoapMessage</ref> *</type>
          <declname>self</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Destroy a CoAP message.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>self</parametername>
</parameternamelist>
<parameterdescription>
<para>The object on which this method is called. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="xp/coap/gg_coap.h" line="647" column="6" declfile="xp/coap/gg_coap.h" declline="647" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="group___co_a_p_1gaa8b013b55bccc2cd9c2c6e65995baca3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group___errors_1gacf7401469f33ad0744f7f1f7006fd021" kindref="member">GG_Result</ref></type>
        <definition>GG_Result GG_CoapMessage_CreateFromDatagram</definition>
        <argsstring>(GG_Buffer *datagram, GG_CoapMessage **message)</argsstring>
        <name>GG_CoapMessage_CreateFromDatagram</name>
        <param>
          <type><ref refid="interface_g_g___buffer" kindref="compound">GG_Buffer</ref> *</type>
          <declname>datagram</declname>
        </param>
        <param>
          <type><ref refid="group___co_a_p_1ga9157b9a869a3491836c914884c1e6c7d" kindref="member">GG_CoapMessage</ref> **</type>
          <declname>message</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Create a CoAP message by parsing an encoded datagram.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>datagram</parametername>
</parameternamelist>
<parameterdescription>
<para>The datagram to parse. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>message</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the variable where the message object will be returned.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>GG_SUCCESS if the message could be created, or a negative error code. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="xp/coap/gg_coap.h" line="657" column="11" declfile="xp/coap/gg_coap.h" declline="657" declcolumn="11"/>
      </memberdef>
      <memberdef kind="function" id="group___co_a_p_1gad032149516c537166c8406d64546f56e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group___errors_1gacf7401469f33ad0744f7f1f7006fd021" kindref="member">GG_Result</ref></type>
        <definition>GG_Result GG_CoapMessage_ToDatagram</definition>
        <argsstring>(const GG_CoapMessage *self, GG_Buffer **datagram)</argsstring>
        <name>GG_CoapMessage_ToDatagram</name>
        <param>
          <type>const <ref refid="group___co_a_p_1ga9157b9a869a3491836c914884c1e6c7d" kindref="member">GG_CoapMessage</ref> *</type>
          <declname>self</declname>
        </param>
        <param>
          <type><ref refid="interface_g_g___buffer" kindref="compound">GG_Buffer</ref> **</type>
          <declname>datagram</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Obtain a <ref refid="interface_g_g___buffer" kindref="compound">GG_Buffer</ref> buffer containing the encoded datagram representation of a CoAP message. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>self</parametername>
</parameternamelist>
<parameterdescription>
<para>The object on which this method is called.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>GG_SUCCESS if the call succeeded, or a negative error code. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="xp/coap/gg_coap.h" line="665" column="11" declfile="xp/coap/gg_coap.h" declline="665" declcolumn="11"/>
      </memberdef>
      <memberdef kind="function" id="group___co_a_p_1ga35d82a49f33e8a779e8c0cbb177aa579" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="struct_g_g___inspectable" kindref="compound">GG_Inspectable</ref> *</type>
        <definition>GG_Inspectable* GG_CoapMessage_AsInspectable</definition>
        <argsstring>(GG_CoapMessage *self)</argsstring>
        <name>GG_CoapMessage_AsInspectable</name>
        <param>
          <type><ref refid="group___co_a_p_1ga9157b9a869a3491836c914884c1e6c7d" kindref="member">GG_CoapMessage</ref> *</type>
          <declname>self</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Obtain the <ref refid="struct_g_g___inspectable" kindref="compound">GG_Inspectable</ref> interface for a CoAP message. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="xp/coap/gg_coap.h" line="671" column="16" declfile="xp/coap/gg_coap.h" declline="671" declcolumn="16"/>
      </memberdef>
      <memberdef kind="function" id="group___co_a_p_1ga8f29f5ff32b29affaacf9ee8d29facdb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group___co_a_p_1ga3c8a4734141e0af67b89ac049c5544fa" kindref="member">GG_CoapMessageType</ref></type>
        <definition>GG_CoapMessageType GG_CoapMessage_GetType</definition>
        <argsstring>(const GG_CoapMessage *self)</argsstring>
        <name>GG_CoapMessage_GetType</name>
        <param>
          <type>const <ref refid="group___co_a_p_1ga9157b9a869a3491836c914884c1e6c7d" kindref="member">GG_CoapMessage</ref> *</type>
          <declname>self</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Get the type of a CoAP message.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>self</parametername>
</parameternamelist>
<parameterdescription>
<para>The object on which this method is called.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The message type. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="xp/coap/gg_coap.h" line="680" column="20" declfile="xp/coap/gg_coap.h" declline="680" declcolumn="20"/>
      </memberdef>
      <memberdef kind="function" id="group___co_a_p_1gaa46a3b15af1ac447e50fd739dd8ed417" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>uint8_t</type>
        <definition>uint8_t GG_CoapMessage_GetCode</definition>
        <argsstring>(const GG_CoapMessage *self)</argsstring>
        <name>GG_CoapMessage_GetCode</name>
        <param>
          <type>const <ref refid="group___co_a_p_1ga9157b9a869a3491836c914884c1e6c7d" kindref="member">GG_CoapMessage</ref> *</type>
          <declname>self</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Get the code of a CoAP message.</para>
<para><blockquote><para>NOTE a message code in the range 0-100 is also called a request method </para>
</blockquote>(values from the <ref refid="group___co_a_p_1gab00f564a93ded3e1ee5dd1546ba2640c" kindref="member">GG_CoapMethod</ref> enumeration). Message codes equal to or greater to 100 have constant macros named GG_COAP_MESSAGE_CODE_xxx</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>self</parametername>
</parameternamelist>
<parameterdescription>
<para>The object on which this method is called.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The message code. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="xp/coap/gg_coap.h" line="694" column="9" declfile="xp/coap/gg_coap.h" declline="694" declcolumn="9"/>
      </memberdef>
      <memberdef kind="function" id="group___co_a_p_1ga30444e1f683c220eed1d375846f34ac0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>size_t</type>
        <definition>size_t GG_CoapMessage_GetToken</definition>
        <argsstring>(const GG_CoapMessage *self, uint8_t *token)</argsstring>
        <name>GG_CoapMessage_GetToken</name>
        <param>
          <type>const <ref refid="group___co_a_p_1ga9157b9a869a3491836c914884c1e6c7d" kindref="member">GG_CoapMessage</ref> *</type>
          <declname>self</declname>
        </param>
        <param>
          <type>uint8_t *</type>
          <declname>token</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Get the token of a CoAP message.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>self</parametername>
</parameternamelist>
<parameterdescription>
<para>The object on which this method is called. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>token</parametername>
</parameternamelist>
<parameterdescription>
<para>Buffer in which the token bytes will be returned. This buffer must be able to hold at least <ref refid="group___co_a_p_1ga31063d6b747d2a86e98fe8136827b2aa" kindref="member">GG_COAP_MESSGAGE_MAX_TOKEN_LENGTH</ref> bytes.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The size of the token. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="xp/coap/gg_coap.h" line="706" column="8" declfile="xp/coap/gg_coap.h" declline="706" declcolumn="8"/>
      </memberdef>
      <memberdef kind="function" id="group___co_a_p_1gac6d5f1397d7cb1ec9893b75996e612b8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>uint16_t</type>
        <definition>uint16_t GG_CoapMessage_GetMessageId</definition>
        <argsstring>(const GG_CoapMessage *self)</argsstring>
        <name>GG_CoapMessage_GetMessageId</name>
        <param>
          <type>const <ref refid="group___co_a_p_1ga9157b9a869a3491836c914884c1e6c7d" kindref="member">GG_CoapMessage</ref> *</type>
          <declname>self</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Get the ID of a CoAP message.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>self</parametername>
</parameternamelist>
<parameterdescription>
<para>The object on which this method is called.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The message ID. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="xp/coap/gg_coap.h" line="715" column="10" declfile="xp/coap/gg_coap.h" declline="715" declcolumn="10"/>
      </memberdef>
      <memberdef kind="function" id="group___co_a_p_1ga4f1555346d764a27cab6adbf488d06b9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>size_t</type>
        <definition>size_t GG_CoapMessage_GetPayloadSize</definition>
        <argsstring>(const GG_CoapMessage *self)</argsstring>
        <name>GG_CoapMessage_GetPayloadSize</name>
        <param>
          <type>const <ref refid="group___co_a_p_1ga9157b9a869a3491836c914884c1e6c7d" kindref="member">GG_CoapMessage</ref> *</type>
          <declname>self</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Get the size of a CoAP message payload.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>self</parametername>
</parameternamelist>
<parameterdescription>
<para>The object on which this method is called.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The payload size. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="xp/coap/gg_coap.h" line="724" column="8" declfile="xp/coap/gg_coap.h" declline="724" declcolumn="8"/>
      </memberdef>
      <memberdef kind="function" id="group___co_a_p_1gab715e4f393f7a3d4e8f81ecdcb08eac7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>const uint8_t *</type>
        <definition>const uint8_t* GG_CoapMessage_GetPayload</definition>
        <argsstring>(const GG_CoapMessage *self)</argsstring>
        <name>GG_CoapMessage_GetPayload</name>
        <param>
          <type>const <ref refid="group___co_a_p_1ga9157b9a869a3491836c914884c1e6c7d" kindref="member">GG_CoapMessage</ref> *</type>
          <declname>self</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Get the payload of a CoAP message.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>self</parametername>
</parameternamelist>
<parameterdescription>
<para>The object on which this method is called.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The payload bytes, or NULL if the payload size is 0. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="xp/coap/gg_coap.h" line="733" column="15" declfile="xp/coap/gg_coap.h" declline="733" declcolumn="15"/>
      </memberdef>
      <memberdef kind="function" id="group___co_a_p_1ga85a6f1a935a4875569b1369a27b0a16c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>uint8_t *</type>
        <definition>uint8_t* GG_CoapMessage_UsePayload</definition>
        <argsstring>(const GG_CoapMessage *self)</argsstring>
        <name>GG_CoapMessage_UsePayload</name>
        <param>
          <type>const <ref refid="group___co_a_p_1ga9157b9a869a3491836c914884c1e6c7d" kindref="member">GG_CoapMessage</ref> *</type>
          <declname>self</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Get the writeable payload buffer of a CoAP message.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>self</parametername>
</parameternamelist>
<parameterdescription>
<para>The object on which this method is called.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The payload buffer, or NULL if the payload size is 0 or the payload is read-only. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="xp/coap/gg_coap.h" line="742" column="9" declfile="xp/coap/gg_coap.h" declline="742" declcolumn="9"/>
      </memberdef>
      <memberdef kind="function" id="group___co_a_p_1ga8858736a08ab2dbb1e69631813620bb5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group___errors_1gacf7401469f33ad0744f7f1f7006fd021" kindref="member">GG_Result</ref></type>
        <definition>GG_Result GG_CoapMessage_GetOption</definition>
        <argsstring>(const GG_CoapMessage *self, uint32_t option_number, GG_CoapMessageOption *option, unsigned int index)</argsstring>
        <name>GG_CoapMessage_GetOption</name>
        <param>
          <type>const <ref refid="group___co_a_p_1ga9157b9a869a3491836c914884c1e6c7d" kindref="member">GG_CoapMessage</ref> *</type>
          <declname>self</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>option_number</declname>
        </param>
        <param>
          <type><ref refid="struct_g_g___coap_message_option" kindref="compound">GG_CoapMessageOption</ref> *</type>
          <declname>option</declname>
        </param>
        <param>
          <type>unsigned int</type>
          <declname>index</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Get a message option by number (and optional index)</para>
<para>NOTE: this will potentially scan all options in the message, so if repeated calls to this method are made, it may be worth considering using an option iterator instead. <simplesect kind="see"><para><ref refid="struct_g_g___coap_message_option_iterator" kindref="compound">GG_CoapMessageOptionIterator</ref></para>
</simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>self</parametername>
</parameternamelist>
<parameterdescription>
<para>The object on which this method is called. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>option_number</parametername>
</parameternamelist>
<parameterdescription>
<para>Number of the option to get (see GG_COAP_MESSAGE_OPTION_XXX constants). </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>option</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the struct in which the option will be returned. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>index</parametername>
</parameternamelist>
<parameterdescription>
<para>Zero-based index of the option to get (out of the list of options of the specified type, not of all options). Pass 0 for the first matching option.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>GG_SUCCESS if the option was found, or a negative error code. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="xp/coap/gg_coap.h" line="761" column="11" declfile="xp/coap/gg_coap.h" declline="761" declcolumn="11"/>
      </memberdef>
      <memberdef kind="function" id="group___co_a_p_1ga14c9affbb14b09c056c9ff84285eefd4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void GG_CoapMessage_InitOptionIterator</definition>
        <argsstring>(const GG_CoapMessage *self, uint32_t filter, GG_CoapMessageOptionIterator *iterator)</argsstring>
        <name>GG_CoapMessage_InitOptionIterator</name>
        <param>
          <type>const <ref refid="group___co_a_p_1ga9157b9a869a3491836c914884c1e6c7d" kindref="member">GG_CoapMessage</ref> *</type>
          <declname>self</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>filter</declname>
        </param>
        <param>
          <type><ref refid="struct_g_g___coap_message_option_iterator" kindref="compound">GG_CoapMessageOptionIterator</ref> *</type>
          <declname>iterator</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Initialize a option iterator for a CoAP message. (See the <ref refid="struct_g_g___coap_message_option_iterator" kindref="compound">GG_CoapMessageOptionIterator</ref> documentation for details on how message option iterators work). <simplesect kind="see"><para><ref refid="struct_g_g___coap_message_option_iterator" kindref="compound">GG_CoapMessageOptionIterator</ref></para>
</simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>self</parametername>
</parameternamelist>
<parameterdescription>
<para>The object on which this method is called. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>filter</parametername>
</parameternamelist>
<parameterdescription>
<para>The filter indicating which options to include in the iteration. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>iterator</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to an iterator struct to initialize. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="xp/coap/gg_coap.h" line="776" column="6" declfile="xp/coap/gg_coap.h" declline="776" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="group___co_a_p_1gadc17bf3879b3b616dd7f10e3b94e083f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void GG_CoapMessage_StepOptionIterator</definition>
        <argsstring>(const GG_CoapMessage *self, GG_CoapMessageOptionIterator *iterator)</argsstring>
        <name>GG_CoapMessage_StepOptionIterator</name>
        <param>
          <type>const <ref refid="group___co_a_p_1ga9157b9a869a3491836c914884c1e6c7d" kindref="member">GG_CoapMessage</ref> *</type>
          <declname>self</declname>
        </param>
        <param>
          <type><ref refid="struct_g_g___coap_message_option_iterator" kindref="compound">GG_CoapMessageOptionIterator</ref> *</type>
          <declname>iterator</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Advance an option iterator for a CoAP message by one step. (See the <ref refid="struct_g_g___coap_message_option_iterator" kindref="compound">GG_CoapMessageOptionIterator</ref> documentation for details on how message option iterators work).</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>self</parametername>
</parameternamelist>
<parameterdescription>
<para>The object on which this method is called. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>iterator</parametername>
</parameternamelist>
<parameterdescription>
<para>The iterator to advance. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="xp/coap/gg_coap.h" line="788" column="6" declfile="xp/coap/gg_coap.h" declline="788" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="group___co_a_p_1gafc138e789f333c968b72bb7314ef9525" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group___errors_1gacf7401469f33ad0744f7f1f7006fd021" kindref="member">GG_Result</ref></type>
        <definition>GG_Result GG_CoapEndpoint_Create</definition>
        <argsstring>(GG_TimerScheduler *timer_scheduler, GG_DataSink *connection_sink, GG_DataSource *connection_source, GG_CoapEndpoint **endpoint)</argsstring>
        <name>GG_CoapEndpoint_Create</name>
        <param>
          <type><ref refid="group___timers_1ga6ff5e8533aca5a1fef6894a2fb8bcfa5" kindref="member">GG_TimerScheduler</ref> *</type>
          <declname>timer_scheduler</declname>
        </param>
        <param>
          <type><ref refid="struct_g_g___data_sink" kindref="compound">GG_DataSink</ref> *</type>
          <declname>connection_sink</declname>
        </param>
        <param>
          <type><ref refid="struct_g_g___data_source" kindref="compound">GG_DataSource</ref> *</type>
          <declname>connection_source</declname>
        </param>
        <param>
          <type><ref refid="group___co_a_p_1ga503e861afa7a81ea05f35da9eea44b69" kindref="member">GG_CoapEndpoint</ref> **</type>
          <declname>endpoint</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Create a new CoAP endpoint object.</para>
<para>NOTE: the connection_sink and connection_source parameters may be NULL when calling this constructor. In that case, the connection source and sinks may be set later by using the endpoint&apos;s <ref refid="struct_g_g___data_source" kindref="compound">GG_DataSource</ref> and <ref refid="struct_g_g___data_sink" kindref="compound">GG_DataSink</ref> interfaces.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>timer_scheduler</parametername>
</parameternamelist>
<parameterdescription>
<para>Timer scheduler that will be used by the endpoint to create timers. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>connection_sink</parametername>
</parameternamelist>
<parameterdescription>
<para>Data sink to which datagrams will be sent (may be NULL). </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>connection_source</parametername>
</parameternamelist>
<parameterdescription>
<para>Data source from which datagrams will be received (may be NULL). NOTE: it is the responsibility of the caller to disconnect that source from the endpoint before destroying the endpoint. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>endpoint</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the variable where the object will be returned.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>GG_SUCCESS if the object could be created, or a negative error code. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="xp/coap/gg_coap.h" line="807" column="11" declfile="xp/coap/gg_coap.h" declline="807" declcolumn="11"/>
      </memberdef>
      <memberdef kind="function" id="group___co_a_p_1ga02d0eb73628d85d3fceec1def16fa02c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void GG_CoapEndpoint_Destroy</definition>
        <argsstring>(GG_CoapEndpoint *self)</argsstring>
        <name>GG_CoapEndpoint_Destroy</name>
        <param>
          <type><ref refid="group___co_a_p_1ga503e861afa7a81ea05f35da9eea44b69" kindref="member">GG_CoapEndpoint</ref> *</type>
          <declname>self</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Destroy a CoAP endpoint.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>self</parametername>
</parameternamelist>
<parameterdescription>
<para>The object on which this method is called. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="xp/coap/gg_coap.h" line="817" column="6" declfile="xp/coap/gg_coap.h" declline="817" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="group___co_a_p_1gaf9ca7a8ae21d716d1aaa6aa0f71b6715" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="struct_g_g___data_sink" kindref="compound">GG_DataSink</ref> *</type>
        <definition>GG_DataSink* GG_CoapEndpoint_AsDataSink</definition>
        <argsstring>(GG_CoapEndpoint *self)</argsstring>
        <name>GG_CoapEndpoint_AsDataSink</name>
        <param>
          <type><ref refid="group___co_a_p_1ga503e861afa7a81ea05f35da9eea44b69" kindref="member">GG_CoapEndpoint</ref> *</type>
          <declname>self</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Obtain the <ref refid="struct_g_g___data_sink" kindref="compound">GG_DataSink</ref> interface for an endpoint. This data sink may be used to send datagrams to the endpoint.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>self</parametername>
</parameternamelist>
<parameterdescription>
<para>The object on which this method is called. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The endpoint&apos;s <ref refid="struct_g_g___data_sink" kindref="compound">GG_DataSink</ref> interface. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="xp/coap/gg_coap.h" line="826" column="13" declfile="xp/coap/gg_coap.h" declline="826" declcolumn="13"/>
      </memberdef>
      <memberdef kind="function" id="group___co_a_p_1gaff86696ce9377811814b614c3757e567" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="struct_g_g___data_source" kindref="compound">GG_DataSource</ref> *</type>
        <definition>GG_DataSource* GG_CoapEndpoint_AsDataSource</definition>
        <argsstring>(GG_CoapEndpoint *self)</argsstring>
        <name>GG_CoapEndpoint_AsDataSource</name>
        <param>
          <type><ref refid="group___co_a_p_1ga503e861afa7a81ea05f35da9eea44b69" kindref="member">GG_CoapEndpoint</ref> *</type>
          <declname>self</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Obtain the <ref refid="struct_g_g___data_source" kindref="compound">GG_DataSource</ref> interface for an endpoint. This data sink may be used to receive datagrams from the endpoint.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>self</parametername>
</parameternamelist>
<parameterdescription>
<para>The object on which this method is called. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The endpoint&apos;s <ref refid="struct_g_g___data_source" kindref="compound">GG_DataSource</ref> interface. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="xp/coap/gg_coap.h" line="835" column="15" declfile="xp/coap/gg_coap.h" declline="835" declcolumn="15"/>
      </memberdef>
      <memberdef kind="function" id="group___co_a_p_1gabe7ef09d645ba3860b190d40e64d5d41" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="struct_g_g___inspectable" kindref="compound">GG_Inspectable</ref> *</type>
        <definition>GG_Inspectable* GG_CoapEndpoint_AsInspectable</definition>
        <argsstring>(GG_CoapEndpoint *self)</argsstring>
        <name>GG_CoapEndpoint_AsInspectable</name>
        <param>
          <type><ref refid="group___co_a_p_1ga503e861afa7a81ea05f35da9eea44b69" kindref="member">GG_CoapEndpoint</ref> *</type>
          <declname>self</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Obtain the <ref refid="struct_g_g___inspectable" kindref="compound">GG_Inspectable</ref> interface for an endpoint.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>self</parametername>
</parameternamelist>
<parameterdescription>
<para>The object on which this method is called. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The endpoint&apos;s <ref refid="struct_g_g___inspectable" kindref="compound">GG_Inspectable</ref> interface. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="xp/coap/gg_coap.h" line="843" column="16" declfile="xp/coap/gg_coap.h" declline="843" declcolumn="16"/>
      </memberdef>
      <memberdef kind="function" id="group___co_a_p_1ga37b2f47edb61cbfb2eef3f85d46cb2d7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group___errors_1gacf7401469f33ad0744f7f1f7006fd021" kindref="member">GG_Result</ref></type>
        <definition>GG_Result GG_CoapEndpoint_SendRequest</definition>
        <argsstring>(GG_CoapEndpoint *self, GG_CoapMethod method, GG_CoapMessageOptionParam *options, size_t options_count, const uint8_t *payload, size_t payload_size, const GG_CoapClientParameters *client_parameters, GG_CoapResponseListener *listener, GG_CoapRequestHandle *request_handle)</argsstring>
        <name>GG_CoapEndpoint_SendRequest</name>
        <param>
          <type><ref refid="group___co_a_p_1ga503e861afa7a81ea05f35da9eea44b69" kindref="member">GG_CoapEndpoint</ref> *</type>
          <declname>self</declname>
        </param>
        <param>
          <type><ref refid="group___co_a_p_1gab00f564a93ded3e1ee5dd1546ba2640c" kindref="member">GG_CoapMethod</ref></type>
          <declname>method</declname>
        </param>
        <param>
          <type><ref refid="struct_g_g___coap_message_option_param" kindref="compound">GG_CoapMessageOptionParam</ref> *</type>
          <declname>options</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>options_count</declname>
        </param>
        <param>
          <type>const uint8_t *</type>
          <declname>payload</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>payload_size</declname>
        </param>
        <param>
          <type>const <ref refid="struct_g_g___coap_client_parameters" kindref="compound">GG_CoapClientParameters</ref> *</type>
          <declname>client_parameters</declname>
        </param>
        <param>
          <type><ref refid="struct_g_g___coap_response_listener" kindref="compound">GG_CoapResponseListener</ref> *</type>
          <declname>listener</declname>
        </param>
        <param>
          <type><ref refid="group___co_a_p_1ga24904756d572f1366d2ed28f76718e7c" kindref="member">GG_CoapRequestHandle</ref> *</type>
          <declname>request_handle</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Send a CoAP request. (see the documentation for <ref refid="group___co_a_p_1gaf356cd5aeaf1551b5475316671f33f3e" kindref="member">GG_CoapMessage_Create()</ref> for details on how to pass options and payload.)</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>self</parametername>
</parameternamelist>
<parameterdescription>
<para>The object on which this method is called. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>method</parametername>
</parameternamelist>
<parameterdescription>
<para>Method for the request. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>options</parametername>
</parameternamelist>
<parameterdescription>
<para>Options for the request. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>options_count</parametername>
</parameternamelist>
<parameterdescription>
<para>Number of options for the request. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>payload</parametername>
</parameternamelist>
<parameterdescription>
<para>Payload for the request. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>payload_size</parametername>
</parameternamelist>
<parameterdescription>
<para>Size of the payload. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>client_parameters</parametername>
</parameternamelist>
<parameterdescription>
<para>Optional client parameters to customize the client behavior. Pass NULL for defaults. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>listener</parametername>
</parameternamelist>
<parameterdescription>
<para>Listener object that will receive callbacks regarding any response or error. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>request_handle</parametername>
</parameternamelist>
<parameterdescription>
<para>Handle to the request, that may be used subsequently to cancel the request. (the caller may pass NULL if it is not interested in the handle value)</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>GG_SUCCESS if the call succeeded, or a negative error code. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="xp/coap/gg_coap.h" line="863" column="11" declfile="xp/coap/gg_coap.h" declline="863" declcolumn="11"/>
      </memberdef>
      <memberdef kind="function" id="group___co_a_p_1ga2b1d91cf968235a613f44d93a68cd9a4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group___errors_1gacf7401469f33ad0744f7f1f7006fd021" kindref="member">GG_Result</ref></type>
        <definition>GG_Result GG_CoapEndpoint_SendRequestFromBufferSource</definition>
        <argsstring>(GG_CoapEndpoint *self, GG_CoapMethod method, GG_CoapMessageOptionParam *options, size_t options_count, GG_BufferSource *payload_source, const GG_CoapClientParameters *client_parameters, GG_CoapResponseListener *listener, GG_CoapRequestHandle *request_handle)</argsstring>
        <name>GG_CoapEndpoint_SendRequestFromBufferSource</name>
        <param>
          <type><ref refid="group___co_a_p_1ga503e861afa7a81ea05f35da9eea44b69" kindref="member">GG_CoapEndpoint</ref> *</type>
          <declname>self</declname>
        </param>
        <param>
          <type><ref refid="group___co_a_p_1gab00f564a93ded3e1ee5dd1546ba2640c" kindref="member">GG_CoapMethod</ref></type>
          <declname>method</declname>
        </param>
        <param>
          <type><ref refid="struct_g_g___coap_message_option_param" kindref="compound">GG_CoapMessageOptionParam</ref> *</type>
          <declname>options</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>options_count</declname>
        </param>
        <param>
          <type><ref refid="interface_g_g___buffer_source" kindref="compound">GG_BufferSource</ref> *</type>
          <declname>payload_source</declname>
        </param>
        <param>
          <type>const <ref refid="struct_g_g___coap_client_parameters" kindref="compound">GG_CoapClientParameters</ref> *</type>
          <declname>client_parameters</declname>
        </param>
        <param>
          <type><ref refid="struct_g_g___coap_response_listener" kindref="compound">GG_CoapResponseListener</ref> *</type>
          <declname>listener</declname>
        </param>
        <param>
          <type><ref refid="group___co_a_p_1ga24904756d572f1366d2ed28f76718e7c" kindref="member">GG_CoapRequestHandle</ref> *</type>
          <declname>request_handle</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Send a CoAP request with a buffer source. This method is similar to GG_CoapEndpoint_SendRequest, but with the payload passed as a <ref refid="interface_g_g___buffer_source" kindref="compound">GG_BufferSource</ref> rather than a fixed buffer.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>self</parametername>
</parameternamelist>
<parameterdescription>
<para>The object on which this method is called. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>method</parametername>
</parameternamelist>
<parameterdescription>
<para>Method for the request. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>options</parametername>
</parameternamelist>
<parameterdescription>
<para>Options for the request. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>options_count</parametername>
</parameternamelist>
<parameterdescription>
<para>Number of options for the request. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>payload_source</parametername>
</parameternamelist>
<parameterdescription>
<para>Payload source for the request. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>client_parameters</parametername>
</parameternamelist>
<parameterdescription>
<para>Optional client parameters to customize the client behavior. Pass NULL for defaults. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>listener</parametername>
</parameternamelist>
<parameterdescription>
<para>Listener object that will receive callbacks regarding any response or error. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>request_handle</parametername>
</parameternamelist>
<parameterdescription>
<para>Handle to the request, that may be used subsequently to cancel the request.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>GG_SUCCESS if the call succeeded, or a negative error code. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="xp/coap/gg_coap.h" line="889" column="11" declfile="xp/coap/gg_coap.h" declline="889" declcolumn="11"/>
      </memberdef>
      <memberdef kind="function" id="group___co_a_p_1gadc031ebad3d1d6b00e50d7831bb421df" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group___errors_1gacf7401469f33ad0744f7f1f7006fd021" kindref="member">GG_Result</ref></type>
        <definition>GG_Result GG_CoapEndpoint_CreateResponse</definition>
        <argsstring>(GG_CoapEndpoint *self, const GG_CoapMessage *request, uint8_t code, GG_CoapMessageOptionParam *options, size_t options_count, const uint8_t *payload, size_t payload_size, GG_CoapMessage **response)</argsstring>
        <name>GG_CoapEndpoint_CreateResponse</name>
        <param>
          <type><ref refid="group___co_a_p_1ga503e861afa7a81ea05f35da9eea44b69" kindref="member">GG_CoapEndpoint</ref> *</type>
          <declname>self</declname>
        </param>
        <param>
          <type>const <ref refid="group___co_a_p_1ga9157b9a869a3491836c914884c1e6c7d" kindref="member">GG_CoapMessage</ref> *</type>
          <declname>request</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>code</declname>
        </param>
        <param>
          <type><ref refid="struct_g_g___coap_message_option_param" kindref="compound">GG_CoapMessageOptionParam</ref> *</type>
          <declname>options</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>options_count</declname>
        </param>
        <param>
          <type>const uint8_t *</type>
          <declname>payload</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>payload_size</declname>
        </param>
        <param>
          <type><ref refid="group___co_a_p_1ga9157b9a869a3491836c914884c1e6c7d" kindref="member">GG_CoapMessage</ref> **</type>
          <declname>response</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Create a CoAP response. (see the documentation for <ref refid="group___co_a_p_1gaf356cd5aeaf1551b5475316671f33f3e" kindref="member">GG_CoapMessage_Create()</ref> for details on how to pass options and payload.)</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>self</parametername>
</parameternamelist>
<parameterdescription>
<para>The object on which this method is called. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>request</parametername>
</parameternamelist>
<parameterdescription>
<para>The request for which the response is created. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>code</parametername>
</parameternamelist>
<parameterdescription>
<para>The response code. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>options</parametername>
</parameternamelist>
<parameterdescription>
<para>Options for the response. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>options_count</parametername>
</parameternamelist>
<parameterdescription>
<para>Number of options for the response. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>payload</parametername>
</parameternamelist>
<parameterdescription>
<para>Payload for the response. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>payload_size</parametername>
</parameternamelist>
<parameterdescription>
<para>Size of the payload. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>response</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the variable in which the object will be returned.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>GG_SUCCESS if the object could be created, or a negative error code. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="xp/coap/gg_coap.h" line="914" column="11" declfile="xp/coap/gg_coap.h" declline="914" declcolumn="11"/>
      </memberdef>
      <memberdef kind="function" id="group___co_a_p_1ga887442caad86339e8a9f52f5447e6bef" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group___errors_1gacf7401469f33ad0744f7f1f7006fd021" kindref="member">GG_Result</ref></type>
        <definition>GG_Result GG_CoapEndpoint_CancelRequest</definition>
        <argsstring>(GG_CoapEndpoint *self, GG_CoapRequestHandle request)</argsstring>
        <name>GG_CoapEndpoint_CancelRequest</name>
        <param>
          <type><ref refid="group___co_a_p_1ga503e861afa7a81ea05f35da9eea44b69" kindref="member">GG_CoapEndpoint</ref> *</type>
          <declname>self</declname>
        </param>
        <param>
          <type><ref refid="group___co_a_p_1ga24904756d572f1366d2ed28f76718e7c" kindref="member">GG_CoapRequestHandle</ref></type>
          <declname>request</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Cancel a previously sent request. When a request is cancelled, its listener will not be called, even if a response datagram is received.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>self</parametername>
</parameternamelist>
<parameterdescription>
<para>The object on which this method is called. @parm request Handle of the request to cancel.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>GG_SUCCESS if the call succeeded, or a negative error code. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="xp/coap/gg_coap.h" line="933" column="11" declfile="xp/coap/gg_coap.h" declline="933" declcolumn="11"/>
      </memberdef>
      <memberdef kind="function" id="group___co_a_p_1ga4651aba4e26b1d91d2ac76a661dd3a02" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group___errors_1gacf7401469f33ad0744f7f1f7006fd021" kindref="member">GG_Result</ref></type>
        <definition>GG_Result GG_CoapEndpoint_RegisterRequestHandler</definition>
        <argsstring>(GG_CoapEndpoint *self, const char *path, uint32_t flags, GG_CoapRequestHandler *handler)</argsstring>
        <name>GG_CoapEndpoint_RegisterRequestHandler</name>
        <param>
          <type><ref refid="group___co_a_p_1ga503e861afa7a81ea05f35da9eea44b69" kindref="member">GG_CoapEndpoint</ref> *</type>
          <declname>self</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>path</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>flags</declname>
        </param>
        <param>
          <type><ref refid="struct_g_g___coap_request_handler" kindref="compound">GG_CoapRequestHandler</ref> *</type>
          <declname>handler</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Register a handler to be called when a request is received for a certain path. The path under which a handler is registered consists of one or more path components, separated by &apos;/&apos; characters. No leading or trailing &apos;/&apos; characters should appear in the path. Matching of incoming requests against registered handler paths is performed as follows: The handlers are checked one by one in the order in which they were registered. The first matching handler will be invoked to handle the request. To match, all the URI path components of the request must match the &apos;/&apos;-separated components of the handler&apos;s path. Partial matches are allowed. For example, a handler registered at path <computeroutput>foo/bar/baz</computeroutput> will match a request with the URI path components (<computeroutput>foo</computeroutput>, <computeroutput>bar</computeroutput>, <computeroutput>baz</computeroutput>) but also a request with just (<computeroutput>foo</computeroutput>, <computeroutput>bar</computeroutput>).</para>
<para>NOTE: this method makes an internal copy of the path parameter.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>self</parametername>
</parameternamelist>
<parameterdescription>
<para>The object on which this method is called. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>path</parametername>
</parameternamelist>
<parameterdescription>
<para>Path to register the handler under. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>flags</parametername>
</parameternamelist>
<parameterdescription>
<para>OR&apos;ed combination of zero or more flags. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>handler</parametername>
</parameternamelist>
<parameterdescription>
<para>The handler object to be registered. See GG_COAP_REQUEST_HANDLER_FLAG_XXX constants.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>GG_SUCCESS if the call succeeded, or a negative error code. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="xp/coap/gg_coap.h" line="957" column="11" declfile="xp/coap/gg_coap.h" declline="957" declcolumn="11"/>
      </memberdef>
      <memberdef kind="function" id="group___co_a_p_1gad15d2e487f72c852754da43626b2e8c5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group___errors_1gacf7401469f33ad0744f7f1f7006fd021" kindref="member">GG_Result</ref></type>
        <definition>GG_Result GG_CoapEndpoint_RegisterRequestHandlerNode</definition>
        <argsstring>(GG_CoapEndpoint *self, const char *path, uint32_t flags, GG_CoapRequestHandlerNode *handler_node)</argsstring>
        <name>GG_CoapEndpoint_RegisterRequestHandlerNode</name>
        <param>
          <type><ref refid="group___co_a_p_1ga503e861afa7a81ea05f35da9eea44b69" kindref="member">GG_CoapEndpoint</ref> *</type>
          <declname>self</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>path</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>flags</declname>
        </param>
        <param>
          <type><ref refid="struct_g_g___coap_request_handler_node" kindref="compound">GG_CoapRequestHandlerNode</ref> *</type>
          <declname>handler_node</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Register a handler stored in a handler node to be called when a request is received for a certain path.</para>
<para>This method is a variant of GG_CoapEndpoint_RegisterRequestHandler which doesn&apos;t do any dynamic memory allocation.</para>
<para>NOTE: this method doesn&apos;t make an internal copy of the path parameter, so it must remain unchanged for as long as the handler is registered. NOTE: only handler_node-&gt;handler should be filled in, as the other fields will be overwritten by this method.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>self</parametername>
</parameternamelist>
<parameterdescription>
<para>The object on which this method is called. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>path</parametername>
</parameternamelist>
<parameterdescription>
<para>Path to register the handler under. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>flags</parametername>
</parameternamelist>
<parameterdescription>
<para>OR&apos;ed combination of zero or more flags. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>handler_node</parametername>
</parameternamelist>
<parameterdescription>
<para>The handler node object which contains handler to be registered. See GG_COAP_REQUEST_HANDLER_FLAG_XXX constants.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>GG_SUCCESS if the call succeeded, or a negative error code. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="xp/coap/gg_coap.h" line="981" column="11" declfile="xp/coap/gg_coap.h" declline="981" declcolumn="11"/>
      </memberdef>
      <memberdef kind="function" id="group___co_a_p_1gad81c4e92c9ff117ffb153eaf47f5b172" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group___errors_1gacf7401469f33ad0744f7f1f7006fd021" kindref="member">GG_Result</ref></type>
        <definition>GG_Result GG_CoapEndpoint_UnregisterRequestHandler</definition>
        <argsstring>(GG_CoapEndpoint *self, const char *path, GG_CoapRequestHandler *handler)</argsstring>
        <name>GG_CoapEndpoint_UnregisterRequestHandler</name>
        <param>
          <type><ref refid="group___co_a_p_1ga503e861afa7a81ea05f35da9eea44b69" kindref="member">GG_CoapEndpoint</ref> *</type>
          <declname>self</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>path</declname>
        </param>
        <param>
          <type><ref refid="struct_g_g___coap_request_handler" kindref="compound">GG_CoapRequestHandler</ref> *</type>
          <declname>handler</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Unregister a previously registered handler. Only the first matching combination of path and/or handler will be unregistered, if found.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>self</parametername>
</parameternamelist>
<parameterdescription>
<para>The object on which this method is called. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>path</parametername>
</parameternamelist>
<parameterdescription>
<para>The path at which the handler was registered, or NULL to unregister the first matching handler regardless of the path. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>handler</parametername>
</parameternamelist>
<parameterdescription>
<para>The handler to unregister, or NULL to unregister any handler at the specified path.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>GG_SUCCESS if the call succeeded, or a negative error code. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="xp/coap/gg_coap.h" line="997" column="11" declfile="xp/coap/gg_coap.h" declline="997" declcolumn="11"/>
      </memberdef>
      <memberdef kind="function" id="group___co_a_p_1ga2d0813472b7761da33f24b2c60bed5aa" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group___errors_1gacf7401469f33ad0744f7f1f7006fd021" kindref="member">GG_Result</ref></type>
        <definition>GG_Result GG_CoapEndpoint_SetDefaultRequestHandler</definition>
        <argsstring>(GG_CoapEndpoint *self, GG_CoapRequestHandler *handler)</argsstring>
        <name>GG_CoapEndpoint_SetDefaultRequestHandler</name>
        <param>
          <type><ref refid="group___co_a_p_1ga503e861afa7a81ea05f35da9eea44b69" kindref="member">GG_CoapEndpoint</ref> *</type>
          <declname>self</declname>
        </param>
        <param>
          <type><ref refid="struct_g_g___coap_request_handler" kindref="compound">GG_CoapRequestHandler</ref> *</type>
          <declname>handler</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Set the default handler. The default handler, if set, is invoked when a request is received and no registered handler matches.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>self</parametername>
</parameternamelist>
<parameterdescription>
<para>The object on which this method is called. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>handler</parametername>
</parameternamelist>
<parameterdescription>
<para>The handler that should be used as the default handler.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>GG_SUCCESS if the call succeeded, or a negative error code. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="xp/coap/gg_coap.h" line="1011" column="11" declfile="xp/coap/gg_coap.h" declline="1011" declcolumn="11"/>
      </memberdef>
      <memberdef kind="function" id="group___co_a_p_1ga0f06244ac9eb54c100f7af9585eab871" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group___errors_1gacf7401469f33ad0744f7f1f7006fd021" kindref="member">GG_Result</ref></type>
        <definition>GG_Result GG_CoapEndpoint_RegisterRequestFilter</definition>
        <argsstring>(GG_CoapEndpoint *self, GG_CoapRequestFilter *filter)</argsstring>
        <name>GG_CoapEndpoint_RegisterRequestFilter</name>
        <param>
          <type><ref refid="group___co_a_p_1ga503e861afa7a81ea05f35da9eea44b69" kindref="member">GG_CoapEndpoint</ref> *</type>
          <declname>self</declname>
        </param>
        <param>
          <type><ref refid="struct_g_g___coap_request_filter" kindref="compound">GG_CoapRequestFilter</ref> *</type>
          <declname>filter</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Register a request filter. Request filters are invoked sequentially, in the order they were registered, until they have all been invoked or one of them has responded in a way that terminates the filter chain iteration. (See GG_CoapRequestFilter::FilterRequest for details).</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>self</parametername>
</parameternamelist>
<parameterdescription>
<para>The object on which this method is called. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>filter</parametername>
</parameternamelist>
<parameterdescription>
<para>The filter to register.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>GG_SUCCESS if the call succeeded, or a negative error code. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="xp/coap/gg_coap.h" line="1024" column="11" declfile="xp/coap/gg_coap.h" declline="1024" declcolumn="11"/>
      </memberdef>
      <memberdef kind="function" id="group___co_a_p_1ga524018008a287d1431b6b302fb633928" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group___errors_1gacf7401469f33ad0744f7f1f7006fd021" kindref="member">GG_Result</ref></type>
        <definition>GG_Result GG_CoapEndpoint_RegisterRequestFilterNode</definition>
        <argsstring>(GG_CoapEndpoint *self, GG_CoapRequestFilterNode *filter_node)</argsstring>
        <name>GG_CoapEndpoint_RegisterRequestFilterNode</name>
        <param>
          <type><ref refid="group___co_a_p_1ga503e861afa7a81ea05f35da9eea44b69" kindref="member">GG_CoapEndpoint</ref> *</type>
          <declname>self</declname>
        </param>
        <param>
          <type><ref refid="struct_g_g___coap_request_filter_node" kindref="compound">GG_CoapRequestFilterNode</ref> *</type>
          <declname>filter_node</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Register a request filter stored in a filter node.</para>
<para>This method is a variant of GG_CoapEndpoint_RegisterRequestFilter that doesn do any dynamic memory allocation.</para>
<para>NOTE: Only filter_node-&gt;filter should be filled in, as the other fields will be overwritten by this method.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>self</parametername>
</parameternamelist>
<parameterdescription>
<para>The object on which this method is called. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>filter_node</parametername>
</parameternamelist>
<parameterdescription>
<para>The filter node containing the filter to register.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>GG_SUCCESS if the call succeeded, or a negative error code. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="xp/coap/gg_coap.h" line="1040" column="11" declfile="xp/coap/gg_coap.h" declline="1040" declcolumn="11"/>
      </memberdef>
      <memberdef kind="function" id="group___co_a_p_1ga7175508c71a6d79c163261fe83f26866" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group___errors_1gacf7401469f33ad0744f7f1f7006fd021" kindref="member">GG_Result</ref></type>
        <definition>GG_Result GG_CoapEndpoint_UnregisterRequestFilter</definition>
        <argsstring>(GG_CoapEndpoint *self, GG_CoapRequestFilter *filter)</argsstring>
        <name>GG_CoapEndpoint_UnregisterRequestFilter</name>
        <param>
          <type><ref refid="group___co_a_p_1ga503e861afa7a81ea05f35da9eea44b69" kindref="member">GG_CoapEndpoint</ref> *</type>
          <declname>self</declname>
        </param>
        <param>
          <type><ref refid="struct_g_g___coap_request_filter" kindref="compound">GG_CoapRequestFilter</ref> *</type>
          <declname>filter</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Unregister a request filter.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>self</parametername>
</parameternamelist>
<parameterdescription>
<para>The object on which this method is called. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>filter</parametername>
</parameternamelist>
<parameterdescription>
<para>The filter to unregister.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>GG_SUCCESS if the call succeeded, or a negative error code. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="xp/coap/gg_coap.h" line="1051" column="11" declfile="xp/coap/gg_coap.h" declline="1051" declcolumn="11"/>
      </memberdef>
      <memberdef kind="function" id="group___co_a_p_1ga824d9e484837d65e1e5268e75c699add" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group___errors_1gacf7401469f33ad0744f7f1f7006fd021" kindref="member">GG_Result</ref></type>
        <definition>GG_Result GG_CoapEndpoint_SetTokenPrefix</definition>
        <argsstring>(GG_CoapEndpoint *self, const uint8_t *prefix, size_t prefix_size)</argsstring>
        <name>GG_CoapEndpoint_SetTokenPrefix</name>
        <param>
          <type><ref refid="group___co_a_p_1ga503e861afa7a81ea05f35da9eea44b69" kindref="member">GG_CoapEndpoint</ref> *</type>
          <declname>self</declname>
        </param>
        <param>
          <type>const uint8_t *</type>
          <declname>prefix</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>prefix_size</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Set the token prefix. Up to 4 bytes of prefix can be added to each message token. This is an advanced feature that may be useful for very specific conditions where tokens need to be differentiated between different endpoints, in a coordinated fashion.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>self</parametername>
</parameternamelist>
<parameterdescription>
<para>The object on which this method is called. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>prefix</parametername>
</parameternamelist>
<parameterdescription>
<para>Prefix bytes. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>prefix_size</parametername>
</parameternamelist>
<parameterdescription>
<para>Size of the prefix (1 to 4, or 0 to disable).</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>GG_SUCCESS if the call succeeded, or a negative error code. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="xp/coap/gg_coap.h" line="1065" column="11" declfile="xp/coap/gg_coap.h" declline="1065" declcolumn="11"/>
      </memberdef>
      <memberdef kind="function" id="group___co_a_p_1ga32fad85095d110909bf6a5d01a07c48b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>const uint8_t *</type>
        <definition>const uint8_t* GG_CoapEndpoint_GetTokenPrefix</definition>
        <argsstring>(GG_CoapEndpoint *self, size_t *prefix_size)</argsstring>
        <name>GG_CoapEndpoint_GetTokenPrefix</name>
        <param>
          <type><ref refid="group___co_a_p_1ga503e861afa7a81ea05f35da9eea44b69" kindref="member">GG_CoapEndpoint</ref> *</type>
          <declname>self</declname>
        </param>
        <param>
          <type>size_t *</type>
          <declname>prefix_size</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Get the token prefix.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>self</parametername>
</parameternamelist>
<parameterdescription>
<para>The object on which this method is called. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>prefix_size</parametername>
</parameternamelist>
<parameterdescription>
<para>Address of the variable where the prefix size will be returned.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Pointer to the prefix bytes. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="xp/coap/gg_coap.h" line="1075" column="15" declfile="xp/coap/gg_coap.h" declline="1075" declcolumn="15"/>
      </memberdef>
      <memberdef kind="function" id="group___co_a_p_1gaf7a39d9dbe033a5650ff2a4cb1a4d74d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group___errors_1gacf7401469f33ad0744f7f1f7006fd021" kindref="member">GG_Result</ref></type>
        <definition>GG_Result GG_CoapResponder_CreateResponse</definition>
        <argsstring>(GG_CoapResponder *self, uint8_t code, GG_CoapMessageOptionParam *options, size_t options_count, const uint8_t *payload, size_t payload_size, GG_CoapMessage **response)</argsstring>
        <name>GG_CoapResponder_CreateResponse</name>
        <param>
          <type><ref refid="group___co_a_p_1ga1ab8c7d03b4e867ce05c9ace23e7a3df" kindref="member">GG_CoapResponder</ref> *</type>
          <declname>self</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>code</declname>
        </param>
        <param>
          <type><ref refid="struct_g_g___coap_message_option_param" kindref="compound">GG_CoapMessageOptionParam</ref> *</type>
          <declname>options</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>options_count</declname>
        </param>
        <param>
          <type>const uint8_t *</type>
          <declname>payload</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>payload_size</declname>
        </param>
        <param>
          <type><ref refid="group___co_a_p_1ga9157b9a869a3491836c914884c1e6c7d" kindref="member">GG_CoapMessage</ref> **</type>
          <declname>response</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Create a CoAP response. This is essentially the same as <computeroutput>GG_CoapEndpoint_CreateResponse</computeroutput> but using the endpoint and request references held by the responder. This method would be typically used instead of the simpler GG_CoapResponder_Respond in cases where the payload of the response needs to be updated after the response is created, prior to sending it (for example when the payload is dynamically generated and the caller wishes to avoid allocating storage for it other than the final response itself.)</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>self</parametername>
</parameternamelist>
<parameterdescription>
<para>The object on which this method is called. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>code</parametername>
</parameternamelist>
<parameterdescription>
<para>The response code. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>options</parametername>
</parameternamelist>
<parameterdescription>
<para>Options for the response. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>options_count</parametername>
</parameternamelist>
<parameterdescription>
<para>Number of options for the response. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>payload</parametername>
</parameternamelist>
<parameterdescription>
<para>Payload for the response. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>payload_size</parametername>
</parameternamelist>
<parameterdescription>
<para>Size of the payload. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>response</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the variable in which the object will be returned.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>GG_SUCCESS if the object could be created, or a negative error code. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="xp/coap/gg_coap.h" line="1096" column="11" declfile="xp/coap/gg_coap.h" declline="1096" declcolumn="11"/>
      </memberdef>
      <memberdef kind="function" id="group___co_a_p_1ga59c44945da160b8fc11b9141bb8d3980" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group___errors_1gacf7401469f33ad0744f7f1f7006fd021" kindref="member">GG_Result</ref></type>
        <definition>GG_Result GG_CoapResponder_SendResponse</definition>
        <argsstring>(GG_CoapResponder *self, GG_CoapMessage *response)</argsstring>
        <name>GG_CoapResponder_SendResponse</name>
        <param>
          <type><ref refid="group___co_a_p_1ga1ab8c7d03b4e867ce05c9ace23e7a3df" kindref="member">GG_CoapResponder</ref> *</type>
          <declname>self</declname>
        </param>
        <param>
          <type><ref refid="group___co_a_p_1ga9157b9a869a3491836c914884c1e6c7d" kindref="member">GG_CoapMessage</ref> *</type>
          <declname>response</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Send a response using a responder</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>self</parametername>
</parameternamelist>
<parameterdescription>
<para>The object on which this method is called. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>response</parametername>
</parameternamelist>
<parameterdescription>
<para>The response to send.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>GG_SUCCESS if the method succeeds, or a negative error code. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="xp/coap/gg_coap.h" line="1112" column="11" declfile="xp/coap/gg_coap.h" declline="1112" declcolumn="11"/>
      </memberdef>
      <memberdef kind="function" id="group___co_a_p_1gad06b247bcac368b0be0a5b1fe8e6d5ae" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group___errors_1gacf7401469f33ad0744f7f1f7006fd021" kindref="member">GG_Result</ref></type>
        <definition>GG_Result GG_CoapResponder_Respond</definition>
        <argsstring>(GG_CoapResponder *self, uint8_t code, GG_CoapMessageOptionParam *options, size_t options_count, const uint8_t *payload, size_t payload_size)</argsstring>
        <name>GG_CoapResponder_Respond</name>
        <param>
          <type><ref refid="group___co_a_p_1ga1ab8c7d03b4e867ce05c9ace23e7a3df" kindref="member">GG_CoapResponder</ref> *</type>
          <declname>self</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>code</declname>
        </param>
        <param>
          <type><ref refid="struct_g_g___coap_message_option_param" kindref="compound">GG_CoapMessageOptionParam</ref> *</type>
          <declname>options</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>options_count</declname>
        </param>
        <param>
          <type>const uint8_t *</type>
          <declname>payload</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>payload_size</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Create and send a response. This is a convenience method that is equivalent to calling GG_CoapResponder_CreateResponse to create a response, followed by GG_CoapResponder_SendResponse to send that response.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>self</parametername>
</parameternamelist>
<parameterdescription>
<para>The object on which this method is called. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>options</parametername>
</parameternamelist>
<parameterdescription>
<para>Options for the response. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>options_count</parametername>
</parameternamelist>
<parameterdescription>
<para>Number of options for the response. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>payload</parametername>
</parameternamelist>
<parameterdescription>
<para>Payload for the response. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>payload_size</parametername>
</parameternamelist>
<parameterdescription>
<para>Size of the payload.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>GG_SUCCESS if the object could be created, or a negative error code. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="xp/coap/gg_coap.h" line="1127" column="11" declfile="xp/coap/gg_coap.h" declline="1127" declcolumn="11"/>
      </memberdef>
      <memberdef kind="function" id="group___co_a_p_1gaa4e53d3971089e2b8e2e87519b667981" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void GG_CoapResponder_Release</definition>
        <argsstring>(GG_CoapResponder *self)</argsstring>
        <name>GG_CoapResponder_Release</name>
        <param>
          <type><ref refid="group___co_a_p_1ga1ab8c7d03b4e867ce05c9ace23e7a3df" kindref="member">GG_CoapResponder</ref> *</type>
          <declname>self</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Release a responder. This method must be called by asynchronous handlers that receive a responder object through their OnRequest method when they no longer need to send a response (either because they have already responded, or because they cannot respond).</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>self</parametername>
</parameternamelist>
<parameterdescription>
<para>The object on which this method is called. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="xp/coap/gg_coap.h" line="1142" column="6" declfile="xp/coap/gg_coap.h" declline="1142" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="group___co_a_p_1ga68b86532b373893763f1de5829f1b220" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group___errors_1gacf7401469f33ad0744f7f1f7006fd021" kindref="member">GG_Result</ref></type>
        <definition>GG_Result GG_Coap_SplitPathOrQuery</definition>
        <argsstring>(const char *path_or_query, char delimiter, GG_CoapMessageOptionParam *option_params, size_t *option_params_count, uint32_t option_number)</argsstring>
        <name>GG_Coap_SplitPathOrQuery</name>
        <param>
          <type>const char *</type>
          <declname>path_or_query</declname>
        </param>
        <param>
          <type>char</type>
          <declname>delimiter</declname>
        </param>
        <param>
          <type><ref refid="struct_g_g___coap_message_option_param" kindref="compound">GG_CoapMessageOptionParam</ref> *</type>
          <declname>option_params</declname>
        </param>
        <param>
          <type>size_t *</type>
          <declname>option_params_count</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>option_number</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Split a URI path or query string into components. The component delimiter is &apos;/&apos; for paths, and &apos;&amp;&apos; for queries, but the function could be used with other delimiters. This function only performs basic splitting based on the delimiter (no percent-decoding or other string processing). It isn&apos;t a general purpose URI parser, so it comes with limitations, including for instance that it does not support having components that contain delimiters. The components are populated as entries in an array of <ref refid="struct_g_g___coap_message_option_param" kindref="compound">GG_CoapMessageOptionParam</ref> structs supplied by the caller, with an option type set to GG_COAP_MESSAGE_OPTION_TYPE_UINT and a string value. The string values point directly to the string supplied by the caller, so the options returned by this function are only valid as long as the string that they point to remains valid. Leading delimiter characters will be ignored. A single trailing delimiter may be present and will be ignored.</para>
<para>Ex: splitting &apos;/foo/bar&apos; would result in a &apos;foo&apos; and a &apos;bar&apos; component option. splitting &apos;foo=1&amp;bar=2&apos; would result in a &apos;foo=1&apos; and a &apos;bar=2&apos; component option.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>path_or_query</parametername>
</parameternamelist>
<parameterdescription>
<para>The string to split into components. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>delimiter</parametername>
</parameternamelist>
<parameterdescription>
<para>The delimiter for the components. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>option_params</parametername>
</parameternamelist>
<parameterdescription>
<para>The array in which components options will be returned, or NULL to just query how many components are in the path. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>option_params_count</parametername>
</parameternamelist>
<parameterdescription>
<para>[in,out] On input, the size of the array that can receive the returned options. On output, the number of components that were found. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>option_number</parametername>
</parameternamelist>
<parameterdescription>
<para>The CoAP option number to use for the options. (ex: GG_COAP_MESSAGE_OPTION_URI_PATH or GG_COAP_MESSAGE_OPTION_URI_QUERY)</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>GG_SUCCESS if the string was syntactically correct and there was enough space to return all the components, GG_ERROR_INVALID_SYNTAX if the syntax was incorrect, GG_ERROR_NOT_ENOUGH_SPACE if there were more components than entries in the receiving array, or another error code. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="xp/coap/gg_coap.h" line="1175" column="11" declfile="xp/coap/gg_coap.h" declline="1175" declcolumn="11"/>
      </memberdef>
      <memberdef kind="function" id="group___co_a_p_1gaf82ee47e35f1202d04ba8db083fd5276" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="struct_g_g___coap_message_option_param" kindref="compound">GG_CoapMessageOptionParam</ref> *</type>
        <definition>GG_CoapMessageOptionParam* GG_Coap_CloneOptions</definition>
        <argsstring>(const GG_CoapMessageOptionParam *options, size_t option_count)</argsstring>
        <name>GG_Coap_CloneOptions</name>
        <param>
          <type>const <ref refid="struct_g_g___coap_message_option_param" kindref="compound">GG_CoapMessageOptionParam</ref> *</type>
          <declname>options</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>option_count</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Helper function to clone an array of <ref refid="struct_g_g___coap_message_option_param" kindref="compound">GG_CoapMessageOptionParam</ref>, making copies of any data it points to. The copy is made in a single block of memory that can be freed when no longer needed, by calling GG_FreeMemory</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>options</parametername>
</parameternamelist>
<parameterdescription>
<para>Array of options to clone. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>option_count</parametername>
</parameternamelist>
<parameterdescription>
<para>Number of options in the options array.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Array of options, or NULL if there isn&apos;t enough memory. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="xp/coap/gg_coap.h" line="1192" column="1" declfile="xp/coap/gg_coap.h" declline="1192" declcolumn="1"/>
      </memberdef>
      <memberdef kind="function" id="group___co_a_p_1gaead11cc8c32d7908538b674542b23a44" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>size_t</type>
        <definition>size_t GG_CoapExtendedError_GetEncodedSize</definition>
        <argsstring>(const GG_CoapExtendedError *self)</argsstring>
        <name>GG_CoapExtendedError_GetEncodedSize</name>
        <param>
          <type>const <ref refid="struct_g_g___coap_extended_error" kindref="compound">GG_CoapExtendedError</ref> *</type>
          <declname>self</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Get the size of the protobuf-encoded representation of an extended error.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>self</parametername>
</parameternamelist>
<parameterdescription>
<para>The object on which the method is invoked. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="xp/coap/gg_coap.h" line="1227" column="8" declfile="xp/coap/gg_coap.h" declline="1227" declcolumn="8"/>
      </memberdef>
      <memberdef kind="function" id="group___co_a_p_1ga92cfd047cb4d1f01c0775a8e274aa4db" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group___errors_1gacf7401469f33ad0744f7f1f7006fd021" kindref="member">GG_Result</ref></type>
        <definition>GG_Result GG_CoapExtendedError_Encode</definition>
        <argsstring>(const GG_CoapExtendedError *self, uint8_t *buffer)</argsstring>
        <name>GG_CoapExtendedError_Encode</name>
        <param>
          <type>const <ref refid="struct_g_g___coap_extended_error" kindref="compound">GG_CoapExtendedError</ref> *</type>
          <declname>self</declname>
        </param>
        <param>
          <type>uint8_t *</type>
          <declname>buffer</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Encode an extended error as a protobuf message. NOTE: the buffer passed to this method must be large enough to receive all the encoded bytes. The number of bytes needed may be obtained by calling <ref refid="group___co_a_p_1gaead11cc8c32d7908538b674542b23a44" kindref="member">GG_CoapExtendedError_GetEncodedSize</ref>.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>self</parametername>
</parameternamelist>
<parameterdescription>
<para>The object on which the method is invoked. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>buffer</parametername>
</parameternamelist>
<parameterdescription>
<para>The buffer in which to write the encoded bytes.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>GG_SUCCESS if the call succeeded, or a negative error code. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="xp/coap/gg_coap.h" line="1239" column="11" declfile="xp/coap/gg_coap.h" declline="1239" declcolumn="11"/>
      </memberdef>
      <memberdef kind="function" id="group___co_a_p_1gaa59c6e2177a44db2b2559a53ad04d519" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group___errors_1gacf7401469f33ad0744f7f1f7006fd021" kindref="member">GG_Result</ref></type>
        <definition>GG_Result GG_CoapExtendedError_Decode</definition>
        <argsstring>(GG_CoapExtendedError *self, const uint8_t *payload, size_t payload_size)</argsstring>
        <name>GG_CoapExtendedError_Decode</name>
        <param>
          <type><ref refid="struct_g_g___coap_extended_error" kindref="compound">GG_CoapExtendedError</ref> *</type>
          <declname>self</declname>
        </param>
        <param>
          <type>const uint8_t *</type>
          <declname>payload</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>payload_size</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Decode an extended error from a protobuf message.</para>
<para>NOTE: the strings pointed to by fields in the <ref refid="struct_g_g___coap_extended_error" kindref="compound">GG_CoapExtendedError</ref> point to the buffer that is passed to this function, so the caller must not derefence them after the payload buffer is no longer valid. If those strings are needed past the lifetime of the payload buffer, the caller must make a copy before freeing or otherwise invalidating the payload buffer.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>self</parametername>
</parameternamelist>
<parameterdescription>
<para>The object on which the method is invoked. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>payload</parametername>
</parameternamelist>
<parameterdescription>
<para>The payload of the encoded protobuf message. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>payload_size</parametername>
</parameternamelist>
<parameterdescription>
<para>Size of the payload.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>GG_SUCCESS if the call succeeded, or a negative error code. GG_ERROR_INVALID_FORMAT indicates that the payload isn&apos;t a decodable protbuf message. GG_ERROR_INVALID_SYNTAX indicates that the payload is a valid protobuf message, but doesn&apos;t comply with the expected schema. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="xp/coap/gg_coap.h" line="1259" column="11" declfile="xp/coap/gg_coap.h" declline="1259" declcolumn="11"/>
      </memberdef>
      <memberdef kind="function" id="group___co_a_p_1ga521a012d2a7454af9e2d69f003c472ed" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group___errors_1gacf7401469f33ad0744f7f1f7006fd021" kindref="member">GG_Result</ref></type>
        <definition>GG_Result GG_CoapMessage_GetBlockInfo</definition>
        <argsstring>(const GG_CoapMessage *self, uint32_t block_option_number, GG_CoapMessageBlockInfo *block_info, size_t default_block_size)</argsstring>
        <name>GG_CoapMessage_GetBlockInfo</name>
        <param>
          <type>const <ref refid="group___co_a_p_1ga9157b9a869a3491836c914884c1e6c7d" kindref="member">GG_CoapMessage</ref> *</type>
          <declname>self</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>block_option_number</declname>
        </param>
        <param>
          <type><ref refid="struct_g_g___coap_message_block_info" kindref="compound">GG_CoapMessageBlockInfo</ref> *</type>
          <declname>block_info</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>default_block_size</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Get block info from a message&apos;s options.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>self</parametername>
</parameternamelist>
<parameterdescription>
<para>The object on which this method is invoked. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>block_option_number</parametername>
</parameternamelist>
<parameterdescription>
<para>The block option to look for (GG_COAP_MESSAGE_OPTION_BLOCK1 or GG_COAP_MESSAGE_OPTION_BLOCK2) </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>block_info</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the structure in which the block info will be returned. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>default_block_size</parametername>
</parameternamelist>
<parameterdescription>
<para>Default block size to use if the requested block option isn&apos;t found (pass 0 for no default, in which case GG_ERROR_NO_SUCH_ITEM is returned if the option isn&apos;t found). The value must be 0, 16, 32, 64, 128, 256, 512, or 1024.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>GG_SUCCESS if the requested block option was found and could be parsed, or a negative error code. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="xp/coap/gg_coap_blockwise.h" line="120" column="11" declfile="xp/coap/gg_coap_blockwise.h" declline="120" declcolumn="11"/>
      </memberdef>
      <memberdef kind="function" id="group___co_a_p_1ga96355a77932c6d92b25fb2a8c9a139e5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group___errors_1gacf7401469f33ad0744f7f1f7006fd021" kindref="member">GG_Result</ref></type>
        <definition>GG_Result GG_CoapMessageBlockInfo_AdjustAndGetChunkSize</definition>
        <argsstring>(size_t offset, size_t *size, bool *more, size_t payload_size)</argsstring>
        <name>GG_CoapMessageBlockInfo_AdjustAndGetChunkSize</name>
        <param>
          <type>size_t</type>
          <declname>offset</declname>
        </param>
        <param>
          <type>size_t *</type>
          <declname>size</declname>
        </param>
        <param>
          <type>bool *</type>
          <declname>more</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>payload_size</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Given a block info and a total payload size, adjust the block info&apos;s <computeroutput>more</computeroutput> field, and return the size of the payload chunk that corresponds to that block of the payload. For all blocks until the last one, this function sets the block&apos;s <computeroutput>more</computeroutput> field to <computeroutput>true</computeroutput> and returns the block size. For the last block, this function sets the block&apos;s <computeroutput>more</computeroutput> field to <computeroutput>false</computeroutput> and returns a size between 1 and the block size. For blocks that would be outside of the payload, this method just returns 0.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>offset</parametername>
</parameternamelist>
<parameterdescription>
<para>The offset of the block. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="inout">size</parametername>
</parameternamelist>
<parameterdescription>
<para>The desired size of the block. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">more</parametername>
</parameternamelist>
<parameterdescription>
<para>Whether there&apos;s more data to read. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>payload_size</parametername>
</parameternamelist>
<parameterdescription>
<para>Size of the payload</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>GG_SUCCESS if the requested block was not outside of the range. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="xp/coap/gg_coap_blockwise.h" line="140" column="11" declfile="xp/coap/gg_coap_blockwise.h" declline="140" declcolumn="11"/>
      </memberdef>
      <memberdef kind="function" id="group___co_a_p_1gaa640f1ab00b9d1d4e1b5e23ab6e49630" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group___errors_1gacf7401469f33ad0744f7f1f7006fd021" kindref="member">GG_Result</ref></type>
        <definition>GG_Result GG_CoapEndpoint_SendBlockwiseRequest</definition>
        <argsstring>(GG_CoapEndpoint *self, GG_CoapMethod method, GG_CoapMessageOptionParam *options, size_t options_count, GG_CoapBlockSource *payload_source, size_t preferred_block_size, const GG_CoapClientParameters *client_parameters, GG_CoapBlockwiseResponseListener *listener, GG_CoapRequestHandle *request_handle)</argsstring>
        <name>GG_CoapEndpoint_SendBlockwiseRequest</name>
        <param>
          <type><ref refid="group___co_a_p_1ga503e861afa7a81ea05f35da9eea44b69" kindref="member">GG_CoapEndpoint</ref> *</type>
          <declname>self</declname>
        </param>
        <param>
          <type><ref refid="group___co_a_p_1gab00f564a93ded3e1ee5dd1546ba2640c" kindref="member">GG_CoapMethod</ref></type>
          <declname>method</declname>
        </param>
        <param>
          <type><ref refid="struct_g_g___coap_message_option_param" kindref="compound">GG_CoapMessageOptionParam</ref> *</type>
          <declname>options</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>options_count</declname>
        </param>
        <param>
          <type><ref refid="struct_g_g___coap_block_source" kindref="compound">GG_CoapBlockSource</ref> *</type>
          <declname>payload_source</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>preferred_block_size</declname>
        </param>
        <param>
          <type>const <ref refid="struct_g_g___coap_client_parameters" kindref="compound">GG_CoapClientParameters</ref> *</type>
          <declname>client_parameters</declname>
        </param>
        <param>
          <type><ref refid="struct_g_g___coap_blockwise_response_listener" kindref="compound">GG_CoapBlockwiseResponseListener</ref> *</type>
          <declname>listener</declname>
        </param>
        <param>
          <type><ref refid="group___co_a_p_1ga24904756d572f1366d2ed28f76718e7c" kindref="member">GG_CoapRequestHandle</ref> *</type>
          <declname>request_handle</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Send a CoAP blockwise request. This method is similar to GG_CoapEndpoint_SendRequest, but with the payload passed as a <ref refid="struct_g_g___coap_block_source" kindref="compound">GG_CoapBlockSource</ref> rather than a fixed buffer.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>self</parametername>
</parameternamelist>
<parameterdescription>
<para>The object on which this method is called. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>method</parametername>
</parameternamelist>
<parameterdescription>
<para>Method for the request. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>options</parametername>
</parameternamelist>
<parameterdescription>
<para>Options for the request. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>options_count</parametername>
</parameternamelist>
<parameterdescription>
<para>Number of options for the request. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>payload_source</parametername>
</parameternamelist>
<parameterdescription>
<para>Payload source for the request. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>preferred_block_size</parametername>
</parameternamelist>
<parameterdescription>
<para>Preferred block size. If set to 0, the server&apos;s preferred block size will be used. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>client_parameters</parametername>
</parameternamelist>
<parameterdescription>
<para>Optional client parameters to customize the client behavior. Pass NULL for defaults. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>listener</parametername>
</parameternamelist>
<parameterdescription>
<para>Listener object that will receive callbacks regarding any response or error. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>request_handle</parametername>
</parameternamelist>
<parameterdescription>
<para>Handle to the request, that may be used subsequently to cancel the request. (the caller may pass NULL if it isn&apos;t interested in the handle value).</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>GG_SUCCESS if the request could be sent, or a negative error code. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="xp/coap/gg_coap_blockwise.h" line="245" column="11" declfile="xp/coap/gg_coap_blockwise.h" declline="245" declcolumn="11"/>
      </memberdef>
      <memberdef kind="function" id="group___co_a_p_1ga74003958a62feb4e2f16f1862f5f7665" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group___errors_1gacf7401469f33ad0744f7f1f7006fd021" kindref="member">GG_Result</ref></type>
        <definition>GG_Result GG_CoapEndpoint_CancelBlockwiseRequest</definition>
        <argsstring>(GG_CoapEndpoint *self, GG_CoapRequestHandle request_handle)</argsstring>
        <name>GG_CoapEndpoint_CancelBlockwiseRequest</name>
        <param>
          <type><ref refid="group___co_a_p_1ga503e861afa7a81ea05f35da9eea44b69" kindref="member">GG_CoapEndpoint</ref> *</type>
          <declname>self</declname>
        </param>
        <param>
          <type><ref refid="group___co_a_p_1ga24904756d572f1366d2ed28f76718e7c" kindref="member">GG_CoapRequestHandle</ref></type>
          <declname>request_handle</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Cancel a previously sent blockwise request. When a request is cancelled, its listener will no longer be called, even if a response datagram is received.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>self</parametername>
</parameternamelist>
<parameterdescription>
<para>The object on which this method is called. @parm request_handle Handle of the request to cancel.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>GG_SUCCESS if the call succeeded, or a negative error code. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="xp/coap/gg_coap_blockwise.h" line="265" column="11" declfile="xp/coap/gg_coap_blockwise.h" declline="265" declcolumn="11"/>
      </memberdef>
      <memberdef kind="function" id="group___co_a_p_1ga4b29bcd4b094d5d22395a7d495290a24" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group___errors_1gacf7401469f33ad0744f7f1f7006fd021" kindref="member">GG_Result</ref></type>
        <definition>GG_Result GG_CoapEndpoint_PauseBlockwiseRequest</definition>
        <argsstring>(GG_CoapEndpoint *self, GG_CoapRequestHandle request_handle)</argsstring>
        <name>GG_CoapEndpoint_PauseBlockwiseRequest</name>
        <param>
          <type><ref refid="group___co_a_p_1ga503e861afa7a81ea05f35da9eea44b69" kindref="member">GG_CoapEndpoint</ref> *</type>
          <declname>self</declname>
        </param>
        <param>
          <type><ref refid="group___co_a_p_1ga24904756d572f1366d2ed28f76718e7c" kindref="member">GG_CoapRequestHandle</ref></type>
          <declname>request_handle</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Pause a blockwise request. When a blockwise request is paused, no further individual block requests will be made until it is resumed. This method may be used by a GG_CoapBlockwiseResponseListener::OnResponseBlock callback if it isn&apos;t ready to receive more callbacks (when it is ready again, it can call GG_CoapEndpoint_ResumeBlockwiseRequest).</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>self</parametername>
</parameternamelist>
<parameterdescription>
<para>The object on which this method is called. @parm request_handle Handle of the request to pause.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>GG_SUCCESS if the call succeeded, or a negative error code. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="xp/coap/gg_coap_blockwise.h" line="279" column="11" declfile="xp/coap/gg_coap_blockwise.h" declline="279" declcolumn="11"/>
      </memberdef>
      <memberdef kind="function" id="group___co_a_p_1gac5877324e5fcd046297c8e8decc7e138" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group___errors_1gacf7401469f33ad0744f7f1f7006fd021" kindref="member">GG_Result</ref></type>
        <definition>GG_Result GG_CoapEndpoint_ResumeBlockwiseRequest</definition>
        <argsstring>(GG_CoapEndpoint *self, GG_CoapRequestHandle request_handle)</argsstring>
        <name>GG_CoapEndpoint_ResumeBlockwiseRequest</name>
        <param>
          <type><ref refid="group___co_a_p_1ga503e861afa7a81ea05f35da9eea44b69" kindref="member">GG_CoapEndpoint</ref> *</type>
          <declname>self</declname>
        </param>
        <param>
          <type><ref refid="group___co_a_p_1ga24904756d572f1366d2ed28f76718e7c" kindref="member">GG_CoapRequestHandle</ref></type>
          <declname>request_handle</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Resume a blockwise request. If the request is not paused, this has no effect.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>self</parametername>
</parameternamelist>
<parameterdescription>
<para>The object on which this method is called. @parm request_handle Handle of the request to resume.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>GG_SUCCESS if the call succeeded, or a negative error code. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="xp/coap/gg_coap_blockwise.h" line="290" column="11" declfile="xp/coap/gg_coap_blockwise.h" declline="290" declcolumn="11"/>
      </memberdef>
      <memberdef kind="function" id="group___co_a_p_1gad704c8d5c1a6102e3d218ff2c5a5e455" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group___errors_1gacf7401469f33ad0744f7f1f7006fd021" kindref="member">GG_Result</ref></type>
        <definition>GG_Result GG_CoapEndpoint_CreateBlockwiseResponse</definition>
        <argsstring>(GG_CoapEndpoint *self, const GG_CoapMessage *request, uint8_t code, GG_CoapMessageOptionParam *options, size_t options_count, const uint8_t *payload, size_t payload_size, uint32_t block_option_number, const GG_CoapMessageBlockInfo *block_info, GG_CoapMessage **response)</argsstring>
        <name>GG_CoapEndpoint_CreateBlockwiseResponse</name>
        <param>
          <type><ref refid="group___co_a_p_1ga503e861afa7a81ea05f35da9eea44b69" kindref="member">GG_CoapEndpoint</ref> *</type>
          <declname>self</declname>
        </param>
        <param>
          <type>const <ref refid="group___co_a_p_1ga9157b9a869a3491836c914884c1e6c7d" kindref="member">GG_CoapMessage</ref> *</type>
          <declname>request</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>code</declname>
        </param>
        <param>
          <type><ref refid="struct_g_g___coap_message_option_param" kindref="compound">GG_CoapMessageOptionParam</ref> *</type>
          <declname>options</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>options_count</declname>
        </param>
        <param>
          <type>const uint8_t *</type>
          <declname>payload</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>payload_size</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>block_option_number</declname>
        </param>
        <param>
          <type>const <ref refid="struct_g_g___coap_message_block_info" kindref="compound">GG_CoapMessageBlockInfo</ref> *</type>
          <declname>block_info</declname>
        </param>
        <param>
          <type><ref refid="group___co_a_p_1ga9157b9a869a3491836c914884c1e6c7d" kindref="member">GG_CoapMessage</ref> **</type>
          <declname>response</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Create a CoAP blockwise response. This method is similar to GG_CoapEndpoint_CreateResponse, but for blockwise responses.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>self</parametername>
</parameternamelist>
<parameterdescription>
<para>The object on which this method is called. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>request</parametername>
</parameternamelist>
<parameterdescription>
<para>The request for which the response is created. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>code</parametername>
</parameternamelist>
<parameterdescription>
<para>The response code. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>options</parametername>
</parameternamelist>
<parameterdescription>
<para>Options for the response. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>options_count</parametername>
</parameternamelist>
<parameterdescription>
<para>Number of options for the response. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>payload</parametername>
</parameternamelist>
<parameterdescription>
<para>Payload for the response. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>payload_size</parametername>
</parameternamelist>
<parameterdescription>
<para>Size of the payload. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>block_option_number</parametername>
</parameternamelist>
<parameterdescription>
<para>Block option number for the response (GG_COAP_MESSAGE_OPTION_BLOCK1 or GG_COAP_MESSAGE_OPTION_BLOCK2) </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>block_info</parametername>
</parameternamelist>
<parameterdescription>
<para>Details about the block. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>response</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the variable in which the object will be returned.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>GG_SUCCESS if the object could be created, or a negative error code. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="xp/coap/gg_coap_blockwise.h" line="310" column="11" declfile="xp/coap/gg_coap_blockwise.h" declline="310" declcolumn="11"/>
      </memberdef>
      <memberdef kind="function" id="group___co_a_p_1ga5a06a3c5509441e906350ec28cf921ba" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group___errors_1gacf7401469f33ad0744f7f1f7006fd021" kindref="member">GG_Result</ref></type>
        <definition>GG_Result GG_CoapEndpoint_CreateBlockwiseResponseFromBlockSource</definition>
        <argsstring>(GG_CoapEndpoint *self, const GG_CoapMessage *request, uint8_t code, GG_CoapMessageOptionParam *options, size_t options_count, GG_CoapBlockSource *payload_source, uint32_t block_option_number, const GG_CoapMessageBlockInfo *block_info, GG_CoapMessage **response)</argsstring>
        <name>GG_CoapEndpoint_CreateBlockwiseResponseFromBlockSource</name>
        <param>
          <type><ref refid="group___co_a_p_1ga503e861afa7a81ea05f35da9eea44b69" kindref="member">GG_CoapEndpoint</ref> *</type>
          <declname>self</declname>
        </param>
        <param>
          <type>const <ref refid="group___co_a_p_1ga9157b9a869a3491836c914884c1e6c7d" kindref="member">GG_CoapMessage</ref> *</type>
          <declname>request</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>code</declname>
        </param>
        <param>
          <type><ref refid="struct_g_g___coap_message_option_param" kindref="compound">GG_CoapMessageOptionParam</ref> *</type>
          <declname>options</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>options_count</declname>
        </param>
        <param>
          <type><ref refid="struct_g_g___coap_block_source" kindref="compound">GG_CoapBlockSource</ref> *</type>
          <declname>payload_source</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>block_option_number</declname>
        </param>
        <param>
          <type>const <ref refid="struct_g_g___coap_message_block_info" kindref="compound">GG_CoapMessageBlockInfo</ref> *</type>
          <declname>block_info</declname>
        </param>
        <param>
          <type><ref refid="group___co_a_p_1ga9157b9a869a3491836c914884c1e6c7d" kindref="member">GG_CoapMessage</ref> **</type>
          <declname>response</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Create a CoAP blockwise response. This method is similar to GG_CoapEndpoint_CreateBlockwiseResponse, but with the payload supplied by a <ref refid="struct_g_g___coap_block_source" kindref="compound">GG_CoapBlockSource</ref>.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>self</parametername>
</parameternamelist>
<parameterdescription>
<para>The object on which this method is called. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>request</parametername>
</parameternamelist>
<parameterdescription>
<para>The request for which the response is created. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>code</parametername>
</parameternamelist>
<parameterdescription>
<para>The response code. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>options</parametername>
</parameternamelist>
<parameterdescription>
<para>Options for the response. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>options_count</parametername>
</parameternamelist>
<parameterdescription>
<para>Number of options for the response. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>payload_source</parametername>
</parameternamelist>
<parameterdescription>
<para>Payload source for the response. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>block_option_number</parametername>
</parameternamelist>
<parameterdescription>
<para>Block option number for the response (GG_COAP_MESSAGE_OPTION_BLOCK1 or GG_COAP_MESSAGE_OPTION_BLOCK2) </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>block_info</parametername>
</parameternamelist>
<parameterdescription>
<para>Details about the block. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>response</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the variable in which the object will be returned.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>GG_SUCCESS if the object could be created, or a negative error code. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="xp/coap/gg_coap_blockwise.h" line="339" column="11" declfile="xp/coap/gg_coap_blockwise.h" declline="339" declcolumn="11"/>
      </memberdef>
      <memberdef kind="function" id="group___co_a_p_1ga01b59b4c85787cc575df91564729628c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void GG_CoapEndpoint_DestroyBlockwiseRequestContexts</definition>
        <argsstring>(GG_CoapEndpoint *self)</argsstring>
        <name>GG_CoapEndpoint_DestroyBlockwiseRequestContexts</name>
        <param>
          <type><ref refid="group___co_a_p_1ga503e861afa7a81ea05f35da9eea44b69" kindref="member">GG_CoapEndpoint</ref> *</type>
          <declname>self</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Destroy all pending blockwise request contexts.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>self</parametername>
</parameternamelist>
<parameterdescription>
<para>The object on which this method is called. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="xp/coap/gg_coap_blockwise.h" line="354" column="6" declfile="xp/coap/gg_coap_blockwise.h" declline="354" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="group___co_a_p_1ga4e9aa2166af15e85d16de10371159724" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void GG_CoapEndpoint_InspectBlockwiseRequestContexts</definition>
        <argsstring>(GG_CoapEndpoint *self, GG_Inspector *inspector, const GG_InspectionOptions *options)</argsstring>
        <name>GG_CoapEndpoint_InspectBlockwiseRequestContexts</name>
        <param>
          <type><ref refid="group___co_a_p_1ga503e861afa7a81ea05f35da9eea44b69" kindref="member">GG_CoapEndpoint</ref> *</type>
          <declname>self</declname>
        </param>
        <param>
          <type><ref refid="struct_g_g___inspector" kindref="compound">GG_Inspector</ref> *</type>
          <declname>inspector</declname>
        </param>
        <param>
          <type>const <ref refid="struct_g_g___inspection_options" kindref="compound">GG_InspectionOptions</ref> *</type>
          <declname>options</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Inspect all pending blockwise request contexts.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>self</parametername>
</parameternamelist>
<parameterdescription>
<para>The object on which this method is called. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>inspector</parametername>
</parameternamelist>
<parameterdescription>
<para>Inspector to call during the inspection. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>options</parametername>
</parameternamelist>
<parameterdescription>
<para>Inspection options. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="xp/coap/gg_coap_blockwise.h" line="363" column="6" declfile="xp/coap/gg_coap_blockwise.h" declline="363" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="group___co_a_p_1ga865873f8550c382534fada2194e3266d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group___errors_1gacf7401469f33ad0744f7f1f7006fd021" kindref="member">GG_Result</ref></type>
        <definition>GG_Result GG_CoapMessageBlockInfo_ToOptionValue</definition>
        <argsstring>(const GG_CoapMessageBlockInfo *blockwise_info, uint32_t *block_option_value)</argsstring>
        <name>GG_CoapMessageBlockInfo_ToOptionValue</name>
        <param>
          <type>const <ref refid="struct_g_g___coap_message_block_info" kindref="compound">GG_CoapMessageBlockInfo</ref> *</type>
          <declname>blockwise_info</declname>
        </param>
        <param>
          <type>uint32_t *</type>
          <declname>block_option_value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Encode block info into a block option value.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>blockwise_info</parametername>
</parameternamelist>
<parameterdescription>
<para>The block info structure. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">block_option_value</parametername>
</parameternamelist>
<parameterdescription>
<para>The block option value.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>GG_SUCCESS if successful, or an error code. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="xp/coap/gg_coap_blockwise.h" line="375" column="11" declfile="xp/coap/gg_coap_blockwise.h" declline="375" declcolumn="11"/>
      </memberdef>
      <memberdef kind="function" id="group___co_a_p_1gac500b57c72fa8b231da95b75ac784058" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void GG_CoapBlockwiseServerHelper_Init</definition>
        <argsstring>(GG_CoapBlockwiseServerHelper *self, uint32_t block_type, size_t preferred_block_size)</argsstring>
        <name>GG_CoapBlockwiseServerHelper_Init</name>
        <param>
          <type><ref refid="struct_g_g___coap_blockwise_server_helper" kindref="compound">GG_CoapBlockwiseServerHelper</ref> *</type>
          <declname>self</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>block_type</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>preferred_block_size</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Initialize a <ref refid="struct_g_g___coap_blockwise_server_helper" kindref="compound">GG_CoapBlockwiseServerHelper</ref> object.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>self</parametername>
</parameternamelist>
<parameterdescription>
<para>The object on which this method is invoked. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>block_type</parametername>
</parameternamelist>
<parameterdescription>
<para>The type of block transfer this object is helping with. (GG_COAP_MESSAGE_OPTION_BLOCK1 for PUT/POST or GG_COAP_MESSAGE_OPTION_BLOCK2 for GET) </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>preferred_block_size</parametername>
</parameternamelist>
<parameterdescription>
<para>The preferred block size for the server. Pass 0 to use a default value. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="xp/coap/gg_coap_blockwise.h" line="386" column="6" declfile="xp/coap/gg_coap_blockwise.h" declline="386" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="group___co_a_p_1gad64be36befdaccfbf2975be97bf3afcd" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void GG_CoapBlockwiseServerHelper_SetEtag</definition>
        <argsstring>(GG_CoapBlockwiseServerHelper *self, const uint8_t *etag, size_t etag_size)</argsstring>
        <name>GG_CoapBlockwiseServerHelper_SetEtag</name>
        <param>
          <type><ref refid="struct_g_g___coap_blockwise_server_helper" kindref="compound">GG_CoapBlockwiseServerHelper</ref> *</type>
          <declname>self</declname>
        </param>
        <param>
          <type>const uint8_t *</type>
          <declname>etag</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>etag_size</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Set the ETag value for the current transfer. This is normally called everytime a new transfer starts (i.e a new block with index 0 is received). The Etag value should be as unique as possible, at least within the context of the resource that is exposed by the server.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>etag</parametername>
</parameternamelist>
<parameterdescription>
<para>The ETag value. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>etag_size</parametername>
</parameternamelist>
<parameterdescription>
<para>Size of the ETag value (1 to 8 bytes) </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="xp/coap/gg_coap_blockwise.h" line="399" column="6" declfile="xp/coap/gg_coap_blockwise.h" declline="399" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="group___co_a_p_1ga018dd696dea3da3c5118f863826cf620" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group___errors_1gacf7401469f33ad0744f7f1f7006fd021" kindref="member">GG_Result</ref></type>
        <definition>GG_Result GG_CoapBlockwiseServerHelper_OnRequest</definition>
        <argsstring>(GG_CoapBlockwiseServerHelper *self, const GG_CoapMessage *request, bool *request_was_resent)</argsstring>
        <name>GG_CoapBlockwiseServerHelper_OnRequest</name>
        <param>
          <type><ref refid="struct_g_g___coap_blockwise_server_helper" kindref="compound">GG_CoapBlockwiseServerHelper</ref> *</type>
          <declname>self</declname>
        </param>
        <param>
          <type>const <ref refid="group___co_a_p_1ga9157b9a869a3491836c914884c1e6c7d" kindref="member">GG_CoapMessage</ref> *</type>
          <declname>request</declname>
        </param>
        <param>
          <type>bool *</type>
          <declname>request_was_resent</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Update the state of the helper when a request is received.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>self</parametername>
</parameternamelist>
<parameterdescription>
<para>The object on which this method is invoked. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>request</parametername>
</parameternamelist>
<parameterdescription>
<para>The request that was received by the server. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>request_was_resent</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to where a boolean flag will be returned, indicating whether the request appears to be a resent request or a new request.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>GG_SUCCESS if the request is acceptable, or a non-zero value if the server handler should return without further processing the request (in that case, this return value may be returned as the server OnRequest() handler&apos;s return value). </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="xp/coap/gg_coap_blockwise.h" line="413" column="11" declfile="xp/coap/gg_coap_blockwise.h" declline="413" declcolumn="11"/>
      </memberdef>
      <memberdef kind="function" id="group___co_a_p_1ga6c30a370f572f4ffafc6a8d906436cdf" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group___errors_1gacf7401469f33ad0744f7f1f7006fd021" kindref="member">GG_Result</ref></type>
        <definition>GG_Result GG_CoapBlockwiseServerHelper_CreateResponse</definition>
        <argsstring>(GG_CoapBlockwiseServerHelper *self, GG_CoapEndpoint *endpoint, const GG_CoapMessage *request, uint8_t code, GG_CoapMessageOptionParam *options, size_t options_count, const uint8_t *payload, size_t payload_size, GG_CoapMessage **response)</argsstring>
        <name>GG_CoapBlockwiseServerHelper_CreateResponse</name>
        <param>
          <type><ref refid="struct_g_g___coap_blockwise_server_helper" kindref="compound">GG_CoapBlockwiseServerHelper</ref> *</type>
          <declname>self</declname>
        </param>
        <param>
          <type><ref refid="group___co_a_p_1ga503e861afa7a81ea05f35da9eea44b69" kindref="member">GG_CoapEndpoint</ref> *</type>
          <declname>endpoint</declname>
        </param>
        <param>
          <type>const <ref refid="group___co_a_p_1ga9157b9a869a3491836c914884c1e6c7d" kindref="member">GG_CoapMessage</ref> *</type>
          <declname>request</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>code</declname>
        </param>
        <param>
          <type><ref refid="struct_g_g___coap_message_option_param" kindref="compound">GG_CoapMessageOptionParam</ref> *</type>
          <declname>options</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>options_count</declname>
        </param>
        <param>
          <type>const uint8_t *</type>
          <declname>payload</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>payload_size</declname>
        </param>
        <param>
          <type><ref refid="group___co_a_p_1ga9157b9a869a3491836c914884c1e6c7d" kindref="member">GG_CoapMessage</ref> **</type>
          <declname>response</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Create a response based on the previously processed request (GG_CoapBlockwiseServerHelper_OnRequest)</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>self</parametername>
</parameternamelist>
<parameterdescription>
<para>The object on which this method is invoked. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>endpoint</parametername>
</parameternamelist>
<parameterdescription>
<para>The endpoint to use to create the response object. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>request</parametername>
</parameternamelist>
<parameterdescription>
<para>The request for which the response is. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>code</parametername>
</parameternamelist>
<parameterdescription>
<para>The response code. Should be GG_COAP_MESSAGE_CODE_CONTINUE for BLOCK1 transfers when the block is not the last block, unless an error condition needs to be returned. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>payload</parametername>
</parameternamelist>
<parameterdescription>
<para>Payload for the response (NULL for BLOCK1). </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>payload_size</parametername>
</parameternamelist>
<parameterdescription>
<para>Size of the payload. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>options</parametername>
</parameternamelist>
<parameterdescription>
<para>Optional list of response options (may be NULL if there are none). </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>options_count</parametername>
</parameternamelist>
<parameterdescription>
<para>Number of options in the options list. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>response</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to variable in which the response should be returned.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>GG_SUCCESS if the response could be created, or a negative error code. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="xp/coap/gg_coap_blockwise.h" line="433" column="11" declfile="xp/coap/gg_coap_blockwise.h" declline="433" declcolumn="11"/>
      </memberdef>
      <memberdef kind="function" id="group___co_a_p_1gac467396b044e24d43620815c3ddba065" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group___errors_1gacf7401469f33ad0744f7f1f7006fd021" kindref="member">GG_Result</ref></type>
        <definition>GG_Result GG_CoapGroupRequestFilter_Create</definition>
        <argsstring>(GG_CoapGroupRequestFilter **filter)</argsstring>
        <name>GG_CoapGroupRequestFilter_Create</name>
        <param>
          <type><ref refid="group___co_a_p_1ga0ae8314f969e4e25c0774ec3f5f7b8bd" kindref="member">GG_CoapGroupRequestFilter</ref> **</type>
          <declname>filter</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Create a new GG_CoapGroupRequestFilter object.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>filter</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the variable where the object will be returned.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>GG_SUCCESS if the object could be created, or a negative error code. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="xp/coap/gg_coap_filters.h" line="74" column="11" declfile="xp/coap/gg_coap_filters.h" declline="74" declcolumn="11"/>
      </memberdef>
      <memberdef kind="function" id="group___co_a_p_1gab4eeedb212ec534ab9c93f024faf0426" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void GG_CoapGroupRequestFilter_Destroy</definition>
        <argsstring>(GG_CoapGroupRequestFilter *self)</argsstring>
        <name>GG_CoapGroupRequestFilter_Destroy</name>
        <param>
          <type><ref refid="group___co_a_p_1ga0ae8314f969e4e25c0774ec3f5f7b8bd" kindref="member">GG_CoapGroupRequestFilter</ref> *</type>
          <declname>self</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Destroy the object. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="xp/coap/gg_coap_filters.h" line="79" column="6" declfile="xp/coap/gg_coap_filters.h" declline="79" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="group___co_a_p_1ga21c20607c32c8c17930b1255ab509544" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="struct_g_g___coap_request_filter" kindref="compound">GG_CoapRequestFilter</ref> *</type>
        <definition>GG_CoapRequestFilter* GG_CoapGroupRequestFilter_AsCoapRequestFilter</definition>
        <argsstring>(GG_CoapGroupRequestFilter *self)</argsstring>
        <name>GG_CoapGroupRequestFilter_AsCoapRequestFilter</name>
        <param>
          <type><ref refid="group___co_a_p_1ga0ae8314f969e4e25c0774ec3f5f7b8bd" kindref="member">GG_CoapGroupRequestFilter</ref> *</type>
          <declname>self</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Obtain the <ref refid="struct_g_g___coap_request_filter" kindref="compound">GG_CoapRequestFilter</ref> interface for a GG_CoapGroupRequestFilter object.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>self</parametername>
</parameternamelist>
<parameterdescription>
<para>The object on which this method is invoked.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The object&apos;s <ref refid="struct_g_g___coap_request_filter" kindref="compound">GG_CoapRequestFilter</ref> interface </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="xp/coap/gg_coap_filters.h" line="88" column="22" declfile="xp/coap/gg_coap_filters.h" declline="88" declcolumn="22"/>
      </memberdef>
      <memberdef kind="function" id="group___co_a_p_1ga17e2686526b5bfc7df86ba9459d03c1e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group___errors_1gacf7401469f33ad0744f7f1f7006fd021" kindref="member">GG_Result</ref></type>
        <definition>GG_Result GG_CoapGroupRequestFilter_SetGroup</definition>
        <argsstring>(GG_CoapGroupRequestFilter *self, uint8_t group)</argsstring>
        <name>GG_CoapGroupRequestFilter_SetGroup</name>
        <param>
          <type><ref refid="group___co_a_p_1ga0ae8314f969e4e25c0774ec3f5f7b8bd" kindref="member">GG_CoapGroupRequestFilter</ref> *</type>
          <declname>self</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>group</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Set the current group for the filter.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>self</parametername>
</parameternamelist>
<parameterdescription>
<para>The object on which this method is invoked. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>group</parametername>
</parameternamelist>
<parameterdescription>
<para>Group number, between 0 and GG_COAP_GROUP_REQUEST_FILTER_MAX_GROUP</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>GG_SUCCESS if the group number was set, or GG_ERROR_OUT_OF_RANGE if the group number is &gt; GG_COAP_GROUP_REQUEST_FILTER_MAX_GROUP. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="xp/coap/gg_coap_filters.h" line="99" column="11" declfile="xp/coap/gg_coap_filters.h" declline="99" declcolumn="11"/>
      </memberdef>
      <memberdef kind="function" id="group___co_a_p_1ga8f513f83d6cb345d8b19dadd7d85579e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>uint8_t</type>
        <definition>uint8_t GG_CoapGroupRequestFilter_GetGroup</definition>
        <argsstring>(GG_CoapGroupRequestFilter *self)</argsstring>
        <name>GG_CoapGroupRequestFilter_GetGroup</name>
        <param>
          <type><ref refid="group___co_a_p_1ga0ae8314f969e4e25c0774ec3f5f7b8bd" kindref="member">GG_CoapGroupRequestFilter</ref> *</type>
          <declname>self</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Get the current group for the filter.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>self</parametername>
</parameternamelist>
<parameterdescription>
<para>The object on which this method is invoked.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The filter&apos;s current group property. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="xp/coap/gg_coap_filters.h" line="108" column="9" declfile="xp/coap/gg_coap_filters.h" declline="108" declcolumn="9"/>
      </memberdef>
      <memberdef kind="function" id="group___co_a_p_1ga7cf647ace7a2b7a99324ea3702c5a17c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>GG_CoapRequestHandlerResult</type>
        <definition>GG_CoapRequestHandlerResult GG_CoapRequestFilter_FilterRequest</definition>
        <argsstring>(GG_CoapRequestFilter *self, GG_CoapEndpoint *endpoint, uint32_t handler_flags, const GG_CoapMessage *request, GG_CoapMessage **response)</argsstring>
        <name>GG_CoapRequestFilter_FilterRequest</name>
        <param>
          <type><ref refid="struct_g_g___coap_request_filter" kindref="compound">GG_CoapRequestFilter</ref> *</type>
          <declname>self</declname>
        </param>
        <param>
          <type><ref refid="group___co_a_p_1ga503e861afa7a81ea05f35da9eea44b69" kindref="member">GG_CoapEndpoint</ref> *</type>
          <declname>endpoint</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>handler_flags</declname>
        </param>
        <param>
          <type>const <ref refid="group___co_a_p_1ga9157b9a869a3491836c914884c1e6c7d" kindref="member">GG_CoapMessage</ref> *</type>
          <declname>request</declname>
        </param>
        <param>
          <type><ref refid="group___co_a_p_1ga9157b9a869a3491836c914884c1e6c7d" kindref="member">GG_CoapMessage</ref> **</type>
          <declname>response</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Filter a request. The filter may either:<itemizedlist>
<listitem><para>terminate the filter chain by providing a response or a CoAP result code, in which case the CoAP endpoint will stop iterating over the filter chain, and respond immediately without invoking the registered handler for the request or</para>
</listitem><listitem><para>return GG_SUCCESS and not provide a response, in which case the CoAP endpoint will continue iterating over the filter chain to the next filter or the final handler</para>
</listitem></itemizedlist>
</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>self</parametername>
</parameternamelist>
<parameterdescription>
<para>The object on which this method is invoked. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>endpoint</parametername>
</parameternamelist>
<parameterdescription>
<para>The endpoint that received the request. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>handler_flags</parametername>
</parameternamelist>
<parameterdescription>
<para>Flags associated with the handler for the request. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>request</parametername>
</parameternamelist>
<parameterdescription>
<para>The request to filter. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>response</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the variable where the filter may return a response if it terminates the filter chain. The filter should only return a response in this variable if it also returns GG_SUCCESS.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>GG_SUCCESS or a CoAP result code if the filter was able to complete, or negative error code. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="xp/coap/gg_coap.h" line="329" column="29" declfile="xp/coap/gg_coap.h" declline="329" declcolumn="29"/>
      </memberdef>
      <memberdef kind="function" id="group___co_a_p_1ga9281806f762c5b57036f6d341457ac8f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group___errors_1gacf7401469f33ad0744f7f1f7006fd021" kindref="member">GG_Result</ref></type>
        <definition>GG_Result GG_CoapBlockSource_GetDataSize</definition>
        <argsstring>(GG_CoapBlockSource *self, size_t offset, size_t *data_size, bool *more)</argsstring>
        <name>GG_CoapBlockSource_GetDataSize</name>
        <param>
          <type><ref refid="struct_g_g___coap_block_source" kindref="compound">GG_CoapBlockSource</ref> *</type>
          <declname>self</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>offset</declname>
        </param>
        <param>
          <type>size_t *</type>
          <declname>data_size</declname>
        </param>
        <param>
          <type>bool *</type>
          <declname>more</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="xp/coap/gg_coap_blockwise.h" line="179" column="11" declfile="xp/coap/gg_coap_blockwise.h" declline="179" declcolumn="11"/>
      </memberdef>
      <memberdef kind="function" id="group___co_a_p_1gaf68d51ca2abfa89d5165aae4943ac2af" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group___errors_1gacf7401469f33ad0744f7f1f7006fd021" kindref="member">GG_Result</ref></type>
        <definition>GG_Result GG_CoapBlockSource_GetData</definition>
        <argsstring>(GG_CoapBlockSource *self, size_t offset, size_t data_size, void *data)</argsstring>
        <name>GG_CoapBlockSource_GetData</name>
        <param>
          <type><ref refid="struct_g_g___coap_block_source" kindref="compound">GG_CoapBlockSource</ref> *</type>
          <declname>self</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>offset</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>data_size</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>data</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="xp/coap/gg_coap_blockwise.h" line="186" column="11" declfile="xp/coap/gg_coap_blockwise.h" declline="186" declcolumn="11"/>
      </memberdef>
      <memberdef kind="function" id="group___co_a_p_1ga87cd2d6df6d03535c36aa9061a70d8bf" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void GG_CoapBlockwiseResponseListener_OnResponseBlock</definition>
        <argsstring>(GG_CoapBlockwiseResponseListener *self, GG_CoapMessageBlockInfo *block_info, GG_CoapMessage *block_message)</argsstring>
        <name>GG_CoapBlockwiseResponseListener_OnResponseBlock</name>
        <param>
          <type><ref refid="struct_g_g___coap_blockwise_response_listener" kindref="compound">GG_CoapBlockwiseResponseListener</ref> *</type>
          <declname>self</declname>
        </param>
        <param>
          <type><ref refid="struct_g_g___coap_message_block_info" kindref="compound">GG_CoapMessageBlockInfo</ref> *</type>
          <declname>block_info</declname>
        </param>
        <param>
          <type><ref refid="group___co_a_p_1ga9157b9a869a3491836c914884c1e6c7d" kindref="member">GG_CoapMessage</ref> *</type>
          <declname>block_message</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="xp/coap/gg_coap_blockwise.h" line="217" column="6" declfile="xp/coap/gg_coap_blockwise.h" declline="217" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="group___co_a_p_1ga51a9cd769bc2633dbdea87dbac3e5081" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void GG_CoapBlockwiseResponseListener_OnError</definition>
        <argsstring>(GG_CoapBlockwiseResponseListener *self, GG_Result error, const char *message)</argsstring>
        <name>GG_CoapBlockwiseResponseListener_OnError</name>
        <param>
          <type><ref refid="struct_g_g___coap_blockwise_response_listener" kindref="compound">GG_CoapBlockwiseResponseListener</ref> *</type>
          <declname>self</declname>
        </param>
        <param>
          <type><ref refid="group___errors_1gacf7401469f33ad0744f7f1f7006fd021" kindref="member">GG_Result</ref></type>
          <declname>error</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>message</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="xp/coap/gg_coap_blockwise.h" line="223" column="6" declfile="xp/coap/gg_coap_blockwise.h" declline="223" declcolumn="6"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="define">
      <memberdef kind="define" id="group___co_a_p_1gac602090c4a7aeb000b42ce43ad1102e6" prot="public" static="no">
        <name>GG_COAP_DEFAULT_PORT</name>
        <initializer>5683</initializer>
        <briefdescription>
<para>Default UDP port for unsecured CoAP. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="xp/coap/gg_coap.h" line="392" column="9" bodyfile="xp/coap/gg_coap.h" bodystart="392" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___co_a_p_1gab81d3df1a8c0bcbaa54b9c6fe27363de" prot="public" static="no">
        <name>GG_COAP_DEFAULT_PORT_SECURE</name>
        <initializer>5684</initializer>
        <briefdescription>
<para>Default UDP port for secured CoAP. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="xp/coap/gg_coap.h" line="393" column="9" bodyfile="xp/coap/gg_coap.h" bodystart="393" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___co_a_p_1ga31063d6b747d2a86e98fe8136827b2aa" prot="public" static="no">
        <name>GG_COAP_MESSGAGE_MAX_TOKEN_LENGTH</name>
        <initializer>8</initializer>
        <briefdescription>
<para>Maximum lengnth of a message token. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="xp/coap/gg_coap.h" line="394" column="9" bodyfile="xp/coap/gg_coap.h" bodystart="394" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___co_a_p_1ga6db330786e5d2e6170bba149e5f4d7e1" prot="public" static="no">
        <name>GG_COAP_MESSAGE_OPTION_ITERATOR_FILTER_ANY</name>
        <initializer>0</initializer>
        <briefdescription>
<para>Indicates that an iterator iterates over all options. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="xp/coap/gg_coap.h" line="395" column="9" bodyfile="xp/coap/gg_coap.h" bodystart="395" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___co_a_p_1ga4adf7d011188505747dece10900816fa" prot="public" static="no">
        <name>GG_COAP_REQUEST_HANDLER_FLAG_ALLOW_GET</name>
        <initializer>(1)</initializer>
        <briefdescription>
<para>Allow GET requests. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="xp/coap/gg_coap.h" line="398" column="9" bodyfile="xp/coap/gg_coap.h" bodystart="398" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___co_a_p_1ga43f0f48858ff767661f391e83ca44aca" prot="public" static="no">
        <name>GG_COAP_REQUEST_HANDLER_FLAG_ALLOW_POST</name>
        <initializer>(1 &lt;&lt; 1)</initializer>
        <briefdescription>
<para>Allow POST requests. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="xp/coap/gg_coap.h" line="399" column="9" bodyfile="xp/coap/gg_coap.h" bodystart="399" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___co_a_p_1ga55e831d8603d1cc8f712af50f6fc1318" prot="public" static="no">
        <name>GG_COAP_REQUEST_HANDLER_FLAG_ALLOW_PUT</name>
        <initializer>(1 &lt;&lt; 2)</initializer>
        <briefdescription>
<para>Allow PUT requests. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="xp/coap/gg_coap.h" line="400" column="9" bodyfile="xp/coap/gg_coap.h" bodystart="400" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___co_a_p_1gab3adf11a2965e7a5a533c3a52f03fe93" prot="public" static="no">
        <name>GG_COAP_REQUEST_HANDLER_FLAG_ALLOW_DELETE</name>
        <initializer>(1 &lt;&lt; 3)</initializer>
        <briefdescription>
<para>Allow DELETE requests. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="xp/coap/gg_coap.h" line="401" column="9" bodyfile="xp/coap/gg_coap.h" bodystart="401" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___co_a_p_1ga7708b94352683faeb734822e109fe34f" prot="public" static="no">
        <name>GG_COAP_REQUEST_HANDLER_FLAGS_ALLOW_ALL</name>
        <initializer>(0xF)</initializer>
        <briefdescription>
<para>Allow all requests. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="xp/coap/gg_coap.h" line="402" column="9" bodyfile="xp/coap/gg_coap.h" bodystart="402" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___co_a_p_1ga80d2af5422d81b36da9ad475b80d513b" prot="public" static="no">
        <name>GG_COAP_REQUEST_HANDLER_FLAG_ENABLE_ASYNC</name>
        <initializer>(1 &lt;&lt; 4)</initializer>
        <briefdescription>
<para>Enable async responses from the handler. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="xp/coap/gg_coap.h" line="405" column="9" bodyfile="xp/coap/gg_coap.h" bodystart="405" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___co_a_p_1gab086318cbb34e1799de388330be8d0b9" prot="public" static="no">
        <name>GG_COAP_REQUEST_HANDLER_FLAG_GROUP</name>
        <param><defname>group</defname></param>
        <initializer>(1 &lt;&lt; (23 + (group)))</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="xp/coap/gg_coap.h" line="411" column="9" bodyfile="xp/coap/gg_coap.h" bodystart="411" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___co_a_p_1ga304797f55aa9ce9cfb8492929dab3451" prot="public" static="no">
        <name>GG_COAP_REQUEST_HANDLER_FLAG_GROUP_1</name>
        <initializer>GG_COAP_REQUEST_HANDLER_FLAG_GROUP(1)</initializer>
        <briefdescription>
<para>Belongs to group 1. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="xp/coap/gg_coap.h" line="412" column="9" bodyfile="xp/coap/gg_coap.h" bodystart="412" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___co_a_p_1ga82bfaa9d87c3fa56c36c0f7ce7a38775" prot="public" static="no">
        <name>GG_COAP_REQUEST_HANDLER_FLAG_GROUP_2</name>
        <initializer>GG_COAP_REQUEST_HANDLER_FLAG_GROUP(2)</initializer>
        <briefdescription>
<para>Belongs to group 2. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="xp/coap/gg_coap.h" line="413" column="9" bodyfile="xp/coap/gg_coap.h" bodystart="413" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___co_a_p_1ga445eba4071e94b3af879755ccf72726b" prot="public" static="no">
        <name>GG_COAP_REQUEST_HANDLER_FLAG_GROUP_3</name>
        <initializer>GG_COAP_REQUEST_HANDLER_FLAG_GROUP(3)</initializer>
        <briefdescription>
<para>Belongs to group 3. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="xp/coap/gg_coap.h" line="414" column="9" bodyfile="xp/coap/gg_coap.h" bodystart="414" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___co_a_p_1gaed05a9d3e7399a69b1c9170c500f6ad2" prot="public" static="no">
        <name>GG_COAP_REQUEST_HANDLER_FLAG_GROUP_4</name>
        <initializer>GG_COAP_REQUEST_HANDLER_FLAG_GROUP(4)</initializer>
        <briefdescription>
<para>Belongs to group 4. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="xp/coap/gg_coap.h" line="415" column="9" bodyfile="xp/coap/gg_coap.h" bodystart="415" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___co_a_p_1gaece20f1cfdde873c615e1410ff048d39" prot="public" static="no">
        <name>GG_COAP_MESSAGE_CODE_CLASS</name>
        <param><defname>c</defname></param>
        <initializer>(((c) &gt;&gt; 5) &amp; 7)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="xp/coap/gg_coap.h" line="418" column="9" bodyfile="xp/coap/gg_coap.h" bodystart="418" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___co_a_p_1ga96e7b489a79c6b36cf7d066520b91a6e" prot="public" static="no">
        <name>GG_COAP_MESSAGE_CODE_DETAIL</name>
        <param><defname>c</defname></param>
        <initializer>((c) &amp; 0x1F)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="xp/coap/gg_coap.h" line="419" column="9" bodyfile="xp/coap/gg_coap.h" bodystart="419" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___co_a_p_1ga681eb1a195eee259ea693bb88df0a196" prot="public" static="no">
        <name>GG_COAP_MESSAGE_CODE</name>
        <param><defname>x</defname></param>
        <initializer>((((x) / 100) &lt;&lt; 5) | ((x) % 100))</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="xp/coap/gg_coap.h" line="420" column="9" bodyfile="xp/coap/gg_coap.h" bodystart="420" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___co_a_p_1ga12582af0f1df2c3af0fb0be123dcfdf0" prot="public" static="no">
        <name>GG_COAP_MESSAGE_CODE_CREATED</name>
        <initializer>GG_COAP_MESSAGE_CODE(201)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="xp/coap/gg_coap.h" line="421" column="9" bodyfile="xp/coap/gg_coap.h" bodystart="421" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___co_a_p_1ga691165eff139103c289b8a4b9fd2522a" prot="public" static="no">
        <name>GG_COAP_MESSAGE_CODE_DELETED</name>
        <initializer>GG_COAP_MESSAGE_CODE(202)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="xp/coap/gg_coap.h" line="422" column="9" bodyfile="xp/coap/gg_coap.h" bodystart="422" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___co_a_p_1ga33935c5b5a69938deada746939616368" prot="public" static="no">
        <name>GG_COAP_MESSAGE_CODE_VALID</name>
        <initializer>GG_COAP_MESSAGE_CODE(203)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="xp/coap/gg_coap.h" line="423" column="9" bodyfile="xp/coap/gg_coap.h" bodystart="423" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___co_a_p_1ga7319619e1d4814d89f01d785e7c994d5" prot="public" static="no">
        <name>GG_COAP_MESSAGE_CODE_CHANGED</name>
        <initializer>GG_COAP_MESSAGE_CODE(204)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="xp/coap/gg_coap.h" line="424" column="9" bodyfile="xp/coap/gg_coap.h" bodystart="424" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___co_a_p_1gae149ead450becdab4fabaa1aaa88879f" prot="public" static="no">
        <name>GG_COAP_MESSAGE_CODE_CONTENT</name>
        <initializer>GG_COAP_MESSAGE_CODE(205)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="xp/coap/gg_coap.h" line="425" column="9" bodyfile="xp/coap/gg_coap.h" bodystart="425" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___co_a_p_1ga184966107aaeaf7b6bae4b3bf25d7b87" prot="public" static="no">
        <name>GG_COAP_MESSAGE_CODE_CONTINUE</name>
        <initializer>GG_COAP_MESSAGE_CODE(231)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="xp/coap/gg_coap.h" line="426" column="9" bodyfile="xp/coap/gg_coap.h" bodystart="426" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___co_a_p_1ga5f751c76eaf24e2e9f0fc9e0b6cc4629" prot="public" static="no">
        <name>GG_COAP_MESSAGE_CODE_BAD_REQUEST</name>
        <initializer>GG_COAP_MESSAGE_CODE(400)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="xp/coap/gg_coap.h" line="427" column="9" bodyfile="xp/coap/gg_coap.h" bodystart="427" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___co_a_p_1ga486f014a6c973f43c25b867f1e154c1f" prot="public" static="no">
        <name>GG_COAP_MESSAGE_CODE_UNAUTHORIZED</name>
        <initializer>GG_COAP_MESSAGE_CODE(401)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="xp/coap/gg_coap.h" line="428" column="9" bodyfile="xp/coap/gg_coap.h" bodystart="428" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___co_a_p_1ga3555380c941404a79a8900ca7bd63f3a" prot="public" static="no">
        <name>GG_COAP_MESSAGE_CODE_BAD_OPTION</name>
        <initializer>GG_COAP_MESSAGE_CODE(402)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="xp/coap/gg_coap.h" line="429" column="9" bodyfile="xp/coap/gg_coap.h" bodystart="429" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___co_a_p_1ga9b3cbd5c263e0a7e9820351bcfdb9b5e" prot="public" static="no">
        <name>GG_COAP_MESSAGE_CODE_FORBIDDEN</name>
        <initializer>GG_COAP_MESSAGE_CODE(403)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="xp/coap/gg_coap.h" line="430" column="9" bodyfile="xp/coap/gg_coap.h" bodystart="430" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___co_a_p_1ga755ee0516dad3c7e201ee28b0f518330" prot="public" static="no">
        <name>GG_COAP_MESSAGE_CODE_NOT_FOUND</name>
        <initializer>GG_COAP_MESSAGE_CODE(404)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="xp/coap/gg_coap.h" line="431" column="9" bodyfile="xp/coap/gg_coap.h" bodystart="431" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___co_a_p_1ga760c1381c893413766045bcbbd71301c" prot="public" static="no">
        <name>GG_COAP_MESSAGE_CODE_METHOD_NOT_ALLOWED</name>
        <initializer>GG_COAP_MESSAGE_CODE(405)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="xp/coap/gg_coap.h" line="432" column="9" bodyfile="xp/coap/gg_coap.h" bodystart="432" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___co_a_p_1gadf165503d800aee454254677d702b481" prot="public" static="no">
        <name>GG_COAP_MESSAGE_CODE_NOT_ACCEPTABLE</name>
        <initializer>GG_COAP_MESSAGE_CODE(406)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="xp/coap/gg_coap.h" line="433" column="9" bodyfile="xp/coap/gg_coap.h" bodystart="433" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___co_a_p_1ga869f1092334e0199c39ae14f99e6a660" prot="public" static="no">
        <name>GG_COAP_MESSAGE_CODE_REQUEST_ENTITY_INCOMPLETE</name>
        <initializer>GG_COAP_MESSAGE_CODE(408)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="xp/coap/gg_coap.h" line="434" column="9" bodyfile="xp/coap/gg_coap.h" bodystart="434" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___co_a_p_1ga55cd279e7872df1bbdf678e695cea030" prot="public" static="no">
        <name>GG_COAP_MESSAGE_CODE_PRECONDITION_FAILED</name>
        <initializer>GG_COAP_MESSAGE_CODE(412)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="xp/coap/gg_coap.h" line="435" column="9" bodyfile="xp/coap/gg_coap.h" bodystart="435" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___co_a_p_1ga57744526faa36b7f481cc0e4788df9f1" prot="public" static="no">
        <name>GG_COAP_MESSAGE_CODE_REQUEST_ENTITY_TOO_LARGE</name>
        <initializer>GG_COAP_MESSAGE_CODE(413)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="xp/coap/gg_coap.h" line="436" column="9" bodyfile="xp/coap/gg_coap.h" bodystart="436" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___co_a_p_1gae4578526d7ea5520b3549cc84fb1af0b" prot="public" static="no">
        <name>GG_COAP_MESSAGE_CODE_UNSUPPORTED_CONTENT_FORMAT</name>
        <initializer>GG_COAP_MESSAGE_CODE(415)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="xp/coap/gg_coap.h" line="437" column="9" bodyfile="xp/coap/gg_coap.h" bodystart="437" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___co_a_p_1gade29eb6e3e4fe657679a93ba10cd0ae7" prot="public" static="no">
        <name>GG_COAP_MESSAGE_CODE_INTERNAL_SERVER_ERROR</name>
        <initializer>GG_COAP_MESSAGE_CODE(500)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="xp/coap/gg_coap.h" line="438" column="9" bodyfile="xp/coap/gg_coap.h" bodystart="438" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___co_a_p_1ga65e8262022cd20ba735b63b1406abff6" prot="public" static="no">
        <name>GG_COAP_MESSAGE_CODE_NOT_IMPLEMENTED</name>
        <initializer>GG_COAP_MESSAGE_CODE(501)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="xp/coap/gg_coap.h" line="439" column="9" bodyfile="xp/coap/gg_coap.h" bodystart="439" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___co_a_p_1ga30d31bf5c12e4e4fa73db836b81ea098" prot="public" static="no">
        <name>GG_COAP_MESSAGE_CODE_BAD_GATEWAY</name>
        <initializer>GG_COAP_MESSAGE_CODE(502)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="xp/coap/gg_coap.h" line="440" column="9" bodyfile="xp/coap/gg_coap.h" bodystart="440" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___co_a_p_1ga882b73e8601ddbb97e985b9828183512" prot="public" static="no">
        <name>GG_COAP_MESSAGE_CODE_SERVICE_UNAVAILABLE</name>
        <initializer>GG_COAP_MESSAGE_CODE(503)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="xp/coap/gg_coap.h" line="441" column="9" bodyfile="xp/coap/gg_coap.h" bodystart="441" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___co_a_p_1ga33252bdcb76be8abb6d04bd9412badb9" prot="public" static="no">
        <name>GG_COAP_MESSAGE_CODE_GATEWAY_TIMEOUT</name>
        <initializer>GG_COAP_MESSAGE_CODE(504)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="xp/coap/gg_coap.h" line="442" column="9" bodyfile="xp/coap/gg_coap.h" bodystart="442" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___co_a_p_1ga2a1f62128a613d428605a5d88791b05d" prot="public" static="no">
        <name>GG_COAP_MESSAGE_CODE_PROXYING_NOT_SUPPORTED</name>
        <initializer>GG_COAP_MESSAGE_CODE(505)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="xp/coap/gg_coap.h" line="443" column="9" bodyfile="xp/coap/gg_coap.h" bodystart="443" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___co_a_p_1ga0f9479411f12060d7c7fccca57db7c8e" prot="public" static="no">
        <name>GG_COAP_MESSAGE_CODE_CLASS_REQUEST</name>
        <initializer>0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="xp/coap/gg_coap.h" line="451" column="9" bodyfile="xp/coap/gg_coap.h" bodystart="451" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___co_a_p_1ga24750d78d99b8e500558ef1e751d0601" prot="public" static="no">
        <name>GG_COAP_MESSAGE_CODE_CLASS_SUCCESS_RESPONSE</name>
        <initializer>2</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="xp/coap/gg_coap.h" line="452" column="9" bodyfile="xp/coap/gg_coap.h" bodystart="452" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___co_a_p_1ga19cbe1a4f6699a7d8023029646a09a8c" prot="public" static="no">
        <name>GG_COAP_MESSAGE_CODE_CLASS_CLIENT_ERROR_RESPONSE</name>
        <initializer>4</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="xp/coap/gg_coap.h" line="453" column="9" bodyfile="xp/coap/gg_coap.h" bodystart="453" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___co_a_p_1ga861bd525ba7100d1d14ef01840bd0b26" prot="public" static="no">
        <name>GG_COAP_MESSAGE_CODE_CLASS_SERVER_ERROR_RESPONSE</name>
        <initializer>5</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="xp/coap/gg_coap.h" line="454" column="9" bodyfile="xp/coap/gg_coap.h" bodystart="454" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___co_a_p_1ga11108bf60375f3614ee9597f62639fb5" prot="public" static="no">
        <name>GG_COAP_MESSAGE_OPTION_NONE</name>
        <initializer>0</initializer>
        <briefdescription>
<para>Not a real option number, only used as a sentinel. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="xp/coap/gg_coap.h" line="457" column="9" bodyfile="xp/coap/gg_coap.h" bodystart="457" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___co_a_p_1gaffb199b118ce2dce8d2050c067ba1a1f" prot="public" static="no">
        <name>GG_COAP_MESSAGE_OPTION_IF_MATCH</name>
        <initializer>1</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="xp/coap/gg_coap.h" line="458" column="9" bodyfile="xp/coap/gg_coap.h" bodystart="458" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___co_a_p_1ga855de57bc39bd45dcd4ef5b77b214094" prot="public" static="no">
        <name>GG_COAP_MESSAGE_OPTION_URI_HOST</name>
        <initializer>3</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="xp/coap/gg_coap.h" line="459" column="9" bodyfile="xp/coap/gg_coap.h" bodystart="459" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___co_a_p_1ga224a3fef18a42f26150ab3287d7883b2" prot="public" static="no">
        <name>GG_COAP_MESSAGE_OPTION_ETAG</name>
        <initializer>4</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="xp/coap/gg_coap.h" line="460" column="9" bodyfile="xp/coap/gg_coap.h" bodystart="460" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___co_a_p_1gafe8fc89aedc3e9738fb2002b950f8870" prot="public" static="no">
        <name>GG_COAP_MESSAGE_OPTION_IF_NONE_MATCH</name>
        <initializer>5</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="xp/coap/gg_coap.h" line="461" column="9" bodyfile="xp/coap/gg_coap.h" bodystart="461" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___co_a_p_1ga1a2e7a904bfb73822efecc290a2fdb02" prot="public" static="no">
        <name>GG_COAP_MESSAGE_OPTION_URI_PORT</name>
        <initializer>7</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="xp/coap/gg_coap.h" line="462" column="9" bodyfile="xp/coap/gg_coap.h" bodystart="462" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___co_a_p_1ga1588ed2afaba6b05165701b4a0d9d66e" prot="public" static="no">
        <name>GG_COAP_MESSAGE_OPTION_LOCATION_PATH</name>
        <initializer>8</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="xp/coap/gg_coap.h" line="463" column="9" bodyfile="xp/coap/gg_coap.h" bodystart="463" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___co_a_p_1gaf96b2979535e8e1e9b9f80c2fa89bf53" prot="public" static="no">
        <name>GG_COAP_MESSAGE_OPTION_URI_PATH</name>
        <initializer>11</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="xp/coap/gg_coap.h" line="464" column="9" bodyfile="xp/coap/gg_coap.h" bodystart="464" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___co_a_p_1ga0b44a7636ab7c441ea061dd7755512d8" prot="public" static="no">
        <name>GG_COAP_MESSAGE_OPTION_CONTENT_FORMAT</name>
        <initializer>12</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="xp/coap/gg_coap.h" line="465" column="9" bodyfile="xp/coap/gg_coap.h" bodystart="465" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___co_a_p_1ga55342cd50ac04b14b37fa2d58f191e1d" prot="public" static="no">
        <name>GG_COAP_MESSAGE_OPTION_MAX_AGE</name>
        <initializer>14</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="xp/coap/gg_coap.h" line="466" column="9" bodyfile="xp/coap/gg_coap.h" bodystart="466" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___co_a_p_1ga18731b78523b3032702749ca1d3e23ee" prot="public" static="no">
        <name>GG_COAP_MESSAGE_OPTION_URI_QUERY</name>
        <initializer>15</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="xp/coap/gg_coap.h" line="467" column="9" bodyfile="xp/coap/gg_coap.h" bodystart="467" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___co_a_p_1ga55f304ae573b8f7f9aecd632f4cfc665" prot="public" static="no">
        <name>GG_COAP_MESSAGE_OPTION_ACCEPT</name>
        <initializer>17</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="xp/coap/gg_coap.h" line="468" column="9" bodyfile="xp/coap/gg_coap.h" bodystart="468" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___co_a_p_1gad1ca18cb3375a71bc7ecd2d7b7c281a5" prot="public" static="no">
        <name>GG_COAP_MESSAGE_OPTION_LOCATION_QUERY</name>
        <initializer>20</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="xp/coap/gg_coap.h" line="469" column="9" bodyfile="xp/coap/gg_coap.h" bodystart="469" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___co_a_p_1ga2f68ecf1d1119410cf81a9cc27513bdf" prot="public" static="no">
        <name>GG_COAP_MESSAGE_OPTION_PROXY_URI</name>
        <initializer>35</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="xp/coap/gg_coap.h" line="470" column="9" bodyfile="xp/coap/gg_coap.h" bodystart="470" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___co_a_p_1ga012bb0efd86bb48061713b57f833bdab" prot="public" static="no">
        <name>GG_COAP_MESSAGE_OPTION_PROXY_SCHEME</name>
        <initializer>39</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="xp/coap/gg_coap.h" line="471" column="9" bodyfile="xp/coap/gg_coap.h" bodystart="471" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___co_a_p_1gabbb576baba2fdc6cf6ccea53bf75f2c1" prot="public" static="no">
        <name>GG_COAP_MESSAGE_OPTION_SIZE1</name>
        <initializer>60</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="xp/coap/gg_coap.h" line="472" column="9" bodyfile="xp/coap/gg_coap.h" bodystart="472" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___co_a_p_1ga8ca3af431a8589ee5c0a2a39052d34b0" prot="public" static="no">
        <name>GG_COAP_MESSAGE_OPTION_SIZE2</name>
        <initializer>28</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="xp/coap/gg_coap.h" line="473" column="9" bodyfile="xp/coap/gg_coap.h" bodystart="473" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___co_a_p_1gae68c5ec5b8a92b9dc65e8b1d366fbb83" prot="public" static="no">
        <name>GG_COAP_MESSAGE_OPTION_BLOCK1</name>
        <initializer>27</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="xp/coap/gg_coap.h" line="474" column="9" bodyfile="xp/coap/gg_coap.h" bodystart="474" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___co_a_p_1gad68f8beadacd41926448739835246bfd" prot="public" static="no">
        <name>GG_COAP_MESSAGE_OPTION_BLOCK2</name>
        <initializer>23</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="xp/coap/gg_coap.h" line="475" column="9" bodyfile="xp/coap/gg_coap.h" bodystart="475" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___co_a_p_1ga1df2ab59c9ade515856c678be7ed57bb" prot="public" static="no">
        <name>GG_COAP_MESSAGE_OPTION_START_OFFSET</name>
        <initializer>2048</initializer>
        <briefdescription>
<para>vendor-specific option number </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="xp/coap/gg_coap.h" line="476" column="9" bodyfile="xp/coap/gg_coap.h" bodystart="476" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___co_a_p_1ga894635aaf8305f82a9d1ea8b1d10b828" prot="public" static="no">
        <name>GG_COAP_MESSAGE_OPTION_EXTENDED_ERROR</name>
        <initializer>2049</initializer>
        <briefdescription>
<para>vendor-specific extended error code option number </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="xp/coap/gg_coap.h" line="477" column="9" bodyfile="xp/coap/gg_coap.h" bodystart="477" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___co_a_p_1ga0a06f9516b2b2160a31b175c9468785c" prot="public" static="no">
        <name>GG_COAP_MESSAGE_FORMAT_ID_TEXT_PLAIN</name>
        <initializer>0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="xp/coap/gg_coap.h" line="480" column="9" bodyfile="xp/coap/gg_coap.h" bodystart="480" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___co_a_p_1ga86573f76a4ae632e58760abfe65eecd1" prot="public" static="no">
        <name>GG_COAP_MESSAGE_FORMAT_ID_LINK_FORMAT</name>
        <initializer>40</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="xp/coap/gg_coap.h" line="481" column="9" bodyfile="xp/coap/gg_coap.h" bodystart="481" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___co_a_p_1ga28dfbcf1c273f0be845de1193f94f3d6" prot="public" static="no">
        <name>GG_COAP_MESSAGE_FORMAT_ID_XML</name>
        <initializer>41</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="xp/coap/gg_coap.h" line="482" column="9" bodyfile="xp/coap/gg_coap.h" bodystart="482" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___co_a_p_1ga4f336e82321c1fb001ccd4d46ee1e23a" prot="public" static="no">
        <name>GG_COAP_MESSAGE_FORMAT_ID_OCTET_STREAM</name>
        <initializer>42</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="xp/coap/gg_coap.h" line="483" column="9" bodyfile="xp/coap/gg_coap.h" bodystart="483" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___co_a_p_1gadc548f3ba766ae31809db9a9c0d72ee4" prot="public" static="no">
        <name>GG_COAP_MESSAGE_FORMAT_ID_EXI</name>
        <initializer>47</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="xp/coap/gg_coap.h" line="484" column="9" bodyfile="xp/coap/gg_coap.h" bodystart="484" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___co_a_p_1ga363c30f0158e387c1ea64d0b28b5fee3" prot="public" static="no">
        <name>GG_COAP_MESSAGE_FORMAT_ID_JSON</name>
        <initializer>50</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="xp/coap/gg_coap.h" line="485" column="9" bodyfile="xp/coap/gg_coap.h" bodystart="485" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___co_a_p_1ga4cf83904869ed1ab4216d2a496362d9e" prot="public" static="no">
        <name>GG_COAP_MESSAGE_FORMAT_ID_CBOR</name>
        <initializer>60</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="xp/coap/gg_coap.h" line="486" column="9" bodyfile="xp/coap/gg_coap.h" bodystart="486" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___co_a_p_1ga646e60910938e3e1b75d96bbc102123a" prot="public" static="no">
        <name>GG_ERROR_COAP_UNSUPPORTED_VERSION</name>
        <initializer>(<ref refid="group___errors_1ga802c71bd9ead8b8af2dd638a62e99bf5" kindref="member">GG_ERROR_BASE_COAP</ref> - 0)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="xp/coap/gg_coap.h" line="489" column="9" bodyfile="xp/coap/gg_coap.h" bodystart="489" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___co_a_p_1ga46db4c807a793b7cb64444af5b6fa3af" prot="public" static="no">
        <name>GG_ERROR_COAP_RESET</name>
        <initializer>(<ref refid="group___errors_1ga802c71bd9ead8b8af2dd638a62e99bf5" kindref="member">GG_ERROR_BASE_COAP</ref> - 1)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="xp/coap/gg_coap.h" line="490" column="9" bodyfile="xp/coap/gg_coap.h" bodystart="490" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___co_a_p_1gae4037ccbc713cce5a3fe4640256c468b" prot="public" static="no">
        <name>GG_ERROR_COAP_UNEXPECTED_MESSAGE</name>
        <initializer>(<ref refid="group___errors_1ga802c71bd9ead8b8af2dd638a62e99bf5" kindref="member">GG_ERROR_BASE_COAP</ref> - 2)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="xp/coap/gg_coap.h" line="491" column="9" bodyfile="xp/coap/gg_coap.h" bodystart="491" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___co_a_p_1gaa725f61d1e89742d4021551529417f7f" prot="public" static="no">
        <name>GG_ERROR_COAP_SEND_FAILURE</name>
        <initializer>(<ref refid="group___errors_1ga802c71bd9ead8b8af2dd638a62e99bf5" kindref="member">GG_ERROR_BASE_COAP</ref> - 3)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="xp/coap/gg_coap.h" line="492" column="9" bodyfile="xp/coap/gg_coap.h" bodystart="492" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___co_a_p_1gaeaad186bde035e0bb406e2e9c132b87a" prot="public" static="no">
        <name>GG_ERROR_COAP_UNEXPECTED_BLOCK</name>
        <initializer>(<ref refid="group___errors_1ga802c71bd9ead8b8af2dd638a62e99bf5" kindref="member">GG_ERROR_BASE_COAP</ref> - 4)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="xp/coap/gg_coap.h" line="493" column="9" bodyfile="xp/coap/gg_coap.h" bodystart="493" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___co_a_p_1gaf076add8eda74222329381fd22b382c8" prot="public" static="no">
        <name>GG_ERROR_COAP_INVALID_RESPONSE</name>
        <initializer>(<ref refid="group___errors_1ga802c71bd9ead8b8af2dd638a62e99bf5" kindref="member">GG_ERROR_BASE_COAP</ref> - 5)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="xp/coap/gg_coap.h" line="494" column="9" bodyfile="xp/coap/gg_coap.h" bodystart="494" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___co_a_p_1ga606314eecf7ecf23696a978370679bb0" prot="public" static="no">
        <name>GG_ERROR_COAP_ETAG_MISMATCH</name>
        <initializer>(<ref refid="group___errors_1ga802c71bd9ead8b8af2dd638a62e99bf5" kindref="member">GG_ERROR_BASE_COAP</ref> - 6)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="xp/coap/gg_coap.h" line="495" column="9" bodyfile="xp/coap/gg_coap.h" bodystart="495" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___co_a_p_1ga2ebd3162a7f040da84a2921eb1c3ff24" prot="public" static="no">
        <name>GG_COAP_MESSAGE_MAX_OPTION_COUNT</name>
        <initializer>1024</initializer>
        <briefdescription>
<para>Sanity-check bound for number of options in a message. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="xp/coap/gg_coap.h" line="498" column="9" bodyfile="xp/coap/gg_coap.h" bodystart="498" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___co_a_p_1gaff0549ce4eec0fea22ab1a2a02e5272e" prot="public" static="no">
        <name>GG_COAP_MESSAGE_MAX_OPTION_SIZE</name>
        <initializer>(269 + 65536)</initializer>
        <briefdescription>
<para>Maximum possible size of an option payload. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="xp/coap/gg_coap.h" line="499" column="9" bodyfile="xp/coap/gg_coap.h" bodystart="499" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___co_a_p_1gaa4f5ba5ff2d6f69943d26ce6ee233f44" prot="public" static="no">
        <name>GG_COAP_MESSAGE_MAX_ETAG_OPTION_SIZE</name>
        <initializer>8</initializer>
        <briefdescription>
<para>Maximum size of an ETag option. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="xp/coap/gg_coap.h" line="500" column="9" bodyfile="xp/coap/gg_coap.h" bodystart="500" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___co_a_p_1ga471fcd17b8dbbf921ef31240edc67dba" prot="public" static="no">
        <name>GG_COAP_EXTENDED_ERROR_OPTION_SIZE</name>
        <initializer>8</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="xp/coap/gg_coap.h" line="503" column="9" bodyfile="xp/coap/gg_coap.h" bodystart="503" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___co_a_p_1ga0949b2c97a3ef7afde6f93fc113691c9" prot="public" static="no">
        <name>GG_COAP_DEFAULT_MAX_RETRANSMIT</name>
        <initializer>4</initializer>
        <briefdescription>
<para>Maximum number of retransmissions, by default. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="xp/coap/gg_coap.h" line="505" column="9" bodyfile="xp/coap/gg_coap.h" bodystart="505" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___co_a_p_1ga5213f173b1655bc3d6ba62511f44c481" prot="public" static="no">
        <name>GG_COAP_INVALID_REQUEST_HANDLE</name>
        <initializer>0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="xp/coap/gg_coap.h" line="508" column="9" bodyfile="xp/coap/gg_coap.h" bodystart="508" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___co_a_p_1ga9c86ccf44b9e0fce954109191ebdc1c0" prot="public" static="no">
        <name>GG_COAP_MESSAGE_OPTION_PARAM_EMPTY_N</name>
        <param><defname>_number</defname></param>
        <initializer>{{ (_number), <ref refid="group___co_a_p_1ggab552ef6ef30afd903e89dcc301823b54a6bbe2aa5169ced2e9702240a46287c44" kindref="member">GG_COAP_MESSAGE_OPTION_TYPE_EMPTY</ref>, { .uint = 0 }}, <ref refid="group___types_1ga070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>, <ref refid="group___types_1ga070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="xp/coap/gg_coap.h" line="513" column="9" bodyfile="xp/coap/gg_coap.h" bodystart="513" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___co_a_p_1ga42c2bd384fb0f45b0d322073eec20167" prot="public" static="no">
        <name>GG_COAP_MESSAGE_OPTION_PARAM_EMPTY</name>
        <param><defname>_option</defname></param>
        <initializer>GG_COAP_MESSAGE_OPTION_PARAM_EMPTY_N(GG_COAP_MESSAGE_OPTION_ ## _option)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Initializer for an GG_COAP_MESSAGE_OPTION_TYPE_EMPTY option parameter. Example: <ref refid="group___co_a_p_1ga42c2bd384fb0f45b0d322073eec20167" kindref="member">GG_COAP_MESSAGE_OPTION_PARAM_EMPTY(IF_NONE_MATCH)</ref> <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>_option</parametername>
</parameternamelist>
<parameterdescription>
<para>Name of the option. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="xp/coap/gg_coap.h" line="520" column="9" bodyfile="xp/coap/gg_coap.h" bodystart="520" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___co_a_p_1ga6df069a40ec91cf42c1f542ea2bbafe5" prot="public" static="no">
        <name>GG_COAP_MESSAGE_OPTION_PARAM_UINT_N</name>
        <param><defname>_number</defname></param>
        <param><defname>_uint</defname></param>
        <initializer>{{ (_number), <ref refid="group___co_a_p_1ggab552ef6ef30afd903e89dcc301823b54a9e3027c39f2ae605c922fc7fc9b36b4c" kindref="member">GG_COAP_MESSAGE_OPTION_TYPE_UINT</ref>, { .uint = (_uint) }}, <ref refid="group___types_1ga070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>, <ref refid="group___types_1ga070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="xp/coap/gg_coap.h" line="523" column="9" bodyfile="xp/coap/gg_coap.h" bodystart="523" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___co_a_p_1ga826886c7a8708763fe7a705b10a7dba7" prot="public" static="no">
        <name>GG_COAP_MESSAGE_OPTION_PARAM_UINT</name>
        <param><defname>_option</defname></param>
        <param><defname>_uint</defname></param>
        <initializer>GG_COAP_MESSAGE_OPTION_PARAM_UINT_N(GG_COAP_MESSAGE_OPTION_ ## _option, (_uint))</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Initializer for an GG_COAP_MESSAGE_OPTION_TYPE_UINT option parameter. Example: <ref refid="group___co_a_p_1ga826886c7a8708763fe7a705b10a7dba7" kindref="member">GG_COAP_MESSAGE_OPTION_PARAM_UINT(URI_PORT, 5683)</ref></para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>_option</parametername>
</parameternamelist>
<parameterdescription>
<para>Name of the option. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>_uint</parametername>
</parameternamelist>
<parameterdescription>
<para>Integer value. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="xp/coap/gg_coap.h" line="533" column="9" bodyfile="xp/coap/gg_coap.h" bodystart="533" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___co_a_p_1gac3c9f535a5aaf7b1e2091ab3f2db7164" prot="public" static="no">
        <name>GG_COAP_MESSAGE_OPTION_PARAM_STRING_NL</name>
        <param><defname>_number</defname></param>
        <param><defname>_string</defname></param>
        <param><defname>_length</defname></param>
        <initializer>{{ (_number), <ref refid="group___co_a_p_1ggab552ef6ef30afd903e89dcc301823b54a26300f90b742cd9abec6db9ecf48bf1f" kindref="member">GG_COAP_MESSAGE_OPTION_TYPE_STRING</ref>, { .string = { (_string), (_length)}}}, <ref refid="group___types_1ga070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>, <ref refid="group___types_1ga070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="xp/coap/gg_coap.h" line="536" column="9" bodyfile="xp/coap/gg_coap.h" bodystart="536" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___co_a_p_1ga916ca1e998f7dc94a811dd46996da86a" prot="public" static="no">
        <name>GG_COAP_MESSAGE_OPTION_PARAM_STRING_L</name>
        <param><defname>_option</defname></param>
        <param><defname>_string</defname></param>
        <param><defname>_length</defname></param>
        <initializer>GG_COAP_MESSAGE_OPTION_PARAM_STRING_NL(GG_COAP_MESSAGE_OPTION_ ## _option, (_string), (_length))</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Initializer for a <ref refid="group___co_a_p_1ggab552ef6ef30afd903e89dcc301823b54a26300f90b742cd9abec6db9ecf48bf1f" kindref="member">GG_COAP_MESSAGE_OPTION_TYPE_STRING</ref> option parameter, specifying the length. Example: GG_COAP_MESSAGE_OPTION_PARAM_STRING_L(URI_PATH, &quot;hello&quot;, 5)</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>_option</parametername>
</parameternamelist>
<parameterdescription>
<para>Name of the option. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>_string</parametername>
</parameternamelist>
<parameterdescription>
<para>String value (doesn&apos;t need to be null-terminated). </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>_length</parametername>
</parameternamelist>
<parameterdescription>
<para>Size of the string. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="xp/coap/gg_coap.h" line="547" column="9" bodyfile="xp/coap/gg_coap.h" bodystart="547" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___co_a_p_1ga5d4f26511b1c31269d42fcdc76d0b6c0" prot="public" static="no">
        <name>GG_COAP_MESSAGE_OPTION_PARAM_STRING_N</name>
        <param><defname>_number</defname></param>
        <param><defname>_string</defname></param>
        <initializer>GG_COAP_MESSAGE_OPTION_PARAM_STRING_NL((_number), (_string), 0)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="xp/coap/gg_coap.h" line="550" column="9" bodyfile="xp/coap/gg_coap.h" bodystart="550" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___co_a_p_1ga09ac51f227d5f94f18c8cbd8840b1c0f" prot="public" static="no">
        <name>GG_COAP_MESSAGE_OPTION_PARAM_STRING</name>
        <param><defname>_option</defname></param>
        <param><defname>_string</defname></param>
        <initializer>GG_COAP_MESSAGE_OPTION_PARAM_STRING_NL(GG_COAP_MESSAGE_OPTION_ ## _option, (_string), 0)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Initializer for a <ref refid="group___co_a_p_1ggab552ef6ef30afd903e89dcc301823b54a26300f90b742cd9abec6db9ecf48bf1f" kindref="member">GG_COAP_MESSAGE_OPTION_TYPE_STRING</ref> option parameter, with a null-terminated string. Example: GG_COAP_MESSAGE_OPTION_PARAM_STRING(URI_PATH, &quot;hello&quot;)</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>_option</parametername>
</parameternamelist>
<parameterdescription>
<para>Name of the option. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>_string</parametername>
</parameternamelist>
<parameterdescription>
<para>String value (doesn&apos;t need to be null-terminated). </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="xp/coap/gg_coap.h" line="560" column="9" bodyfile="xp/coap/gg_coap.h" bodystart="560" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___co_a_p_1gaa8ab6d01229c74cd9020de44181b2b70" prot="public" static="no">
        <name>GG_COAP_MESSAGE_OPTION_PARAM_OPAQUE_N</name>
        <param><defname>_number</defname></param>
        <param><defname>_bytes</defname></param>
        <param><defname>_size</defname></param>
        <initializer>{{ (_number), <ref refid="group___co_a_p_1ggab552ef6ef30afd903e89dcc301823b54a4872e734464fe48ccee8f64e5205a7c9" kindref="member">GG_COAP_MESSAGE_OPTION_TYPE_OPAQUE</ref>, { .opaque = { (_bytes), (_size) }}}, <ref refid="group___types_1ga070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>, <ref refid="group___types_1ga070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="xp/coap/gg_coap.h" line="563" column="9" bodyfile="xp/coap/gg_coap.h" bodystart="563" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___co_a_p_1ga86d85946d0cb9e64f58035805cca81e4" prot="public" static="no">
        <name>GG_COAP_MESSAGE_OPTION_PARAM_OPAQUE</name>
        <param><defname>_option</defname></param>
        <param><defname>_bytes</defname></param>
        <param><defname>_size</defname></param>
        <initializer>GG_COAP_MESSAGE_OPTION_PARAM_OPAQUE_N(GG_COAP_MESSAGE_OPTION_ ## _option, (_bytes), (_size))</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Initializer for a <ref refid="group___co_a_p_1ggab552ef6ef30afd903e89dcc301823b54a4872e734464fe48ccee8f64e5205a7c9" kindref="member">GG_COAP_MESSAGE_OPTION_TYPE_OPAQUE</ref> option parameter. Example: <ref refid="group___co_a_p_1ga86d85946d0cb9e64f58035805cca81e4" kindref="member">GG_COAP_MESSAGE_OPTION_PARAM_OPAQUE(ETAG, etag_byte_array, sizeof(etag_byte_array))</ref></para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>_option</parametername>
</parameternamelist>
<parameterdescription>
<para>Name of the option. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>_bytes</parametername>
</parameternamelist>
<parameterdescription>
<para>Byte array. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>_size</parametername>
</parameternamelist>
<parameterdescription>
<para>Size of the byte array. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="xp/coap/gg_coap.h" line="574" column="9" bodyfile="xp/coap/gg_coap.h" bodystart="574" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___co_a_p_1ga29bb8ed12ae4d33b66f773417b8205fd" prot="public" static="no">
        <name>GG_COAP_MESSAGE_OPTION_PARAM_NEXT</name>
        <param><defname>_option</defname></param>
        <initializer>((_option)-&gt;next ? (_option)-&gt;next : (_option) + 1)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Stepping macro to follow option params linkage, allowing for next-pointer and array-layout traversal. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="xp/coap/gg_coap.h" line="580" column="9" bodyfile="xp/coap/gg_coap.h" bodystart="580" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___co_a_p_1ga000454047f6425498162c53f1dfd861f" prot="public" static="no">
        <name>GG_COAP_BLOCKWISE_DEFAULT_BLOCK_SIZE</name>
        <initializer>1024</initializer>
        <briefdescription>
<para>Default block size. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="xp/coap/gg_coap_blockwise.h" line="102" column="9" bodyfile="xp/coap/gg_coap_blockwise.h" bodystart="102" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___co_a_p_1ga05a57fd005e2c4a442197fe5265ec240" prot="public" static="no">
        <name>GG_COAP_GROUP_REQUEST_FILTER_MAX_GROUP</name>
        <initializer>4</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="xp/coap/gg_coap_filters.h" line="41" column="9" bodyfile="xp/coap/gg_coap_filters.h" bodystart="41" bodyend="-1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para>CoAP client and server library</para>
<para>CoAP Blockwise Transfers </para>
    </detaileddescription>
  </compounddef>
</doxygen>
